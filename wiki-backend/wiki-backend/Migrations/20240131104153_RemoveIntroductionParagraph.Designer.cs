// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wiki_backend.DatabaseServices;

#nullable disable

namespace wiki_backend.Migrations
{
    [DbContext(typeof(WikiDbContext))]
    [Migration("20240131104153_RemoveIntroductionParagraph")]
    partial class RemoveIntroductionParagraph
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImageText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WikiPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WikiPageId");

                    b.ToTable("Paragraphs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Optio quae id sequi aut nostrum optio modi. Et est alias et error. Sit eos nostrum enim.\n\nOccaecati numquam et laboriosam quod est deserunt accusamus est facilis. Vitae porro accusantium est facere consequatur. Blanditiis voluptatem minus optio qui dolorem et laudantium.\n\nUt earum exercitationem sed facilis laborum. Natus veritatis qui voluptas temporibus dolores distinctio nisi temporibus. Consequatur delectus nemo neque eveniet autem culpa voluptatem.\n\nOccaecati voluptates voluptates commodi repellendus molestiae ut. Laboriosam velit fugiat omnis autem laborum. Quis quis eum non neque pariatur. Recusandae maiores minus. Dolores culpa ad assumenda pariatur blanditiis animi dolorem qui harum. Aspernatur deserunt omnis quam maxime sit necessitatibus animi.\n\nQuisquam est laborum corporis commodi et quos aspernatur harum nihil. Voluptates id odit quia animi recusandae quaerat est veniam. Soluta eos et rerum vero laudantium sint possimus aperiam. Enim repellat debitis. Saepe rerum perspiciatis blanditiis ipsum unde.",
                            Title = "Example Paragraph 1",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 2,
                            Content = "Sit facilis quis. Cumque ab accusantium. Sed sit est et veniam. Rerum pariatur nisi quis et eveniet quas. Cupiditate praesentium qui illum dolore.\n\nNulla placeat ut excepturi voluptatem. Modi culpa recusandae nihil incidunt nisi. Quam dolor reprehenderit beatae aut deserunt reiciendis totam ea. Hic sit sequi aut. Ea perferendis est sed.\n\nDolores adipisci unde qui quis iste aliquam. Aut voluptates culpa. Placeat voluptas qui beatae harum accusantium commodi. Dolor iusto sunt. Molestias modi quibusdam dicta deleniti doloremque tempora quia vel et. Id nobis quo vel aliquam quis corrupti quasi cum.\n\nNobis qui ut. Fuga placeat molestiae provident omnis quas quas sit beatae. Corporis ut nisi sed quis. Reprehenderit quia sed rem. Corrupti fugit magni natus recusandae.\n\nIn cupiditate itaque placeat cupiditate nesciunt eum pariatur distinctio. Inventore quia explicabo excepturi sapiente nobis. Quam ea aut aut quis. Et explicabo nam incidunt maiores. Consequatur molestias labore consequatur. Praesentium suscipit sed inventore.",
                            Title = "Example Paragraph 2",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Nesciunt sed iusto. Eligendi dignissimos est. Enim voluptas numquam aut dolores. Libero beatae pariatur. Ipsa mollitia aspernatur id hic magnam occaecati dolorem doloremque asperiores.\n\nCum ea quis quia minus necessitatibus eos nihil aut. Voluptatem veritatis rerum id sunt. Necessitatibus qui excepturi. Magni quasi omnis. Voluptate reiciendis reiciendis quisquam.\n\nNihil eos illo harum quod illo vel. Magnam nihil nihil officiis. Excepturi labore voluptatem ipsum dolores iste officia facilis autem.\n\nEst atque dolore dolor est aut dicta soluta suscipit. Consequatur cupiditate sit sunt. Aut rem fugiat doloremque molestias rem ut facilis error tenetur. Consequatur repellat exercitationem.\n\nEst sint ab nemo sunt nesciunt reiciendis similique quaerat est. Ex et distinctio iste tempora eaque dolores placeat voluptatem velit. Ut est dolorum voluptate voluptatem quia atque. Corporis voluptate eos.",
                            Title = "Example Paragraph 3",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 4,
                            Content = "Voluptates est facilis ullam et ipsum eos voluptates repellat quas. Ut officia nihil laudantium labore ipsa possimus qui reiciendis molestiae. Odio aliquam et temporibus cumque aliquid.\n\nCommodi assumenda debitis laudantium. Vel in excepturi voluptatum tempora. Similique suscipit et et rerum.\n\nEos ut odit sint repellendus consectetur at sed. Porro praesentium rem rem voluptas accusantium minima odit quasi voluptas. Vel ipsam dolores soluta provident tempore voluptas omnis.\n\nTotam magnam dolor sit adipisci eos aut non dolor impedit. Labore nihil sunt officia et aut quam ea autem ex. Illo illo et vitae vitae occaecati voluptatem possimus neque. Sunt asperiores iure similique quis perferendis et alias. Aliquam placeat laboriosam eaque perspiciatis.\n\nConsectetur culpa minus accusamus. Eveniet perspiciatis vitae ea iusto qui laborum eum eligendi. Sequi ut error numquam. Sint similique sed est et et saepe dolorum quae. Eaque nam in eligendi sint magni sint.",
                            Title = "Example Paragraph 4",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 5,
                            Content = "Error consequatur perferendis nostrum temporibus ut et. Veniam sit debitis quia. Ipsum iste sunt. Aut ullam ut consequatur est dolor qui. Voluptatibus distinctio qui fugiat aliquam incidunt velit et.\n\nQui consequuntur magnam rem. Dolor ut ut amet perferendis a corporis consequatur. Harum minus dolores ipsam eum dicta saepe. Voluptatibus beatae sunt quasi laborum laudantium ut nemo voluptas. Dolorem ut in.\n\nNumquam ipsam molestias dolor aut officia blanditiis. Repudiandae eos labore omnis. Vel perferendis est ut commodi aut pariatur. Numquam eaque pariatur officiis in ut laboriosam. Recusandae deserunt quia recusandae nobis magni ab ipsam maiores. Qui qui autem non aut dolorem id consequuntur quis doloribus.\n\nNesciunt eaque enim. In minus saepe rerum aut fuga necessitatibus vel. Veniam sed aspernatur nam. Ea vel quis. Molestiae occaecati vero dolorum temporibus natus sit consequatur harum nisi. Nulla et veniam.\n\nNulla est dolorum rerum molestias velit non et. Aperiam tempore commodi sunt ut. Magni vel neque voluptatem dolor est. Blanditiis illum aut temporibus architecto in.",
                            Title = "Example Paragraph 5",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 6,
                            Content = "Mollitia dolorem consequatur consequatur magnam. Ut pariatur excepturi et soluta atque eaque ratione dicta. Pariatur qui voluptas voluptatum quis odio. Est et ut eius et. Quod dolores nihil cum maxime dolor ea vel ut.\n\nAsperiores et iure omnis. Dolorum et aut nesciunt totam quis. Voluptatibus et quam laborum facere dolore qui consequatur occaecati numquam. Magni nulla explicabo voluptatem et voluptatem qui.\n\nEa voluptatibus est nulla culpa ipsam consequatur. Et atque voluptatem veritatis perspiciatis provident. Quia sed et nesciunt eveniet voluptates est. Quae ut impedit et dolorum laboriosam libero quo tempore laudantium.\n\nAspernatur est dicta et. Enim ducimus similique quia tempora sequi. Blanditiis architecto maiores voluptatem est et.\n\nVeritatis iure illum quae similique. Modi pariatur quam nihil facere aliquam ducimus commodi quia commodi. Alias voluptas quia nesciunt vero omnis aperiam est soluta. Maxime dolorem accusantium qui voluptatem. Est fuga minus deleniti qui. Incidunt asperiores quos sit maiores laudantium.",
                            Title = "Example Paragraph 6",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 7,
                            Content = "Quia architecto omnis quam aspernatur. Aut sit architecto at blanditiis delectus. Non voluptatibus sit iure quasi. Est vitae occaecati voluptatem. Numquam corrupti consequatur consequatur atque.\n\nExcepturi qui velit porro. Dolorum repudiandae corrupti et. Libero alias alias accusantium et. Enim itaque nesciunt dolores. Repellendus culpa non maxime deserunt dolorem quia fugiat. Ullam sapiente vero et est.\n\nVoluptate et excepturi exercitationem modi nulla vel eveniet. Dolorem officia autem assumenda. Velit ut in error. Quibusdam quisquam error dolor ipsam provident hic esse ad.\n\nExercitationem ut qui error voluptas distinctio rerum aut. Qui voluptate fugit quae dolor distinctio aliquid. Omnis id corporis. Voluptatem doloremque sit et sit voluptatum inventore omnis et alias. Ducimus accusantium nihil in rerum. Sequi aut eligendi aut dolore rerum quia.\n\nIure ea cumque. Odit libero nihil molestiae. Error iste perferendis labore dolorem beatae in molestiae minima et.",
                            Title = "Example Paragraph 7",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 8,
                            Content = "Expedita aut nostrum. Itaque et exercitationem reprehenderit unde magni et velit. Voluptatem nihil ut. Eligendi dolorem aliquam eos optio quasi accusantium dolor qui ut. Sit illo unde rerum molestias sint quia amet numquam.\n\nDolorem nihil ipsa. Corporis nam reiciendis explicabo non est ut ut. Reprehenderit illo qui atque nihil. Officia quam quo incidunt nam.\n\nUllam sunt rerum voluptate accusantium eos et. Omnis omnis sunt animi. Assumenda ducimus asperiores est possimus autem eos. Temporibus ipsa earum commodi ipsam ut neque ab commodi. Delectus consequatur necessitatibus odio quo.\n\nEveniet asperiores ut impedit quia omnis ipsum. Blanditiis rerum nemo itaque. Quisquam quod blanditiis consequatur ducimus natus omnis similique blanditiis.\n\nOmnis est repellendus. Neque eos laborum harum debitis veniam accusantium ipsam tenetur est. Exercitationem non nisi. Deserunt beatae et sint quaerat.",
                            Title = "Example Paragraph 8",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 9,
                            Content = "Omnis sunt nobis. Aut aut tempora praesentium repudiandae et aut nesciunt sit libero. Aliquid molestiae ut iste repellendus nostrum consectetur. Dignissimos nulla ut. Ut non atque ut deleniti illo voluptate.\n\nRerum ipsam sed. Qui consequatur aut cumque voluptas eaque quis. Doloremque velit quos nostrum sed ea modi veritatis voluptas aut. Et expedita et.\n\nNobis sed officiis in officiis. Asperiores explicabo reprehenderit iste a est. Facere repellendus porro accusantium fuga. Nam architecto perferendis id iure dolorem provident reiciendis. Est tempore quisquam sit minus aut nostrum beatae. Beatae nisi consequuntur porro eligendi natus aperiam veritatis.\n\nQuod libero deserunt hic enim. Eum veniam aperiam quos. Saepe quo officiis vero labore. Nobis nulla quisquam. Sunt numquam quis aut et accusamus aliquid quam ex.\n\nQuis accusamus ex at consequatur dignissimos. Ut dolore consequuntur non non dolorum reprehenderit est quis ut. Illum ullam veritatis qui doloribus odit temporibus id commodi nemo. Veritatis ad quas accusamus id dolorem reprehenderit. Quisquam maiores delectus est qui ea qui veritatis facere. Ut in odit nobis.",
                            Title = "Example Paragraph 9",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 10,
                            Content = "Autem laboriosam omnis libero iste est harum dicta ipsam. Qui ut laboriosam enim nobis quia quos. Labore possimus voluptatem sequi est officia et. Numquam eaque reiciendis ullam quis. Eos illo commodi assumenda est deserunt facilis in culpa. Voluptatem pariatur perferendis ipsum molestias eum eveniet iste.\n\nUt eos praesentium et molestiae ipsam. Sequi exercitationem sunt corrupti. Quo cumque ipsum numquam qui. Cum inventore maiores eum asperiores. Et consectetur nemo quam quae molestiae illum minima aliquam.\n\nAssumenda ut quam explicabo accusantium numquam. Non in tempora corrupti voluptatum ad. Laboriosam id dignissimos accusantium ducimus. Nisi impedit atque excepturi pariatur aut ullam eligendi. Aut quasi quia omnis autem ab dolores eos ullam vitae. Est odit at quisquam repellendus voluptates sit.\n\nEt sed voluptatem voluptas aliquam est. Vel dolorem commodi voluptatem ipsum in vel in sit. Ut exercitationem et est. Velit minus placeat est atque harum sunt. Laboriosam soluta rerum illo officiis voluptatum ut.\n\nAperiam nihil quia quo autem fuga. Omnis neque fuga praesentium. Iusto eum quaerat ut dolore veritatis. Vitae officiis delectus sed iste vel. Reiciendis et iure fugit et vero veniam distinctio adipisci.",
                            Title = "Example Paragraph 10",
                            WikiPageId = 2
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.StyleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightInnerColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListLinkTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WikiName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleColor = "#526cad",
                            ArticleRightColor = "#3c5fb8",
                            ArticleRightInnerColor = "#2b4ea6",
                            BodyColor = "#507ced",
                            FooterListLinkTextColor = "#1d305e",
                            FooterListTextColor = "#233a71",
                            Logo = "/img/logo.png",
                            WikiName = "Your Wiki"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteSub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WikiPages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleNote = "Example RoleNote 1",
                            SiteSub = "Example SiteSub 1",
                            Title = "Example Page 1"
                        },
                        new
                        {
                            Id = 2,
                            RoleNote = "Example RoleNote 2",
                            SiteSub = "Example SiteSub 2",
                            Title = "Example Page 2"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany("Paragraphs")
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Navigation("Paragraphs");
                });
#pragma warning restore 612, 618
        }
    }
}
