// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wiki_backend.DatabaseServices;

#nullable disable

namespace wiki_backend.Migrations
{
    [DbContext(typeof(WikiDbContext))]
    [Migration("20240229110110_InitialMigration2")]
    partial class InitialMigration2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImageText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WikiPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WikiPageId");

                    b.ToTable("Paragraphs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Iste perspiciatis ullam qui amet repudiandae a vero sed temporibus. Dolorem commodi quia quisquam tempore voluptatem quis id. Eligendi perferendis rerum qui quia assumenda dolorem eum illum. Incidunt et facere aut quas suscipit facere itaque.\n\nModi pariatur ipsum vero eos ut aut. Cumque vel commodi molestiae esse omnis corrupti. Eos voluptas eveniet molestiae. Nobis enim voluptas nemo et a qui et. Recusandae id architecto.",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 1",
                            Title = "Example Page 1 - Paragraph 1",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Accusantium incidunt beatae dolore aut aspernatur saepe sit. Illum enim vel vel sint quae explicabo. Quod dolores ut dolor odit beatae enim aperiam.\n\nReprehenderit labore quos voluptate adipisci perferendis iure incidunt. Cum nemo in est perspiciatis sed laboriosam et et. Et delectus quaerat asperiores nulla officiis amet in ex. Laudantium atque et sit. Inventore quo a adipisci velit.\n\nInventore dolorem nam. Non rerum rerum unde dignissimos voluptate. Fugiat eum consequatur nostrum eius quos vel at minima. Eius quasi officia qui culpa voluptatem facilis quia tenetur eligendi. Vero consequatur iusto nemo aliquid error.",
                            Title = "Example Page 1 - Paragraph 2",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Ut est cupiditate labore molestiae laudantium illo voluptas beatae repudiandae. Fugit distinctio nobis quo et ab autem porro doloremque nostrum. Vero harum perferendis esse culpa eum aut temporibus deserunt labore. Quisquam cumque autem quod maiores ut debitis.\n\nAut aspernatur eos quos ad. Non odit autem nam quos nulla. Pariatur natus possimus. Consequatur totam architecto. Praesentium ullam excepturi.\n\nSequi ut ut fuga est est est voluptatem aut tempora. Similique ad voluptatem accusantium voluptatem minus molestiae nam facere deleniti. Incidunt quos et cupiditate. Facilis aliquam nostrum. Qui voluptate cum et soluta numquam.\n\nNulla impedit asperiores quaerat sunt molestias assumenda. Placeat voluptatum rerum reprehenderit quis aut voluptatem facere quas ipsum. Rem doloribus eveniet. Sed dignissimos fuga voluptas. Voluptate perspiciatis ullam omnis tenetur ut sequi.\n\nFugit sed qui eum nulla consequatur rem amet architecto et. Qui inventore ab ut voluptas voluptas a aliquid. Sit minus vero aut deserunt aperiam sit corrupti maiores rerum. Quo est et.\n\nVoluptatem et sed eligendi molestiae laboriosam. Sed autem voluptates error ut aut enim sit velit. Ut in sit praesentium id inventore dolorem enim. Delectus vero explicabo. Dolores magnam facilis neque corporis est. Odio quaerat magni harum distinctio sed cumque ipsa commodi.\n\nVoluptas est odit officiis laboriosam quidem quibusdam debitis. Recusandae dignissimos dolorum eum id. Velit velit qui dolore qui.\n\nTenetur et autem voluptate facilis quas ut optio qui. Repudiandae ut adipisci necessitatibus ratione at sed vel iste. Iste corporis pariatur et ad. Qui rerum possimus facilis similique quibusdam.",
                            Title = "Example Page 1 - Paragraph 3",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "Fugit eius rerum ullam pariatur ullam ullam nihil neque. Soluta quas veritatis quam neque modi. Expedita quos dolores iusto. Quae dolore expedita sit magni fugiat vel voluptatum. Qui non voluptatem est quia quis cumque quia iure. Quo deserunt in.\n\nDolores ratione rerum. Quo laboriosam vero nobis nisi aut ex exercitationem praesentium. Consequuntur dolorem quo odit. Quia ut quod voluptas sapiente. Quam consequatur atque molestiae repellat maiores molestiae.\n\nCorrupti voluptates in iste quia voluptas sed cum. Corrupti cum error sint. Aut aspernatur nesciunt debitis adipisci nobis aspernatur qui.\n\nAb ut consequuntur recusandae atque aut consequuntur. Nisi eligendi eaque eos quo. Sint quis voluptatem cupiditate sunt reprehenderit occaecati et dolorum. Sunt facilis corporis.\n\nTemporibus quo velit nihil eaque reprehenderit quo qui recusandae ut. Reiciendis qui est dolorem expedita voluptatum. Numquam quos quibusdam et magnam. Ut unde nulla eligendi eligendi. Dolor occaecati quibusdam. Praesentium et aut consequatur quo quia excepturi incidunt ducimus.\n\nMolestias ducimus id qui exercitationem ipsa eaque non. Ea cum beatae sint dolor sunt commodi odit. Asperiores molestiae exercitationem aliquid quam consequuntur sed nobis qui.\n\nEst excepturi libero voluptate. Non et laudantium delectus sunt. Quia dolorem rem. Molestias odit quaerat eum ex nam quaerat.\n\nQuam aut accusamus sunt non similique occaecati sapiente possimus voluptates. Alias quia optio reiciendis nisi minus. Dignissimos dignissimos laudantium voluptas sequi recusandae animi doloremque doloremque.",
                            Title = "Example Page 1 - Paragraph 4",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 5,
                            Content = "Amet odit vitae facere voluptas molestiae voluptatum tenetur veritatis quos. Earum doloribus consequatur enim. Ut voluptas veniam est. Aut est adipisci quibusdam magnam ducimus vel architecto praesentium. Quos voluptatum et amet rerum perferendis et et.\n\nSimilique omnis saepe velit ut ea. Libero fugiat tempore omnis. Dicta et repellat quo. Quibusdam aliquid aut dolores porro iure laborum vel doloribus.\n\nMagni et ducimus consequatur. Nulla tempore atque. Quibusdam nihil excepturi ipsum aliquid sint aliquam vel eaque maiores.\n\nAspernatur assumenda ratione voluptate nihil voluptatem unde facilis ducimus tempore. Eum explicabo non natus laudantium reiciendis sit inventore quasi. Dolores neque ex id id. Quas minima sed cumque qui porro adipisci.\n\nDebitis id ea debitis nam consequatur aut minima. Et tempore cumque tempora voluptate voluptatem. Sit animi eveniet quam. Id doloremque iste ut. Nemo et sed eveniet eaque ut explicabo architecto eveniet expedita. Dolorem eveniet qui saepe rerum nam voluptate ut.\n\nDolores non provident autem adipisci sint. Dolorum delectus labore. Deserunt ad saepe maiores laborum quibusdam totam autem. Et reiciendis non veniam voluptatem ut.\n\nHic vel corrupti voluptate quam sint quo qui et sequi. Repudiandae nostrum cupiditate architecto nemo eveniet repudiandae. Nemo dignissimos ullam consequatur ut recusandae maiores deleniti.\n\nNeque veniam aliquam officiis est consequatur. Doloremque quia id. Velit iure id voluptatum magni quaerat dolor aut adipisci. Animi nostrum sunt.",
                            Title = "Example Page 1 - Paragraph 5",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 6,
                            Content = "Consequuntur officiis sapiente vero. Ipsa dolor quasi cupiditate illum deserunt laborum dignissimos et quia. Sit unde tempora modi qui porro error. Similique itaque eveniet.\n\nEst non eaque maxime. Quasi id nihil asperiores non sed porro. Quisquam aliquid necessitatibus quae aut ab exercitationem. Cupiditate laboriosam consectetur et quia perspiciatis. Quasi tempore deserunt debitis voluptatem. In autem impedit.",
                            Title = "Example Page 1 - Paragraph 6",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 7,
                            Content = "Iure qui sit quasi ea nulla blanditiis. Ratione architecto minus iste sequi. Quia harum perspiciatis cumque.\n\nNihil enim ut numquam. Sint veniam temporibus. Non harum enim ut molestiae esse voluptates dolores et.\n\nEst quia et et labore nobis error iste ut. Dolorum repellendus quia qui quod et consequatur. Aut aspernatur voluptates est aut minus et incidunt. Sunt sunt et et et est quisquam a molestiae sunt. Occaecati iure quis officiis optio architecto adipisci. Amet voluptatibus laborum sed rerum incidunt.\n\nDelectus enim officia id eaque earum. Consectetur magnam provident velit. Distinctio et non et et blanditiis non. Omnis illo iusto aut voluptates quidem. Aut minus repellat et.\n\nSaepe fugiat aliquam ut praesentium incidunt et eaque est. Qui modi dignissimos repellat. Debitis accusamus atque iusto ipsam et quis aperiam nostrum facere. Tempore dolores eum officiis et sit impedit. Omnis vitae quia ut sint.\n\nMolestiae eaque molestiae doloremque ducimus aut est sapiente ratione. Neque soluta velit. Cum facilis nobis voluptatum aspernatur corporis. Nihil aut sit repellat. Totam quae in quibusdam recusandae tempore nisi voluptatum.\n\nEx sapiente ipsum earum architecto ipsam voluptatibus repellendus molestiae. Inventore sed facilis commodi amet repudiandae quidem aut. Architecto aliquid expedita neque porro. Quos sequi unde eum recusandae. Tempore autem similique et eaque quibusdam laudantium illo. Ut repellendus placeat fuga tenetur doloremque atque.\n\nIn laboriosam ab. Minus consequatur magni nihil. Perferendis rerum et quis cupiditate. Dolore voluptatem qui reprehenderit tempora at eos. Est quis deserunt quis aut qui culpa amet molestiae. Laborum facilis non quis hic.\n\nSint similique quos magnam tenetur accusantium labore. Iusto eaque enim est placeat molestiae doloribus recusandae veritatis recusandae. Vero accusantium possimus eum voluptatem iure dignissimos excepturi minus beatae. Similique recusandae itaque. Fugiat nam ipsa voluptate possimus quaerat.",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 2",
                            Title = "Example Page 2 - Paragraph 1",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 8,
                            Content = "Soluta illum dicta. Qui quis eos quis. Ullam quia molestias ut ut quae. Quas quia qui autem rerum. Soluta reprehenderit ratione deleniti consequatur recusandae. Quasi quas non aut autem quia consequatur.\n\nQuo voluptatem eos harum quisquam vel autem dolorum accusantium tempore. Ut tempore voluptatum fugiat. Recusandae error fugiat qui voluptatibus.\n\nUnde laudantium voluptatem. Deleniti eius neque. Qui eos exercitationem nobis rerum quam dolorem sapiente autem dolores. Quis aliquid velit. Consequatur sint est vel repellendus omnis dolor dolorum repudiandae hic.\n\nNihil quisquam dolorum veritatis praesentium. Et est aut enim debitis occaecati. Nesciunt laudantium voluptate consequuntur qui. Sapiente quia molestiae dolores quia odio quibusdam ipsa.\n\nNisi commodi sunt est eum. Voluptatem laborum ut praesentium perspiciatis. Laborum et eveniet. Et earum maxime sit aut. Et modi aut ut deserunt architecto quo. Dolores rerum aspernatur.\n\nSint pariatur itaque. Quidem voluptates iure dolores omnis aut. Veniam dolore qui veniam incidunt dolore ratione. Eos delectus non iste sed similique est. Qui debitis perferendis earum dolorem laboriosam consequatur quia eum quasi.",
                            Title = "Example Page 2 - Paragraph 2",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 9,
                            Content = "Dolorem iste ducimus. Illum ut iure at alias quam. Voluptate tempora assumenda optio magni sed mollitia facilis deleniti ducimus.\n\nDoloribus pariatur enim. Explicabo accusamus ea. Sint culpa vitae ut eum.\n\nOmnis sint repellat nobis officia. Eos aut laborum eaque ullam architecto. Qui sint nihil quos qui vel nesciunt eos. Minus modi temporibus possimus ut tempore. Neque facere at itaque atque sapiente itaque vel.",
                            Title = "Example Page 2 - Paragraph 3",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 10,
                            Content = "Voluptatem ex blanditiis vel et et. Voluptates ducimus qui alias ea. Voluptate nisi ipsum blanditiis accusantium laudantium ea reprehenderit quia. Rerum corporis maxime repellendus expedita. Voluptatum velit sint non adipisci aut iusto reiciendis.",
                            Title = "Example Page 2 - Paragraph 4",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 11,
                            Content = "Et illum et magni soluta. Earum et earum fuga facere consectetur tenetur doloremque. Optio dicta consequatur non sint vel aliquam. Minima nihil officia sit.\n\nIncidunt quaerat quis sapiente repellat. Consequatur sit impedit dolor dolores autem iure sint amet. Fugit non quibusdam velit voluptas sit.\n\nAlias exercitationem quia facere. Aut quia non expedita mollitia. Aspernatur reprehenderit aut inventore consequatur ea magnam recusandae.\n\nAutem cum similique laudantium eum fuga. Mollitia modi ea. Aliquam nesciunt molestiae est et deserunt quasi enim. Eligendi et aliquam et voluptate laborum adipisci sed autem. Aut accusamus eos consequatur facere illum fuga maxime. Et dolor voluptatem alias ut ut.\n\nDelectus est ea excepturi quasi incidunt nihil aperiam consectetur fuga. Similique nesciunt occaecati blanditiis non. Quo sit nesciunt sunt asperiores itaque molestias.\n\nVoluptas repudiandae quo. Assumenda inventore ipsam. Vel placeat eum qui perspiciatis et excepturi ipsam. Eum id et magni molestiae quia.",
                            Title = "Example Page 2 - Paragraph 5",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 12,
                            Content = "Eligendi fugiat facilis aut fuga cum animi quia numquam. Et fuga nobis. Vel qui eum. Consequuntur in non placeat eveniet ut et. Non impedit doloremque. Accusantium autem iure velit assumenda.\n\nEnim reiciendis expedita nulla cupiditate quaerat. Vitae rerum fugiat maiores. Quo sint quae sed aspernatur. Minus commodi cum perferendis sed.\n\nReprehenderit quae dolores tempora ratione cupiditate adipisci ut molestias. Architecto quia sed aspernatur in. Harum et magnam eius numquam. Placeat pariatur odio quis officia. Labore iusto in ut ut sit aut nulla rerum eos. Vero quasi adipisci ipsum dolores.\n\nEt et aut repellendus sint qui eos omnis aut. Sint neque odit dolorem ut. Reiciendis molestiae omnis id enim et accusamus.\n\nMollitia autem quisquam molestiae nobis autem. Dolorem aspernatur atque numquam voluptate ipsam autem minima eius non. Repellendus et iure porro esse est consequuntur eos ut. Id labore cumque est voluptatem asperiores sequi laudantium. Distinctio expedita qui vel autem voluptatem dolor.\n\nEveniet quasi odio aut voluptatem ut voluptas voluptatem dolore quo. Officiis at repudiandae dolorem. Velit quia ut autem. Est ut saepe ratione mollitia consequatur dignissimos. Omnis rerum magni ut qui aut alias perferendis delectus. Quis porro ratione delectus beatae ut aut qui est voluptatem.",
                            Title = "Example Page 2 - Paragraph 6",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 13,
                            Content = "User Submitted Content 1",
                            ParagraphImage = "https://i.kym-cdn.com/entries/icons/original/000/029/079/hellothere.jpg",
                            ParagraphImageText = "Hello there",
                            Title = "User Submitted Paragraph 1",
                            WikiPageId = 3
                        },
                        new
                        {
                            Id = 14,
                            Content = "User Submitted Content 2",
                            ParagraphImage = "https://i.ytimg.com/vi/jAB3mMdS0xE/maxresdefault.jpg",
                            ParagraphImageText = "General Kenobi",
                            Title = "User Submitted Paragraph 2",
                            WikiPageId = 3
                        },
                        new
                        {
                            Id = 15,
                            Content = "Helldivers never die!",
                            ParagraphImage = "https://i.ytimg.com/vi/nhhICroqfpU/hq720_live.jpg",
                            ParagraphImageText = "Helldivers never die!",
                            Title = "New Paragraph 1",
                            WikiPageId = 4
                        },
                        new
                        {
                            Id = 16,
                            Content = "Liber-Tea is a funny line haha",
                            ParagraphImage = "https://i.kym-cdn.com/photos/images/original/002/760/001/66d",
                            ParagraphImageText = "Time for a nice cup of Liber-Tea",
                            Title = "Liber-Tea",
                            WikiPageId = 4
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.StyleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightInnerColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListLinkTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WikiName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleColor = "#526cad",
                            ArticleRightColor = "#3c5fb8",
                            ArticleRightInnerColor = "#2b4ea6",
                            BodyColor = "#507ced",
                            FooterListLinkTextColor = "#1d305e",
                            FooterListTextColor = "#233a71",
                            Logo = "/img/logo.png",
                            WikiName = "Your Wiki"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReply")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReplyToCommentId")
                        .HasColumnType("int");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.Property<int>("WikiPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.HasIndex("WikiPageId");

                    b.ToTable("UserComments");
                });

            modelBuilder.Entity("wiki_backend.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteSub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WikiPages");

                    b.HasDiscriminator<string>("Discriminator").HasValue("WikiPage");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleNote = "Example RoleNote 1",
                            SiteSub = "Example SiteSub 1",
                            Title = "Example Page 1"
                        },
                        new
                        {
                            Id = 2,
                            RoleNote = "Example RoleNote 2",
                            SiteSub = "Example SiteSub 2",
                            Title = "Example Page 2"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasBaseType("wiki_backend.Models.WikiPage");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNewPage")
                        .HasColumnType("bit");

                    b.Property<string>("SubmittedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WikiPageId")
                        .HasColumnType("int");

                    b.HasIndex("WikiPageId");

                    b.HasDiscriminator().HasValue("UserSubmittedWikiPage");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            RoleNote = "User Submitted RoleNote",
                            SiteSub = "User Submitted SiteSub",
                            Title = "User Submitted Page",
                            Approved = false,
                            IsNewPage = true,
                            SubmittedBy = "tester"
                        },
                        new
                        {
                            Id = 4,
                            RoleNote = "Example RoleNote 1 Update",
                            SiteSub = "Example SiteSub 1 Update",
                            Title = "Example Page 1",
                            Approved = false,
                            IsNewPage = false,
                            SubmittedBy = "tester",
                            WikiPageId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("wiki_backend.Models.ApplicationUser", b =>
                {
                    b.HasOne("wiki_backend.Models.UserProfile", "Profile")
                        .WithOne("User")
                        .HasForeignKey("wiki_backend.Models.ApplicationUser", "ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany("Paragraphs")
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserComment", b =>
                {
                    b.HasOne("wiki_backend.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany("Comments")
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany()
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserProfile", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Paragraphs");
                });
#pragma warning restore 612, 618
        }
    }
}
