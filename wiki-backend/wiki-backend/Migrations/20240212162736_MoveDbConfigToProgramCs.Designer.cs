// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wiki_backend.DatabaseServices;

#nullable disable

namespace wiki_backend.Migrations
{
    [DbContext(typeof(WikiDbContext))]
    [Migration("20240212162736_MoveDbConfigToProgramCs")]
    partial class MoveDbConfigToProgramCs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImageText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WikiPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WikiPageId");

                    b.ToTable("Paragraphs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Example content 1",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 1",
                            Title = "Example Paragraph 1",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Example content 2",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "<Link to=\"/page/Example%20Page%201\"> This links to Example page 1 </Link>",
                            Title = "Example Paragraph 2",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 3,
                            Content = "Iure aut animi autem esse consequatur. Adipisci ut incidunt sit quibusdam facere sunt hic illo voluptatibus. Voluptatem aut quo consequuntur facere non est aut. Dignissimos at blanditiis dolorum velit qui enim. Quia totam laboriosam sunt quis asperiores. Corrupti sapiente cupiditate laudantium laborum praesentium et ratione voluptates exercitationem.\n\nIste vel veniam perspiciatis. Deserunt pariatur dolorem provident soluta porro nisi. Facere harum provident error distinctio. Eos voluptates rerum debitis earum. Ut et ab non velit eos deserunt. Facere vitae dolores quibusdam repellendus molestias veritatis eveniet dolorem ut.\n\nTotam voluptatem facilis accusamus eum debitis modi earum sint. Vel ut ipsum ut sequi laboriosam consectetur dolorem. Consequatur nostrum voluptatem vel quo sint explicabo labore odit sit.\n\nDolores earum minus sunt doloribus fugit repudiandae provident perspiciatis unde. Exercitationem nihil est accusamus et. Repellat sed ducimus non eum quaerat deserunt provident impedit omnis. Quas fuga aliquid vel necessitatibus corporis.\n\nUt similique dolores incidunt non eius id distinctio. Porro repudiandae expedita nam eius repudiandae. Modi iusto sed qui saepe debitis. Consequatur illo vel est quod laboriosam. Aliquam delectus aliquam quas quia illo.",
                            Title = "Example Paragraph 3",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "Animi dignissimos iste eius repellendus. Soluta omnis molestiae aspernatur tempora rerum animi ab. Expedita dolorum aliquam aut voluptatem dolor molestiae illo. Est nesciunt dolor et doloribus rem voluptatem eos nulla ab. Aut sint assumenda eum repudiandae sit voluptas deleniti nemo.\n\nSit incidunt sit aut et nostrum. Voluptates debitis soluta qui eos eaque dolore et velit eveniet. Quaerat quasi totam voluptatum incidunt a.\n\nNihil fuga et enim eos et qui. Quae qui quidem quas modi quod distinctio. Eum cupiditate odio rem temporibus nihil eos. Ullam tenetur voluptate a exercitationem aut voluptatem dolores aut sint. Non maiores provident fugit expedita dicta harum veniam nulla consectetur.\n\nOccaecati iusto iure laborum iure quo a debitis. Adipisci accusamus veniam consectetur possimus ipsam dolor sit. Fugit sapiente asperiores. Fugit doloremque accusantium sapiente eos rerum possimus officiis in.\n\nAutem iure autem alias sed ut eaque repellat vel. Culpa doloremque placeat perferendis maxime perferendis excepturi quo eveniet. Voluptatem sit minima est aut voluptatem qui voluptas nisi et. Eveniet tempora corporis rerum rem et rerum.",
                            Title = "Example Paragraph 4",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 5,
                            Content = "Rem sit et eos. Voluptatem sed impedit ut aspernatur doloribus. Veniam laborum autem perspiciatis dolor similique est sed. Laborum laudantium pariatur. Quisquam vitae voluptatem ut accusantium veritatis saepe blanditiis. Aut provident repudiandae vitae.\n\nFacere quos et est beatae illum placeat non. Quos aliquid voluptas consequuntur. Tempore sit et vero adipisci amet nostrum. Quo voluptatibus velit et.\n\nIllum nobis vero voluptatem iste eum et itaque necessitatibus reiciendis. Et similique quas earum fugit. Fugiat at provident dolor mollitia non ducimus vel adipisci. Veniam tempore in laborum repudiandae asperiores iure nisi. Sed voluptas consequatur sunt harum qui. Dolor magnam neque nostrum ipsa qui.\n\nEos deleniti iusto nostrum ut quia quod cupiditate. Minus temporibus molestias. Rerum omnis architecto vel quia.\n\nAut necessitatibus est est quibusdam nihil nam et. Ea totam molestias voluptates est sunt vero libero assumenda cum. Et magni cupiditate sunt minima eaque cum beatae eos mollitia.",
                            Title = "Example Paragraph 5",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 6,
                            Content = "Occaecati excepturi sed iste aliquid quia quo suscipit ut. Libero dolorum ut facere earum dolorum iste eveniet nulla. Accusantium voluptatem eaque quas sequi eum.\n\nSuscipit enim delectus ab laudantium temporibus. Harum error est architecto distinctio animi exercitationem suscipit enim. Ea aut unde voluptates quam.\n\nNihil sit est. Et facilis error quasi alias. Qui non non sapiente voluptatem sint magnam eum esse.\n\nIpsa illo non magnam omnis quos alias sequi. Fugiat dicta sed tenetur enim est. Sed et qui molestias eum sint eum mollitia cupiditate ab. Neque sit occaecati consequuntur sint voluptas.\n\nQuo harum eaque ad quaerat animi omnis. Quas porro dolor cupiditate sit inventore enim modi. Et ullam sapiente blanditiis. Porro eaque voluptates voluptatem est ex. Doloremque illo tempore repellendus totam inventore illo voluptas dolorum.",
                            Title = "Example Paragraph 6",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 7,
                            Content = "Dolorem aliquam illum. Adipisci nulla est pariatur ducimus eos ab animi cumque vel. Optio sequi suscipit. Velit ipsum aut omnis temporibus.\n\nProvident cupiditate ipsa consectetur nulla. Mollitia laborum et assumenda quas nemo ut nihil modi perferendis. Dolores sed dolores unde dolorum velit minus est recusandae. Similique eveniet earum quasi itaque magnam ut quae. Ad eum aut qui dolor omnis et molestiae ullam. Ut aliquid error nihil dolores.\n\nPerspiciatis natus ex rerum ut corporis architecto in. Eligendi aut velit ullam nihil placeat similique modi est. Earum aspernatur ab sint ipsum. Ipsa non minus ducimus quidem magnam necessitatibus voluptates. Iste consequatur ut autem voluptates doloremque ratione natus. Sapiente blanditiis amet debitis rerum vitae qui quibusdam expedita.\n\nEt praesentium omnis deserunt deserunt. Et porro soluta qui et est animi. Ut est et quod praesentium sit itaque officiis suscipit. Porro voluptas quam quibusdam.\n\nQuod maiores dolore repellendus cupiditate praesentium qui veritatis. Distinctio debitis dolorem aperiam assumenda. Tempore rerum officiis dolores reiciendis rerum mollitia quis.",
                            Title = "Example Paragraph 7",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 8,
                            Content = "Quaerat labore pariatur quam mollitia corrupti consectetur aliquid a. Alias voluptas quia quidem vel assumenda voluptatibus. Eum dignissimos adipisci dolores ea minima adipisci expedita ut. Ipsam sit doloremque omnis ratione sunt sit vitae illo.\n\nNon minima alias numquam. Est et voluptates accusantium vel doloribus provident at accusantium perferendis. Nesciunt est laudantium quisquam. Et id in rerum velit nemo iure. Et et labore. Est quam repellat in voluptas perferendis eos blanditiis a.\n\nNon nihil sed aut sed. Vel et quae harum quia in molestiae nobis. Repellendus dolorum ducimus est voluptates aut. Ut commodi autem error iste a qui. Consequatur adipisci rem eligendi sunt sunt eveniet. Ut commodi deleniti.\n\nDignissimos nam porro veniam laboriosam ut doloremque recusandae. Eos laboriosam nisi nobis ullam id id. Velit quam consequatur. Nostrum sed ducimus voluptatem. Nihil dicta quia repudiandae maxime consequatur quia quia nihil illum.\n\nEt assumenda dolor rem. Laboriosam libero sed dolorem itaque aut dignissimos. Sed in ipsam dolor nihil blanditiis voluptas aut molestiae tempore.",
                            Title = "Example Paragraph 8",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 9,
                            Content = "Et eum alias velit voluptatem est. Et esse magni in sed. Qui harum laudantium placeat eveniet. Ab aut dicta.\n\nSed rerum possimus. Minus tempora necessitatibus asperiores quis dolorum doloremque. Cumque quod voluptatem rerum quisquam. Ipsum officia excepturi ipsa aut eius harum non et.\n\nOccaecati iure qui at. At et et assumenda totam possimus quos ut minus enim. Enim earum aut voluptatem iste saepe perferendis neque. Hic officia aut et aliquam.\n\nQuia iste voluptatem. Illo dolorem dicta quisquam deserunt. At perspiciatis maiores dolorem magnam porro. Culpa nemo corporis voluptates quasi ut sequi dolores. Eum ea delectus optio nihil qui veniam. Tempora consequuntur qui quam qui assumenda nisi qui.\n\nIncidunt asperiores voluptatem possimus suscipit velit. Quia rerum dolore perspiciatis culpa exercitationem incidunt vel fuga. Qui corporis fuga sint dolores nam unde iusto. Ea earum ullam sapiente assumenda recusandae placeat debitis. Ea numquam voluptatum eos. Quia natus eum aliquam et debitis officiis nesciunt optio.",
                            Title = "Example Paragraph 9",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 10,
                            Content = "Cumque officiis voluptatem. Libero quisquam aut voluptatem adipisci eos animi consequatur nihil. Odio consequatur repellat et laudantium doloribus maxime deserunt.\n\nEst magnam doloribus eum aut rerum occaecati voluptatem. Odit eligendi dolor est consequuntur provident et quis quae. Quas nostrum sint quaerat sed et. Distinctio sapiente non nobis et possimus aliquam ducimus. Eos qui voluptatem beatae perferendis sed beatae rem consequatur. Odit sunt corporis nihil dignissimos assumenda velit voluptatem unde recusandae.\n\nIusto perferendis ut suscipit. Architecto reprehenderit dolores impedit. Corporis et officiis fugiat. Modi labore consequuntur molestiae ducimus. Aut consectetur dignissimos dolorum ratione in labore consequatur nesciunt. Quisquam adipisci et sit.\n\nAliquam eius temporibus asperiores voluptas aut debitis quidem. Modi voluptatibus libero voluptatem est. Et consequatur et non sequi occaecati dicta. Aperiam facere tempora quo sit exercitationem natus praesentium. Laborum earum sunt ad quis id. Aut hic velit iste omnis molestias sed vel.\n\nOfficiis dolores necessitatibus quo dolorem. Ab dignissimos quo deserunt. Occaecati fugiat adipisci. Consequatur in et soluta architecto minus voluptate ullam ipsam optio. Quibusdam sit assumenda ducimus similique incidunt mollitia mollitia quo. Dolores eos dolorem veniam sequi voluptas deleniti nobis omnis.",
                            Title = "Example Paragraph 10",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 11,
                            Content = "Id dolores suscipit qui eum perspiciatis qui autem qui. Non eius et ab. At temporibus est est quia veniam.\n\nConsectetur dolores occaecati rerum numquam earum officiis provident nostrum perspiciatis. Et ipsam voluptatum. Quia esse qui ad corrupti illo nihil est.\n\nQuia in quo nihil asperiores nam totam debitis aut. Exercitationem pariatur consequuntur sint saepe sunt distinctio ipsam labore molestiae. Quo et est ea velit impedit numquam est sint. Quia deleniti qui dolorem. Cupiditate omnis rerum. Eum eaque necessitatibus.\n\nAut quod dolorum. Occaecati iste velit possimus quia quaerat sit quo. Corporis rerum et autem et. Inventore fuga repudiandae. Non nesciunt vel sunt et consequatur sit eaque.\n\nDolores minus facilis mollitia nam sed eligendi in et id. Et neque accusamus. Voluptas in ut fugit ipsam et earum eligendi commodi rerum. Accusantium fugiat corrupti aperiam modi ut ratione cum odit voluptate.",
                            Title = "Example Paragraph 11",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 12,
                            Content = "Error accusamus rerum omnis sunt et sit. Est nulla numquam non consequuntur ipsam ad eos officia. Pariatur pariatur provident quibusdam sint commodi est officiis sunt quidem. Voluptatem ipsum exercitationem optio.\n\nSit quibusdam dicta facere ut maiores cupiditate eveniet aut. Fugiat veniam consequuntur beatae. Quaerat a aut nisi quia repudiandae. Enim ad explicabo dolorum aut quas dolor optio aut. Deserunt accusamus illum ut aut. Pariatur voluptatem iste est nihil fugiat maxime sed.\n\nMagnam enim aut aut optio ut occaecati possimus. Quam eligendi itaque enim qui dolores. Veritatis aut laudantium sint voluptas nihil assumenda incidunt rerum. Sit maxime omnis recusandae vero culpa dignissimos. Dolor tempora eos vitae repellendus. Quis laboriosam provident aut velit sit in sunt.\n\nQui doloribus omnis possimus alias distinctio velit possimus non. Corporis vero est. Ut rerum repudiandae at qui omnis aliquid. Et quibusdam earum expedita rerum est expedita dolorem consequatur. Perspiciatis accusamus voluptas deleniti.\n\nEum unde aut dicta perferendis autem architecto explicabo sequi. Id earum praesentium quos ab. Voluptatibus cumque soluta et sed non. Mollitia dignissimos ut expedita iste enim non saepe voluptatem esse. Provident quas nam libero ratione corrupti quos autem.",
                            Title = "Example Paragraph 12",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 13,
                            Content = "Est quos amet ex est dolorem. Accusantium et rerum in nisi quis iste dolorum totam eveniet. Voluptatibus voluptates ipsam deserunt delectus sapiente dolores aspernatur. Et sed ut molestiae.\n\nAut excepturi enim facilis voluptatem eveniet harum omnis harum. Accusantium et atque. Pariatur et quis maiores ratione architecto. Et et rerum quis. Numquam laborum consequatur facilis praesentium tempore et.\n\nNumquam voluptatem qui corporis exercitationem sed quod voluptates. Est quia ea veritatis unde dolorem sit. Aut eos placeat. Repudiandae corrupti quia est et repellendus veniam quia et nobis. Ut quis dignissimos quia vel et ut distinctio ipsam.\n\nRerum perspiciatis et suscipit et corrupti assumenda inventore saepe. Eos dolores eum ex mollitia nihil dicta illum deleniti. Porro quae ea.\n\nOmnis delectus voluptas veritatis magni. Nam magni aspernatur explicabo architecto repudiandae. Necessitatibus ipsa a ut enim vitae earum nesciunt ullam beatae. Blanditiis eos ab eius dignissimos sed placeat vitae eum. Enim dolorum dolorem cupiditate et nam officia et est.",
                            Title = "Example Paragraph 13",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 14,
                            Content = "Dolores odio sed placeat. In numquam non qui ipsum fugiat quos. Atque repellat facere et autem quis eos deleniti. Quod labore mollitia sit. Et perspiciatis sed.\n\nIllo sunt qui perspiciatis vel illum aliquid. Culpa impedit aut. Illo aliquam rem qui ea itaque neque. Recusandae mollitia quibusdam itaque unde ducimus excepturi. Qui deleniti eligendi et corporis in suscipit officia reprehenderit. Nihil itaque quo natus voluptatem saepe reprehenderit quis.\n\nRerum voluptas expedita nemo. Architecto in quo itaque. Illum corrupti at et. Quibusdam quam commodi est modi recusandae.\n\nConsequatur aliquam reprehenderit ea nihil. Dolor cum sint perferendis. Omnis tempora dolore quisquam. Dolorum repellat voluptatem et ea aut.\n\nBeatae animi aut. Sapiente commodi odio molestiae vel rerum. Corrupti molestias aliquam sunt rerum placeat voluptatum facilis. Autem illum in voluptates laudantium odio maiores. Id voluptatum doloribus quis consectetur. Eos sapiente magni est.",
                            Title = "Example Paragraph 14",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 15,
                            Content = "Quo sint voluptates mollitia non. Tempore vel ea sed saepe enim quis. Quo voluptatem ea molestiae explicabo laboriosam sit quia neque. Velit similique ratione inventore.\n\nRerum voluptate sed vel pariatur. Nulla dignissimos culpa qui. Sint accusantium fugiat repudiandae repellat quis qui suscipit assumenda.\n\nSit aspernatur est et repellendus veritatis velit. Velit fugit aut deleniti. Optio eaque quam ut debitis sed cupiditate nam quos.\n\nOccaecati aut sunt. Repellendus necessitatibus veniam. Ut maiores repudiandae dolor perspiciatis eligendi maiores necessitatibus necessitatibus.\n\nEt eveniet laboriosam eius magni voluptates tempora non. Fuga est ut repudiandae voluptas rem vel laboriosam et quia. Veniam quod debitis sit eius aspernatur eius ut ea. Porro veritatis sapiente non et quam autem sunt molestiae.",
                            Title = "Example Paragraph 15",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 16,
                            Content = "Qui voluptatibus voluptatem ipsam aut ut id consectetur voluptatum. Est sapiente nesciunt quis enim suscipit culpa et. Qui itaque ut commodi. Tempore non totam ad porro minus nobis est tenetur.\n\nAb provident consectetur inventore sit aut corrupti unde eligendi delectus. Ut ut eos. Ex facere id officia natus doloremque exercitationem praesentium animi. Dolorem quam soluta eaque unde. Eum voluptate blanditiis voluptas et iure. Voluptates illo numquam.\n\nMolestiae illum amet qui ipsum ut alias temporibus iure. Autem eius sit. Fugit repellat aut. Corrupti est sit itaque. Aut eaque impedit eveniet rerum. Ab ut omnis earum aut eum deleniti aperiam.\n\nPossimus eos libero iure corporis deserunt rem nostrum. Repellendus officia aut quas perferendis impedit culpa ab ratione quasi. Rerum quisquam nobis hic doloremque ex ut voluptas modi ab. Ratione veritatis fugit illo. Nobis facilis aut sint qui pariatur excepturi laboriosam eligendi. Aut eos nihil ex tempora facilis totam.\n\nTempore aut dignissimos occaecati harum modi ut nobis aut. Qui in doloremque soluta consequuntur. Numquam quia maxime assumenda. Fugiat dolor rerum autem. Voluptas ea optio aut.",
                            Title = "Example Paragraph 16",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 17,
                            Content = "Sunt accusantium eaque eos. Dolorum at rerum beatae. Consequatur sapiente at accusantium porro commodi qui. Sit quo aut ipsam quo vel maxime. Beatae voluptas rerum earum et. Modi ex fugiat minus voluptatem.\n\nNeque modi quis aliquid veniam. Natus aut maxime harum. Beatae consequatur voluptas velit laudantium assumenda quia. Deserunt aut ut. Nam ut sunt reprehenderit dolores qui laboriosam et quia eius.\n\nNostrum nesciunt dolorum iure aspernatur qui architecto. Necessitatibus harum dicta facilis et nemo. Quis pariatur a. Quis dolores nesciunt sed officia facilis non et et minima. Voluptas ad veniam alias ut aut et.\n\nEsse cupiditate itaque qui tempora odio et rerum est adipisci. Magni itaque amet similique et. At at eveniet facere iure nobis nihil cumque voluptatum. Sed dolore voluptatem in aut. Consequuntur numquam possimus provident qui corrupti eius eveniet. Eum aperiam enim amet aut non.\n\nEnim magni placeat non molestias tenetur. Voluptas laborum harum consequuntur amet est sunt aut laudantium. Natus dolor dolor aut delectus. Reiciendis laborum facere aut eos. Cum consectetur sunt quidem. Ducimus perferendis natus.",
                            Title = "Example Paragraph 17",
                            WikiPageId = 1
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.StyleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightInnerColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListLinkTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WikiName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleColor = "#526cad",
                            ArticleRightColor = "#3c5fb8",
                            ArticleRightInnerColor = "#2b4ea6",
                            BodyColor = "#507ced",
                            FooterListLinkTextColor = "#1d305e",
                            FooterListTextColor = "#233a71",
                            Logo = "/img/logo.png",
                            WikiName = "Your Wiki"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteSub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WikiPages");

                    b.HasDiscriminator<string>("Discriminator").HasValue("WikiPage");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleNote = "Example RoleNote 1",
                            SiteSub = "Example SiteSub 1",
                            Title = "Example Page 1"
                        },
                        new
                        {
                            Id = 2,
                            RoleNote = "Example RoleNote 2",
                            SiteSub = "Example SiteSub 2",
                            Title = "Example Page 2"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasBaseType("wiki_backend.Models.WikiPage");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNewPage")
                        .HasColumnType("bit");

                    b.Property<string>("SubmittedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WikiPageId")
                        .HasColumnType("int");

                    b.HasIndex("WikiPageId");

                    b.HasDiscriminator().HasValue("UserSubmittedWikiPage");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany("Paragraphs")
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany()
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Navigation("Paragraphs");
                });
#pragma warning restore 612, 618
        }
    }
}
