// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wiki_backend.DatabaseServices;

#nullable disable

namespace wiki_backend.Migrations
{
    [DbContext(typeof(WikiDbContext))]
    partial class WikiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImageText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WikiPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WikiPageId");

                    b.ToTable("Paragraphs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Earum quas esse aut veritatis autem recusandae et. Praesentium aut ut dolore voluptatum. Voluptatem earum quia voluptas.\n\nDolorem quia magni. Et aut molestiae maxime velit qui voluptatibus. Voluptas voluptas placeat aut quae natus. Est nobis qui. Deserunt est corporis sed commodi eius sunt accusantium dicta. Nihil nemo et molestiae.\n\nItaque in dolorem maiores minus iure ut sed magni. Et dignissimos sint qui. Atque omnis dicta nam. Repellendus sapiente et aut impedit. Qui et deserunt temporibus ullam in sed voluptatem. Suscipit sit necessitatibus.",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 1",
                            Title = "Example Page 1 - Paragraph 1",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Fugiat quia sed rem et animi vitae sit ea. Et voluptas facere. Aperiam modi similique dolorem quos perferendis explicabo hic.\n\nDolor nobis incidunt voluptatem totam deserunt. Dolores ab velit ea dignissimos aut vel qui amet officia. Deleniti corporis eos quod natus error facilis.\n\nSoluta quos velit temporibus iste. Occaecati et pariatur repellat facilis delectus. Voluptatem non ut iure et.",
                            Title = "Example Page 1 - Paragraph 2",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Molestiae adipisci beatae inventore nisi recusandae beatae. Quam rerum qui nostrum perspiciatis. Sit voluptate voluptas voluptatem porro aut quibusdam. Molestias quod suscipit ipsum nulla corrupti consequatur animi tempore temporibus.\n\nSed deserunt odio in. Minus soluta et. Occaecati quisquam dicta est. Vel aliquam architecto explicabo iste reprehenderit fugiat necessitatibus.\n\nPariatur nostrum voluptatem. Non ratione eum. Iusto in voluptatibus. Ducimus voluptatem aperiam consequatur dolorum et aut. Quod est debitis quibusdam voluptatibus.\n\nQui laborum nihil qui quaerat ipsam. Voluptatibus at qui nemo rerum praesentium quia commodi. Earum animi quia repellat possimus quisquam sint voluptatem numquam. Nobis omnis ut inventore et repudiandae. Perferendis temporibus quisquam veritatis quidem atque corrupti.\n\nAnimi a dolor rerum consectetur quod neque ut. Ducimus dolore voluptatem deserunt et deserunt voluptatem consequatur quia. Praesentium vel quia dolorem veniam esse.\n\nMolestiae optio similique mollitia. Autem placeat omnis qui numquam officiis. Quidem officiis repudiandae. Aut dolor quia rem numquam omnis et neque. Laboriosam consectetur non hic doloremque nam qui voluptatibus sint.\n\nConsequatur eos enim repudiandae eum. Cupiditate quia et dolor mollitia. Culpa aut blanditiis corrupti incidunt fugit repudiandae. Debitis nulla pariatur adipisci.\n\nEligendi earum quo quibusdam in dolorum. Autem voluptatum dolores esse omnis et omnis voluptatibus. Est et possimus. Debitis magnam iure tempora consequatur. Reprehenderit magnam earum.\n\nQuas ad molestiae labore autem delectus. Voluptates ducimus qui exercitationem deserunt. Ut maiores similique nulla et corrupti et id.",
                            Title = "Example Page 1 - Paragraph 3",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "Nemo ut dolores nihil. Aliquam quasi consequatur ut consequatur aut. Nisi et iure aliquam porro non.\n\nDistinctio autem quo sit iusto aspernatur sint consequatur. Est rem aut et qui hic. Similique facere nostrum. Laborum aut velit ab provident quos veniam illo blanditiis.\n\nDolore nulla iusto reprehenderit. Sequi dolor asperiores magni molestiae. Quaerat aliquam aut perspiciatis.\n\nAspernatur quisquam ex et necessitatibus eveniet qui voluptates aliquid. Dolores dicta excepturi accusamus laboriosam minima quia ex ipsum. Soluta aut debitis in sunt deserunt omnis quibusdam. Est sunt maxime numquam nulla enim dolor.",
                            Title = "Example Page 1 - Paragraph 4",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 5,
                            Content = "Molestiae cupiditate veritatis quia optio nisi voluptatum voluptatum dolor itaque. Libero ipsa eligendi ducimus et repudiandae corrupti natus. Quia vero eius quibusdam nostrum sed. Id dicta enim incidunt eum qui deserunt.\n\nEt vitae laudantium. Voluptate eos sunt distinctio qui est quas ipsa accusantium quidem. Nobis debitis autem labore velit rerum. Rerum expedita fugiat harum magnam illo amet.\n\nIllum aperiam culpa suscipit corporis eos. Sed hic eaque nihil. Est nam suscipit unde alias aut. Nam culpa quia est itaque iure ea quas est. Iusto est ut. Harum harum soluta in rerum hic id sit.\n\nBlanditiis laborum reprehenderit velit. Est distinctio corporis aut enim modi nihil est. Velit magni non et vel omnis nihil nam odit. Cumque officiis et tenetur eaque. Voluptas modi nesciunt veritatis quod quo possimus ea. Doloremque ut aut enim minus ut.\n\nId reprehenderit ducimus aut. Inventore est velit. Optio laboriosam unde. Sed soluta fugiat non autem officia dolorem. Rem sit quo ad. Aliquam et laboriosam consequatur possimus eum quo.\n\nSit et voluptatem adipisci sit. Dignissimos dolorem pariatur culpa optio culpa nisi. Tenetur magni tempore enim eius. Commodi assumenda autem quibusdam quam nemo deserunt.\n\nIpsa id et ipsam nam deserunt iste sed. Eum et modi esse tempora consequatur occaecati ut. Nemo voluptatem ullam sunt. Nihil pariatur quod rerum fugit totam hic sunt.\n\nQuia magni amet expedita qui et reiciendis qui tempore qui. Et nobis at. Velit ducimus omnis. Et necessitatibus non atque maiores consequatur enim.\n\nQui mollitia excepturi qui eos dolores voluptates voluptatem saepe ullam. Soluta nostrum tenetur iure nulla. Ut et exercitationem sit.\n\nEsse deleniti beatae. Dolor impedit eos rerum. In sed animi quisquam dicta quidem id. Commodi amet aut perspiciatis vel autem. Placeat voluptatem aut autem et. Aut velit beatae quasi omnis amet.",
                            Title = "Example Page 1 - Paragraph 5",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 6,
                            Content = "Totam quia id veniam aliquam porro ut deserunt. Officia quas nobis. Nisi et dicta et tempora.\n\nEst ipsum nesciunt itaque dolor perferendis repellat. Facilis fugiat occaecati distinctio rerum. Voluptatem rerum praesentium sapiente magnam ut eligendi amet rem.\n\nSoluta nam ipsum. Quia maiores placeat et cum et nemo sit eum. Nobis minus distinctio suscipit ex fugit impedit laborum. Quibusdam quidem perferendis et impedit nihil rem aut quasi. Consectetur nesciunt ullam consequatur dicta maxime.\n\nMinima facere libero. Dicta tempore quisquam ad perspiciatis hic. Impedit maxime maxime similique debitis tempore qui consequatur.\n\nDoloremque quia et. Rem dolor sit facilis culpa. Architecto libero et. Aperiam consequatur ut ut eos eum molestiae.\n\nTempore facere vel quod dolorem voluptatibus illum. Beatae odit cumque placeat minima consequatur natus incidunt. Voluptates vitae aliquam eum asperiores et repellat et ut.\n\nVoluptas ipsa id quis ut et optio recusandae nobis. Dolores quam ullam nihil accusantium aut. Voluptate enim impedit omnis minus reiciendis eum odit deleniti illum. Et impedit distinctio labore ad autem enim.",
                            Title = "Example Page 1 - Paragraph 6",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 7,
                            Content = "Consequatur qui et. Similique ratione aspernatur deleniti vitae mollitia voluptates reprehenderit sint expedita. Quia sed cum nisi amet necessitatibus animi. Totam dolorem porro repellat perspiciatis. Nemo vel sit quo delectus praesentium.\n\nQuae porro repudiandae et. Corrupti dolor dolores vero hic. Cupiditate et ex tenetur laboriosam facere ut consequatur sapiente. Eos aut nulla corrupti. Dignissimos voluptatum occaecati nostrum. Ea quis non odio.\n\nEaque quod pariatur quia possimus adipisci aut omnis tempora. Tempore dolorum fuga quis. Saepe consequatur adipisci nisi qui amet. Enim quo expedita quisquam voluptatem et nihil eos sint quod. Dolor et itaque. Rerum nesciunt id recusandae.\n\nAccusantium aut ut delectus. Non facilis hic non aperiam consectetur explicabo omnis nesciunt. Voluptatum sequi tempora recusandae est. Dolore consectetur laborum aut repellendus.\n\nMolestiae ut saepe voluptas quibusdam delectus. Temporibus quia sed voluptatum eaque laudantium recusandae quaerat. Eum provident nam iste suscipit. Aut corporis molestiae id laborum magni. Dolor consequatur voluptatum eaque rerum dolor libero autem tempora.\n\nPossimus illo aperiam numquam in unde et. Facere et optio sapiente vel maiores maxime. Iure consectetur quisquam et voluptatem totam laborum eligendi veritatis. Distinctio nihil voluptatem totam et. Repellendus nemo vitae.\n\nAutem excepturi illo et nostrum aut. Consequuntur amet dolor dicta rerum vel fugiat qui eligendi. Dolores consectetur nihil rerum.",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 2",
                            Title = "Example Page 2 - Paragraph 1",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 8,
                            Content = "Ut et aut nihil. Voluptatum commodi sunt iste inventore. Tempore tempora sed ullam et voluptatem illo et maxime voluptates. Consectetur eum sed doloribus qui alias dolorem porro qui velit. Est totam ea aliquid eaque temporibus perferendis nesciunt id et. Sint ullam in soluta qui distinctio ratione quo.\n\nNumquam velit rerum enim consequatur deleniti nemo nisi quibusdam ut. Quod quidem nemo dignissimos quidem aut. Qui quis vero sed. Beatae veritatis eveniet laudantium enim.\n\nId iusto voluptatem. Facere dolores magnam ad. Dicta deserunt sed quas animi et.\n\nSint quasi commodi nemo iusto. Assumenda voluptatem consequuntur aut perspiciatis autem repudiandae quasi temporibus. Aut blanditiis labore quae. Quo voluptas eius voluptas omnis dolorum aut et ullam et. Qui pariatur consequatur quia qui.\n\nVeniam iusto deleniti sunt explicabo autem qui ea. In et ut assumenda. Sed sequi laboriosam eligendi non non soluta quod quaerat. Quibusdam sint quidem corporis doloremque consequatur. Ea similique sit ab. Architecto nam quas eum nulla est.\n\nQuo recusandae quisquam cum dolorem veniam dicta laboriosam. Doloribus exercitationem officiis sint dicta. Debitis eaque impedit occaecati dolorum qui impedit. Dignissimos rerum at asperiores quia quisquam esse suscipit.\n\nAb aperiam vel aut debitis nesciunt sit ipsa ut. Ipsam autem et voluptas at qui est. Veritatis neque beatae similique dolorem maxime ducimus. Dicta rerum sint quia voluptas similique aut sed totam.",
                            Title = "Example Page 2 - Paragraph 2",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 9,
                            Content = "Qui excepturi vitae illum dolores repellat quisquam suscipit dolores. Provident provident at quibusdam. Quibusdam molestias ullam sunt ut voluptatem accusantium sed. In voluptas quis a. Qui fugit voluptatibus aut voluptas dolor. Ut qui voluptatem illum esse.",
                            Title = "Example Page 2 - Paragraph 3",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 10,
                            Content = "Consequuntur cumque incidunt culpa error iusto suscipit doloribus voluptatum excepturi. Nemo facere sit nostrum dolorem vel dolorem cumque eius labore. Nihil atque nihil eligendi quis ea quasi nihil molestias dolores.\n\nAliquam qui voluptate. Doloribus corporis porro consequatur voluptas optio id harum autem voluptate. Id ullam quibusdam. Impedit ea enim aut. Dolorem laudantium quaerat ab distinctio.\n\nOdio voluptatem adipisci sed cupiditate. Dolorem corrupti repellendus similique optio. Voluptatem vero aperiam. Perspiciatis placeat voluptatem.\n\nAliquam quidem consequatur dolor et. Illo non a autem eveniet ut maxime quasi ex totam. Sapiente voluptatem consequatur saepe sit quisquam deleniti aut. Ipsum sequi iste ipsam facere. Sint reiciendis ipsam totam.\n\nVel adipisci autem qui illum qui eius vel quibusdam. Assumenda alias delectus consequuntur quia id. Doloremque magnam rerum ea eum quia beatae. Provident sit et. Architecto et nihil eum accusamus ut ut. Est fuga sequi quia similique officiis est aut maiores ut.\n\nVoluptas dolorum sed porro blanditiis sit. Ab sit officia consequatur voluptates omnis unde quasi. Doloremque nostrum sint explicabo consequatur aperiam nesciunt. Perferendis ad nobis quas doloremque et sunt sint.\n\nId maiores repellendus alias. Praesentium doloremque reprehenderit commodi quia qui rerum. Aut aut et at dolor fugiat distinctio est et corrupti. Nostrum asperiores velit eligendi similique voluptatibus ea et voluptas.",
                            Title = "Example Page 2 - Paragraph 4",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 11,
                            Content = "Iusto aliquam dolores magni atque incidunt est. Possimus nihil velit enim dolor aut ea sequi rem. In harum quam est et.\n\nAspernatur aut molestias esse. Aut quibusdam animi. Consequatur est aliquid voluptatem quos sit distinctio quo quos tempore. Ut quo numquam blanditiis necessitatibus voluptatem modi qui et. Dolores culpa laboriosam eum dolor illo qui voluptates totam quae. Non non aspernatur odit in rem dolor.\n\nMagni doloribus earum id quo harum minus sed. Aut sed rerum nobis beatae delectus. Explicabo illum autem ratione quisquam voluptates. Laudantium maxime inventore soluta possimus minima explicabo aut eum. Assumenda quia accusantium provident ducimus sequi neque quae maiores et.\n\nConsequatur alias qui aut est impedit. Officia nesciunt esse autem vel aut qui velit. Distinctio quas nihil perspiciatis. Sed sed voluptatem dolores aut sint nesciunt minima et.\n\nPariatur accusamus illum molestiae id mollitia iste. Sit alias quae nisi. Enim consectetur minus quia voluptates voluptas saepe. Voluptates omnis a molestias debitis nemo sed eos. Enim fugiat expedita sunt impedit.",
                            Title = "Example Page 2 - Paragraph 5",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 12,
                            Content = "Molestias doloremque architecto possimus aperiam illum explicabo nulla assumenda provident. Odit delectus voluptas aut aut nulla incidunt eum. Labore blanditiis corrupti sed perferendis in aperiam vel optio. Fugit et nemo nostrum quasi et aut. Rerum quasi corporis libero occaecati dicta sunt asperiores libero ea.\n\nHic enim perferendis veniam omnis sunt ut esse repudiandae ea. Dolor qui qui cupiditate alias doloribus magni. Assumenda dolores animi minus qui sequi. Ea in earum beatae ex laborum. Accusamus voluptas repellat est autem consequatur nihil velit sapiente ex. Aut sed similique tenetur.\n\nInventore possimus magni quo. Quae fuga eum quia aut et. Consequatur aut eos et quia ullam ad. Laboriosam facere blanditiis ea et. Possimus ad suscipit delectus. Dolore et id mollitia distinctio et molestias.\n\nVoluptatem aperiam omnis. Rerum maiores quis facere. Et temporibus harum et quam.\n\nQuo nisi qui dolores eius illum. Cumque praesentium occaecati. Veritatis laboriosam itaque deserunt. Nobis quae sunt et quaerat non delectus quo. Soluta magnam maiores ut ut itaque delectus. Id consequatur quo dolores quis.",
                            Title = "Example Page 2 - Paragraph 6",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 13,
                            Content = "User Submitted Content 1",
                            ParagraphImage = "https://i.kym-cdn.com/entries/icons/original/000/029/079/hellothere.jpg",
                            ParagraphImageText = "Hello there",
                            Title = "User Submitted Paragraph 1",
                            WikiPageId = 3
                        },
                        new
                        {
                            Id = 14,
                            Content = "User Submitted Content 2",
                            ParagraphImage = "https://i.ytimg.com/vi/jAB3mMdS0xE/maxresdefault.jpg",
                            ParagraphImageText = "General Kenobi",
                            Title = "User Submitted Paragraph 2",
                            WikiPageId = 3
                        },
                        new
                        {
                            Id = 15,
                            Content = "Helldivers never die!",
                            ParagraphImage = "https://i.ytimg.com/vi/nhhICroqfpU/hq720_live.jpg",
                            ParagraphImageText = "Helldivers never die!",
                            Title = "New Paragraph 1",
                            WikiPageId = 4
                        },
                        new
                        {
                            Id = 16,
                            Content = "Liber-Tea is a funny line haha",
                            ParagraphImage = "https://i.kym-cdn.com/photos/images/original/002/760/001/66d",
                            ParagraphImageText = "Time for a nice cup of Liber-Tea",
                            Title = "Liber-Tea",
                            WikiPageId = 4
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.StyleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightInnerColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListLinkTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WikiName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleColor = "#526cad",
                            ArticleRightColor = "#3c5fb8",
                            ArticleRightInnerColor = "#2b4ea6",
                            BodyColor = "#507ced",
                            FooterListLinkTextColor = "#1d305e",
                            FooterListTextColor = "#233a71",
                            Logo = "/img/logo.png",
                            WikiName = "Your Wiki"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsReply")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReplyToCommentId")
                        .HasColumnType("int");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReplyToCommentId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserComments");
                });

            modelBuilder.Entity("wiki_backend.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteSub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WikiPages");

                    b.HasDiscriminator<string>("Discriminator").HasValue("WikiPage");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleNote = "Example RoleNote 1",
                            SiteSub = "Example SiteSub 1",
                            Title = "Example Page 1"
                        },
                        new
                        {
                            Id = 2,
                            RoleNote = "Example RoleNote 2",
                            SiteSub = "Example SiteSub 2",
                            Title = "Example Page 2"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasBaseType("wiki_backend.Models.WikiPage");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNewPage")
                        .HasColumnType("bit");

                    b.Property<string>("SubmittedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WikiPageId")
                        .HasColumnType("int");

                    b.HasIndex("WikiPageId");

                    b.HasDiscriminator().HasValue("UserSubmittedWikiPage");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            RoleNote = "User Submitted RoleNote",
                            SiteSub = "User Submitted SiteSub",
                            Title = "User Submitted Page",
                            Approved = false,
                            IsNewPage = true,
                            SubmittedBy = "tester"
                        },
                        new
                        {
                            Id = 4,
                            RoleNote = "Example RoleNote 1 Update",
                            SiteSub = "Example SiteSub 1 Update",
                            Title = "Example Page 1",
                            Approved = false,
                            IsNewPage = false,
                            SubmittedBy = "tester",
                            WikiPageId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("wiki_backend.Models.ApplicationUser", b =>
                {
                    b.HasOne("wiki_backend.Models.UserProfile", "Profile")
                        .WithOne("User")
                        .HasForeignKey("wiki_backend.Models.ApplicationUser", "ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany("Paragraphs")
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserComment", b =>
                {
                    b.HasOne("wiki_backend.Models.UserComment", "ReplyToComment")
                        .WithMany()
                        .HasForeignKey("ReplyToCommentId");

                    b.HasOne("wiki_backend.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReplyToComment");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany()
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserProfile", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Navigation("Paragraphs");
                });
#pragma warning restore 612, 618
        }
    }
}
