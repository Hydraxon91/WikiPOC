// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wiki_backend.DatabaseServices;

#nullable disable

namespace wiki_backend.Migrations
{
    [DbContext(typeof(WikiDbContext))]
    partial class WikiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImageText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WikiPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WikiPageId");

                    b.ToTable("Paragraphs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Voluptatibus qui eos voluptatibus fuga dolorem. Perspiciatis fugiat id et quas eveniet sit qui. Eum pariatur at cumque voluptas quisquam id dolor officia. Accusamus voluptas explicabo accusantium suscipit velit et. Soluta omnis dolorem quis in aut eligendi.\n\nOfficia reiciendis minus est voluptatem atque expedita mollitia. Aspernatur reprehenderit delectus. Blanditiis cum ipsum molestiae nihil. Et aut sint. Ut tenetur eum culpa aut voluptate et.\n\nEt sint vero aspernatur autem iste reiciendis ut. Molestias vel amet. Consequatur eveniet tenetur assumenda maiores fugit odit. Adipisci voluptate reiciendis. Deserunt molestias delectus veritatis reprehenderit. Cum est commodi voluptatum magnam et.\n\nError quo reiciendis rem voluptatem culpa. In enim voluptatem eligendi odio velit eius in ea. Pariatur adipisci molestiae neque neque est voluptatem quod. Et asperiores aut ea exercitationem.\n\nVoluptate quia modi id ut. Atque ut velit sapiente. Ipsam dolorem laborum eius suscipit quae est et quo. Consequatur est aperiam. Voluptas ipsa eius aut ipsum voluptatem. Deleniti reprehenderit est.\n\nAliquam placeat quia cum eum et inventore optio et soluta. Maxime quibusdam sed similique aliquam id enim dolor quia. Expedita doloremque ut iusto sed sint est ea. Natus ut illum reiciendis rerum.\n\nAsperiores iste non voluptates quos laborum blanditiis illum quos. Unde similique minus. Reprehenderit blanditiis vitae odio natus assumenda omnis quis blanditiis. Est tenetur error illum aperiam corrupti qui esse aut pariatur. Aspernatur consequatur sint et adipisci.\n\nCorrupti autem sint voluptatem explicabo molestiae itaque ab aut. Quas veniam dignissimos quas harum. Commodi odit ut culpa unde eius commodi voluptatem dignissimos. Pariatur natus quia nulla maiores.\n\nAspernatur consequatur est ipsa voluptatem alias molestiae dolore ea soluta. Voluptates eos velit voluptatem possimus labore animi ut ut. Labore minima voluptas blanditiis totam magnam iure aliquam aut vitae.\n\nQuia rerum non voluptate deleniti dolores dolores iste et quia. Nisi voluptatem fugit autem ea voluptates eos beatae soluta. At debitis praesentium autem rerum enim. Et perspiciatis esse commodi et id itaque velit dolorem. Est nihil optio porro.",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 1",
                            Title = "Example Page 1 - Paragraph 1",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Aspernatur quis quibusdam voluptas nisi velit architecto fugit. Fugit eum quo aliquid dolorem. Quo reprehenderit non harum excepturi cupiditate aut. Omnis et sequi veniam sunt earum.\n\nId accusamus et maxime tempora vitae repudiandae beatae. Nostrum sint quos velit sed tempora consectetur voluptatum aut veritatis. Omnis ad error autem voluptates occaecati qui. Dolorum deleniti mollitia aut at delectus aut. Est aut sequi. Quo dolorem voluptatum sunt recusandae tenetur.\n\nVeritatis explicabo similique rerum odit delectus excepturi rerum et qui. Atque veniam et illo voluptates consequatur. Quia ut corporis fugit nam et. Ducimus iusto placeat nesciunt velit necessitatibus. Et repudiandae veniam illum ipsum.\n\nVero ut et error accusamus itaque. Labore velit dicta fuga et perspiciatis ea. Alias beatae enim error molestiae minima mollitia omnis fugiat. Aut amet fugiat atque iste et quis facere. Vero ut non accusantium tempora.",
                            Title = "Example Page 1 - Paragraph 2",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Aliquid et ad quia ab repellat pariatur cupiditate est. Quos ipsam itaque et. Qui quam voluptatem quaerat quis. Rerum eveniet sunt mollitia modi quasi explicabo sint veniam. Dolorem esse maxime cum vero est consectetur ut nostrum. Ex aperiam laboriosam vitae quidem temporibus ut.\n\nEst et officia explicabo dolor et ipsa reiciendis aut. Assumenda soluta beatae ad neque minus omnis incidunt quisquam quas. Dolorem sint esse excepturi dicta ut et possimus quia amet. Molestiae eaque quisquam culpa voluptas tempora. Ut nihil id praesentium quidem sunt.\n\nItaque quae aperiam voluptatibus. Maiores alias odio minus non doloribus porro. Quis quasi impedit voluptas ut sapiente ipsam illum.\n\nAnimi laudantium ea. Culpa similique maiores expedita sed modi ea non molestiae et. Dignissimos sit ex amet est ut ex distinctio. Sint voluptatem quidem eum totam qui consequatur ducimus in quas. Ut aut expedita magni.\n\nAutem non voluptatem. Optio dolorem dolor. Saepe fugit laborum explicabo laborum suscipit corrupti quia.\n\nRatione ut accusantium quibusdam rerum voluptate fugiat tempore. In explicabo facilis perferendis et voluptas veritatis. Quis nostrum et. Aut debitis officiis ipsa fuga dolor sint sapiente voluptatibus.",
                            Title = "Example Page 1 - Paragraph 3",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "Aperiam dolorum consectetur non et magnam illum magnam. Quidem nihil esse officia id laboriosam assumenda. Assumenda porro aut voluptas et quia. Quibusdam autem quos aspernatur eos ad harum et ipsum quibusdam.\n\nEa quod itaque suscipit unde. Ad soluta iusto qui. Quibusdam ullam illo et facere impedit facilis eum qui. Sunt accusamus quaerat tempore. Quae omnis molestias placeat dolorem eum.\n\nTempore ex aut est. Accusamus assumenda mollitia quia et quo odit distinctio. Deserunt dolorem amet veniam earum autem occaecati amet. Velit dolores quae consequatur natus. Beatae est accusantium et necessitatibus ullam.\n\nQui explicabo labore ducimus omnis laboriosam unde similique facilis. Sit quia qui corporis adipisci aut explicabo molestias eum. Qui est accusamus. Maxime ea nam occaecati omnis in hic. Velit molestias corporis incidunt voluptatibus odio.\n\nEarum numquam minus asperiores libero est. Et nihil et impedit sequi a sint quam. Qui dolores debitis sit laboriosam quae doloremque eius. Eaque voluptate illum aut quas itaque sunt modi et. Rem voluptatum doloremque sed.\n\nAut autem dolorum. Officiis neque est. Exercitationem quia nesciunt dolores expedita debitis adipisci facilis laudantium cumque.\n\nSint est voluptatum. Dolor repellendus quia sit nostrum iure qui. Quo ea exercitationem facere vitae maxime optio in quia excepturi. Consequatur perferendis ut quod et consequatur consequatur culpa perferendis. Dicta qui harum officia eos iure ipsa eum laborum. Sit ad esse qui consequatur vero ex blanditiis aliquid ipsum.\n\nDicta et animi voluptas sequi incidunt laudantium sed maiores nulla. Et sed necessitatibus repellendus nostrum. Minima rem excepturi. Consequatur facere id ipsam. Quisquam alias maxime vel voluptates. Consectetur et alias.",
                            Title = "Example Page 1 - Paragraph 4",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 5,
                            Content = "Et eius et. Asperiores cum minus. Qui commodi et autem exercitationem magnam ex cumque ex quam. Tempora eos aut non ut neque dolores. Est voluptatem enim asperiores quis nulla eius praesentium repellendus dolor. Eveniet deserunt illum veniam odio qui eligendi nemo.\n\nEnim quo velit excepturi rerum veniam consequuntur eaque qui consequuntur. Qui laborum sapiente et. Culpa aliquam et officiis ex quia repellat provident.\n\nFuga ut rerum dolor. Exercitationem molestiae harum repellendus laboriosam. Veritatis voluptas qui accusantium sint. At est assumenda sit eveniet. Dolor voluptate voluptatem mollitia modi dolorem sunt sapiente animi.\n\nIllo illum qui maiores. Molestiae ut et cum ex. Earum maxime a eius quibusdam ea aliquid minus ipsa nulla. Odit sequi voluptatum consequuntur explicabo at consequatur natus. Pariatur ipsam qui ut quod. Tenetur fugiat aliquam.\n\nNeque temporibus labore suscipit voluptatem. Doloremque at odit rerum vel possimus voluptas aut omnis. Facilis maiores mollitia.\n\nAt cupiditate omnis ea recusandae asperiores sint. Et hic rerum. Ducimus iure voluptatibus. Ut vel aliquid reiciendis accusantium beatae vitae expedita.\n\nEius nihil odio ab. Blanditiis nostrum perspiciatis laboriosam magnam doloremque facilis natus saepe. Voluptatum consequatur dolore omnis. Voluptatem facilis eum voluptatem autem. Non laborum omnis eum suscipit aliquid sit.",
                            Title = "Example Page 1 - Paragraph 5",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 6,
                            Content = "Ipsa quaerat nulla ut. Et dolorum asperiores officia veritatis et. Ut qui officia quia nulla excepturi non. Qui sed id sit.\n\nTempora consequatur enim sed sit enim dicta. Rerum sunt rerum quis perferendis quidem vero harum qui. Illum sed et.\n\nPossimus magni quis rerum eos id. Distinctio reiciendis delectus non pariatur ut reiciendis esse et delectus. Possimus et voluptatibus.\n\nRerum eos est voluptatum adipisci et ipsa incidunt dolores veritatis. Beatae optio doloribus assumenda labore consequatur sed nam. Saepe dicta omnis quas iste qui vel ab quia dolores.\n\nProvident id et eveniet nesciunt voluptatem nostrum ea. Mollitia a in eos et sapiente assumenda. Omnis maxime et fuga qui mollitia repellat ut ad nihil. Et atque nisi sint blanditiis optio voluptate nihil optio ratione. Asperiores dolores odio eveniet ratione. Illo quis et deserunt et ut id dignissimos odio nostrum.\n\nSuscipit ipsum qui tenetur dolorum repellendus quis vero. Sint quas dolorum possimus ea sint voluptatum enim. Deleniti ea numquam voluptas harum. Fugiat voluptatem voluptas mollitia expedita nesciunt dignissimos possimus. Expedita quos iusto. Et accusantium et id sit consequatur nesciunt.\n\nNecessitatibus eveniet non laboriosam. Nesciunt impedit sapiente provident. Rerum optio quo fuga error repudiandae et est tenetur.\n\nTempora quia et rerum magni dolor reprehenderit. Ad inventore provident eius totam qui magni nihil rem. Nisi minima atque commodi iusto omnis beatae quidem rerum et. Velit aperiam reiciendis assumenda dignissimos culpa et. Blanditiis labore mollitia et ad non.\n\nCommodi hic est ea magnam delectus iure et. Sequi beatae perspiciatis. Voluptatem laudantium quia consectetur dolores quia. Eveniet maxime ex ipsam id repudiandae neque voluptas. Porro nobis autem cumque voluptate nobis velit ut vitae.",
                            Title = "Example Page 1 - Paragraph 6",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 7,
                            Content = "Harum fugit maiores et adipisci accusamus numquam reiciendis voluptas. Ut perferendis dolorem dignissimos perspiciatis dolor ea aliquam optio. Fugiat sit molestiae ipsam sit cumque doloribus aperiam sit. Enim sunt laborum est saepe qui quia voluptate. Ea saepe a ex dignissimos alias neque molestias rerum. Sunt accusantium qui et voluptas ab ad ea nihil.",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 2",
                            Title = "Example Page 2 - Paragraph 1",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 8,
                            Content = "Ducimus exercitationem voluptatem id. Maiores quis illo error laboriosam aliquid. Ea fuga aut id qui dolores. Tempora enim est et ut quas aliquid. Delectus laudantium autem iste et et voluptatem quaerat. Totam qui est vel eos est nostrum eius.\n\nExplicabo velit dolores eius quia itaque et aut. Nihil atque voluptate consequatur laborum porro iure nisi impedit. Et fuga consequuntur non quis et perferendis. Enim dolorem voluptatem et animi eius adipisci quo libero. Et itaque explicabo rerum. Est ad aut non.\n\nAut in deserunt itaque quasi repudiandae. Iste eveniet minima vitae veniam. Quo laboriosam rerum qui mollitia sit magnam.\n\nFuga sit fuga molestiae rerum deserunt consequuntur dolore aut. Quia labore expedita ut et. Fugiat maiores perferendis eveniet recusandae. Maiores consequatur incidunt impedit. Consequatur autem voluptas in quasi facilis ducimus sapiente aut. Modi est iure dolorem et perferendis.\n\nNeque facere exercitationem. Nihil quo non amet. Modi non quisquam perferendis minima sed quo nisi qui. Assumenda sed autem ullam non vel culpa pariatur tempora. Ut aspernatur id error libero natus earum est voluptatem qui.\n\nOfficiis corporis distinctio commodi. Quia aperiam quis. Maiores molestiae qui unde a. Voluptatem rem magnam. Ut quia laudantium.",
                            Title = "Example Page 2 - Paragraph 2",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 9,
                            Content = "Saepe molestias optio sequi dolorem quae. Aliquid recusandae eaque quod quibusdam cupiditate. Dolor omnis consequatur beatae. Officiis voluptatem consequatur. Voluptas facilis odit odio. Atque laborum enim.\n\nQuia sit harum et culpa officiis ratione saepe eos. Incidunt corporis adipisci et esse perferendis deserunt sit exercitationem. Et natus ut tempore magni. Atque dolore at cum. Qui quidem quo nihil. Perferendis aut voluptas non reiciendis.\n\nRem voluptas id praesentium omnis velit et ea nemo dignissimos. Similique aut veritatis. Fugit dolor ullam vel beatae deserunt.",
                            Title = "Example Page 2 - Paragraph 3",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 10,
                            Content = "Qui in non ut incidunt. Molestias qui libero optio similique. Modi optio atque dolorem dolores deserunt aut at et dolorum. Quia eos ipsam pariatur qui quo natus harum totam est. Sit ut incidunt qui sed ipsum ipsa mollitia officia.\n\nNihil atque quae aliquam at tempora. Aperiam qui ut tempore ut eligendi magni. Explicabo et hic harum aliquid qui laudantium fugit consequatur autem. Repellat architecto alias assumenda quo voluptas dolore et atque nam. Sint illum inventore ea exercitationem et placeat. Et nisi laboriosam voluptates consequatur.\n\nMaiores eos reprehenderit id et cum omnis iure aut assumenda. Explicabo saepe quisquam quo. Aut tempora officiis. A libero ipsum sed suscipit omnis eaque.\n\nIllum expedita fuga. Nihil aperiam non earum assumenda laborum et aperiam voluptas sunt. Inventore necessitatibus repellendus illo asperiores repellat dolor.\n\nSit sit exercitationem. A praesentium est. Est quia perferendis voluptatem et nisi eos cum sed. Distinctio deleniti porro optio. Voluptatem similique sint recusandae voluptate.\n\nNam totam velit qui et repudiandae optio error. Est eos et quidem laboriosam libero officiis eligendi et. Et maxime quia sint consequatur eaque et cum. Odio commodi rerum.\n\nDolorem in quam quo id aspernatur architecto rerum. Et qui provident rem aut veritatis molestiae. Enim voluptatibus id quis omnis dolor tempore tempore. Quia nemo omnis in mollitia voluptatem. Atque reiciendis aspernatur fuga.\n\nCupiditate similique velit cupiditate aut eum. Maiores qui velit quidem repellat pariatur odit voluptas. Quis ut nam unde et quis repellendus voluptatibus voluptatum aut.",
                            Title = "Example Page 2 - Paragraph 4",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 11,
                            Content = "Consequatur velit ad ut. Quae eum reiciendis consequuntur recusandae delectus assumenda rerum. Autem iusto qui. Rem asperiores quaerat. Dolore odio quia iure.",
                            Title = "Example Page 2 - Paragraph 5",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 12,
                            Content = "Et sunt recusandae. Deleniti eos voluptas laborum consequatur quas. Provident hic animi quis vero molestias nostrum enim voluptas eius. Nulla ullam consequatur dolor quis pariatur veritatis sequi illum. Unde vero fugiat porro dicta quo eveniet necessitatibus perspiciatis dolorum.\n\nAut modi rerum dolores officia. Dolor recusandae reiciendis provident qui qui nisi reiciendis. A quae facilis hic.\n\nOfficiis dolorum cum aut ut aliquid et. Officia rerum quidem sit aut officia libero sint nobis et. Id molestias voluptas. Architecto culpa nemo aspernatur corporis amet sit nihil.",
                            Title = "Example Page 2 - Paragraph 6",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 13,
                            Content = "User Submitted Content 1",
                            ParagraphImage = "https://i.kym-cdn.com/entries/icons/original/000/029/079/hellothere.jpg",
                            ParagraphImageText = "Hello there",
                            Title = "User Submitted Paragraph 1",
                            WikiPageId = 3
                        },
                        new
                        {
                            Id = 14,
                            Content = "User Submitted Content 2",
                            ParagraphImage = "https://i.ytimg.com/vi/jAB3mMdS0xE/maxresdefault.jpg",
                            ParagraphImageText = "General Kenobi",
                            Title = "User Submitted Paragraph 2",
                            WikiPageId = 3
                        },
                        new
                        {
                            Id = 15,
                            Content = "Helldivers never die!",
                            ParagraphImage = "https://i.ytimg.com/vi/nhhICroqfpU/hq720_live.jpg",
                            ParagraphImageText = "Helldivers never die!",
                            Title = "New Paragraph 1",
                            WikiPageId = 4
                        },
                        new
                        {
                            Id = 16,
                            Content = "Liber-Tea is a funny line haha",
                            ParagraphImage = "https://i.kym-cdn.com/photos/images/original/002/760/001/66d",
                            ParagraphImageText = "Time for a nice cup of Liber-Tea",
                            Title = "Liber-Tea",
                            WikiPageId = 4
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.StyleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightInnerColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListLinkTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WikiName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleColor = "#526cad",
                            ArticleRightColor = "#3c5fb8",
                            ArticleRightInnerColor = "#2b4ea6",
                            BodyColor = "#507ced",
                            FooterListLinkTextColor = "#1d305e",
                            FooterListTextColor = "#233a71",
                            Logo = "/img/logo.png",
                            WikiName = "Your Wiki"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReply")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReplayToCommentId")
                        .HasColumnType("int");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.Property<int>("WikiPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReplayToCommentId");

                    b.HasIndex("UserProfileId");

                    b.HasIndex("WikiPageId");

                    b.ToTable("UserComments");
                });

            modelBuilder.Entity("wiki_backend.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteSub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WikiPages");

                    b.HasDiscriminator<string>("Discriminator").HasValue("WikiPage");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleNote = "Example RoleNote 1",
                            SiteSub = "Example SiteSub 1",
                            Title = "Example Page 1"
                        },
                        new
                        {
                            Id = 2,
                            RoleNote = "Example RoleNote 2",
                            SiteSub = "Example SiteSub 2",
                            Title = "Example Page 2"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasBaseType("wiki_backend.Models.WikiPage");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNewPage")
                        .HasColumnType("bit");

                    b.Property<string>("SubmittedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WikiPageId")
                        .HasColumnType("int");

                    b.HasIndex("WikiPageId");

                    b.HasDiscriminator().HasValue("UserSubmittedWikiPage");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            RoleNote = "User Submitted RoleNote",
                            SiteSub = "User Submitted SiteSub",
                            Title = "User Submitted Page",
                            Approved = false,
                            IsNewPage = true,
                            SubmittedBy = "tester"
                        },
                        new
                        {
                            Id = 4,
                            RoleNote = "Example RoleNote 1 Update",
                            SiteSub = "Example SiteSub 1 Update",
                            Title = "Example Page 1",
                            Approved = false,
                            IsNewPage = false,
                            SubmittedBy = "tester",
                            WikiPageId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("wiki_backend.Models.ApplicationUser", b =>
                {
                    b.HasOne("wiki_backend.Models.UserProfile", "Profile")
                        .WithOne("User")
                        .HasForeignKey("wiki_backend.Models.ApplicationUser", "ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany("Paragraphs")
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserComment", b =>
                {
                    b.HasOne("wiki_backend.Models.UserComment", "ReplyToComment")
                        .WithMany()
                        .HasForeignKey("ReplayToCommentId");

                    b.HasOne("wiki_backend.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany("Comments")
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReplyToComment");

                    b.Navigation("UserProfile");

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany()
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserProfile", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Paragraphs");
                });
#pragma warning restore 612, 618
        }
    }
}
