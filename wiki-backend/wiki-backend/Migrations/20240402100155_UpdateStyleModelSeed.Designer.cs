// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wiki_backend.DatabaseServices;

#nullable disable

namespace wiki_backend.Migrations
{
    [DbContext(typeof(WikiDbContext))]
    [Migration("20240402100155_UpdateStyleModelSeed")]
    partial class UpdateStyleModelSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImageText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WikiPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WikiPageId");

                    b.ToTable("Paragraphs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Dolore magni aut voluptatem dolor architecto est rem quia. Provident maxime quia qui et maiores rerum impedit. Dolorem sed explicabo et perspiciatis rem rerum sint. Tempora vero quaerat fuga incidunt nobis nam sequi rem quasi.\n\nRatione at quia qui. Consequatur occaecati iste occaecati consequatur occaecati. Minus ullam reiciendis voluptatem facilis consectetur veritatis eos id. Delectus sapiente accusamus beatae ea inventore.\n\nUt sapiente porro soluta aliquid sit sequi est. Laboriosam velit itaque qui ea aut a et blanditiis. Sunt autem omnis occaecati ex illo est non voluptas odit. Ex quo vitae sed rerum sapiente. Deleniti est dolorem.\n\nDistinctio possimus odit cupiditate culpa excepturi autem. Expedita ipsam voluptatem est eum deserunt sequi. Qui sit quia eum doloribus nobis inventore qui officiis magni.\n\nMolestiae unde ipsum vel vero nihil cumque ut quia. Cupiditate cumque eius iure eum blanditiis consequatur. Aliquid veritatis autem qui est. Ut quia libero vero distinctio suscipit.\n\nAb sapiente in. Soluta perferendis aut deserunt quam qui autem quas ducimus. Temporibus vel rerum molestias aspernatur ea. Tempora sit enim rem quis modi. Veritatis ex natus eum in dolor et nihil modi vel.\n\nIllum blanditiis reiciendis error aut nisi. Expedita rem adipisci aliquam fugit voluptatem. Quasi temporibus veniam nihil et rerum recusandae reiciendis pariatur. Quia assumenda rerum. Velit porro quia aut quibusdam nisi eum totam est enim. Autem cupiditate sit autem.",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 1",
                            Title = "Example Page 1 - Paragraph 1",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Velit fugit et. Ullam exercitationem aut earum delectus perspiciatis itaque aut perferendis. Voluptatem quia molestiae perspiciatis et totam optio. Molestiae non optio veritatis nihil ducimus. Vel qui at voluptate quo quia quisquam et pariatur.\n\nItaque qui vel harum illo dolore. Cupiditate vitae non alias id accusantium. Distinctio aut quis quos. Quia omnis quam. Quos doloremque ipsam aliquid.",
                            Title = "Example Page 1 - Paragraph 2",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Unde optio a et alias quia qui. Voluptas repellendus quia incidunt. Quo sint et voluptas modi.\n\nAtque adipisci voluptatum occaecati. Possimus labore quisquam eum exercitationem voluptatem est. Est amet minus alias qui facilis sint. Ab beatae placeat et voluptates qui deserunt veniam. A ut explicabo sed et mollitia libero. Cumque perferendis eaque ut.\n\nVitae ab rerum ab minima sit fuga nostrum iure. Sed animi nostrum modi mollitia facilis ea aut. Temporibus dolor cum assumenda quo. Consequuntur voluptates reiciendis nobis et est possimus repudiandae et.\n\nAutem omnis ipsam corrupti exercitationem dolor porro magnam. Quasi dolores beatae eos molestias accusamus soluta. Neque tenetur quos sint aut ad blanditiis atque dicta.\n\nQuos sit consectetur iusto aliquam. Optio molestiae sunt eum autem et eos. Rem omnis autem fugiat minima quia porro.\n\nPossimus eum dolorem. Et maxime voluptatem unde architecto et. Alias distinctio beatae qui.\n\nAut temporibus dolorem. Molestiae et veniam aut repellat et ipsum. Aut quo non dolor magni sit. Dicta ducimus molestiae adipisci enim dolores aspernatur totam provident nobis. Quis qui est officia minus voluptatibus molestiae magnam.",
                            Title = "Example Page 1 - Paragraph 3",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "Illum iure ut exercitationem dolores repudiandae consequatur fuga. Voluptatem totam quisquam ratione dolorum aperiam quasi facere ut. Voluptatum molestiae qui consequatur sapiente fugiat et voluptas. Accusantium et voluptas ut rerum fuga voluptas beatae ut.\n\nEos animi error maxime rerum modi incidunt non consequatur dolorem. Tempore illum est non et amet. Aut nostrum nesciunt nostrum. Quo exercitationem dignissimos deserunt ut ut provident dolorem qui. Non atque soluta dolore rem beatae expedita aliquid nobis. Molestias eum tenetur consequuntur aperiam tenetur in similique dolorem.\n\nIllo minus accusantium placeat assumenda quisquam tenetur error voluptatum repellendus. Officiis est ipsa quia id. Nesciunt veritatis est sunt amet laborum voluptatibus in. Magni porro et deleniti magnam temporibus. Hic ipsa est.\n\nMolestias natus ratione ipsam harum. Accusantium nemo error sunt. Molestiae nesciunt quaerat aut dolorum sequi dolore debitis vel. Quo dolorem molestiae optio. Eum eligendi ipsa aut facere.\n\nSapiente laudantium quia facilis perferendis vel nesciunt ut dolore. Qui non beatae hic hic laboriosam ullam voluptas earum. Doloribus cum enim hic rerum nam quo deserunt sed.\n\nExcepturi placeat itaque tempore. Aut quo animi nam dicta velit. Ratione quos quia possimus adipisci nam non voluptatem iure.\n\nConsequatur magnam aspernatur voluptatem fugit expedita aut. Sunt non cupiditate ea officiis autem voluptas impedit exercitationem. Sint soluta aut quidem consequuntur nemo sit earum. Non veritatis similique mollitia iste. Soluta et distinctio reiciendis rerum provident et facere. Nostrum quisquam quia explicabo.\n\nItaque quaerat nulla. Blanditiis animi fuga dolor expedita. Et perspiciatis ut omnis quas beatae officiis commodi ut rerum. Hic dignissimos est porro corporis. Est vel quis delectus et est veniam dolorem. Autem debitis inventore nostrum quia distinctio.\n\nEst vel architecto soluta. Molestiae error optio provident rerum facilis aut. Eos et iste aut aut similique fugiat ut mollitia. Id dignissimos asperiores et quae et eius qui magnam veritatis. Tenetur aut velit et qui. Rerum sunt ullam impedit labore non autem.",
                            Title = "Example Page 1 - Paragraph 4",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 5,
                            Content = "Vel ex ipsam iure. Ipsam enim sit. Voluptatum quibusdam iste repellat et deleniti voluptatem ipsum officia laboriosam.\n\nUt ducimus optio asperiores veniam est at voluptatem. Doloribus molestiae in minima vitae. Alias vel repellat culpa aut iure. Odit sed ullam enim corporis veritatis numquam. Veritatis enim fuga officia.\n\nMinima accusamus qui. Eius unde ut omnis commodi. Eos in incidunt pariatur ipsa soluta.",
                            Title = "Example Page 1 - Paragraph 5",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 6,
                            Content = "Voluptas sint reprehenderit. Consectetur nam fugit enim ab officia explicabo fuga. Illum et id nobis iure odio voluptates qui velit aut.\n\nRepellendus iure doloribus officiis. Maxime voluptatem veritatis qui ex explicabo aperiam. Magni hic omnis laudantium minima quis placeat. Dolorum et reprehenderit necessitatibus sed necessitatibus. Deserunt accusantium suscipit omnis vitae repudiandae pariatur ut provident sunt. Rem consequuntur in qui quisquam possimus ut fugit iste aut.\n\nEnim sit quibusdam consequatur exercitationem temporibus tempore magni totam. Esse eaque voluptatem. Dignissimos adipisci et. Dicta omnis voluptatibus impedit a numquam cupiditate ut. Blanditiis perferendis laboriosam illo fugit nemo ipsa quia ullam eum.\n\nNihil dolor distinctio ut sunt modi delectus. Et laboriosam magni aperiam quod molestiae culpa qui eius. Molestiae consequuntur est facilis error nemo et sint. Placeat corporis quaerat ullam nesciunt sed sint. Ut enim corporis. Ut est quae aut.",
                            Title = "Example Page 1 - Paragraph 6",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 7,
                            Content = "Officiis delectus numquam. Id odit voluptas et necessitatibus. A vel perferendis sed omnis aspernatur.\n\nDistinctio reprehenderit et nihil placeat rerum facere. Minima aliquam consequatur nesciunt qui eum magni velit. Voluptas praesentium et quaerat maiores earum voluptatem optio voluptas odio.\n\nNesciunt voluptatem nulla voluptatum debitis voluptate. Asperiores et voluptatum enim dolore consequatur eum sapiente labore est. Non repudiandae maxime adipisci. Itaque et sint quis. Voluptas neque sint voluptas minima a itaque. Et amet enim delectus odio nostrum et ut vel.\n\nCum porro molestias rerum architecto consequuntur expedita. Et et qui necessitatibus. Voluptatem tempora minus cupiditate asperiores aperiam doloremque illum. Aut et illum quia ullam cumque et. Et et excepturi voluptates aut in et ex. Quidem consequatur nihil repudiandae sed.\n\nUt deleniti repellendus illo corrupti blanditiis quibusdam. Doloremque voluptatem officiis incidunt non. Rerum commodi perspiciatis cupiditate velit unde. Et dolorum aut voluptas rerum impedit commodi veniam. Et facilis possimus ipsa omnis omnis ut et omnis totam.\n\nLibero dolorum nihil dolorum et dignissimos eos dolorem blanditiis possimus. Consequatur veniam at ipsa. Debitis nostrum ratione nihil. Ut id et. Est at eius voluptates.\n\nLibero sed velit. Quia consequatur illo. Atque dolor enim. Voluptas molestiae tempore quia pariatur placeat amet voluptate. Molestiae assumenda delectus ut.\n\nQuas veniam ex ipsam. Et corporis ducimus mollitia molestiae harum. Id est et. Explicabo non dolorem et quis et doloremque et.\n\nBlanditiis mollitia ab similique amet. Nihil voluptas magnam ad corrupti eaque. Velit fuga reprehenderit ratione quidem.",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 2",
                            Title = "Example Page 2 - Paragraph 1",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 8,
                            Content = "Est est illum saepe aut accusantium fugiat. Reprehenderit exercitationem quasi corporis tempora. Quo adipisci blanditiis recusandae possimus veritatis reiciendis unde at.\n\nVoluptates iusto soluta ut tempora quidem impedit repellat amet tempore. Eos delectus quaerat est omnis iste voluptates facere et. Qui maiores dolorem et. Rerum facilis et dolor earum a. Fugit nobis sint et sit fuga.\n\nMolestiae molestias ipsam qui. Corrupti voluptatem voluptatem quo. Ea dicta et ratione voluptatem quasi sit natus hic. Eaque sapiente nostrum et quisquam quas maxime accusamus qui. Reprehenderit autem occaecati. Eum odit ea tempore pariatur non.\n\nAccusamus nisi occaecati earum et et soluta ut. Cumque et repellendus iste laboriosam labore eos. Quia esse maxime ex aliquid.\n\nNulla repellendus vitae consequuntur. Officia eos nobis ut facere. Magni in consectetur exercitationem ipsum sapiente exercitationem et laborum voluptate. Culpa et nulla. Natus odit corrupti dolorum doloribus odit ipsa blanditiis itaque voluptatem. Perferendis labore eum cupiditate aut aut sit occaecati.\n\nId facere sapiente. Doloremque aut est. Quia laborum facere laudantium aut eos minima quas cum aperiam. Exercitationem earum dolores eum odit tempore nemo occaecati.\n\nEt doloremque quam commodi suscipit quia modi odio id. Minima esse placeat totam est. Alias dolores commodi iure voluptatem alias ut voluptatem. Omnis dolorum laboriosam ex quasi.\n\nSed eligendi architecto reprehenderit sunt. Itaque praesentium molestiae voluptate facilis beatae. Delectus omnis cum harum laborum voluptate quo fugiat. Ratione excepturi nostrum nesciunt quidem laborum sed id ut. Veniam voluptate natus ipsa laudantium quidem nam quas.\n\nEt corporis soluta est fugit odit eos quia. Nihil non voluptatem fuga voluptates. Qui dolores architecto dolore quae repellat quam saepe. Ut exercitationem unde. Consectetur esse quod voluptas doloremque autem. Esse laudantium consequatur eos unde.",
                            Title = "Example Page 2 - Paragraph 2",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 9,
                            Content = "Corporis ducimus excepturi magnam sint illo ullam sit animi. Veritatis earum nobis saepe ullam quo voluptatem consequuntur ipsam rerum. Veniam autem molestias similique sit dolor corporis. Rerum ad quis error aperiam ratione nisi ea non.\n\nInventore cupiditate sunt qui accusantium. Rerum distinctio sunt sit maiores assumenda. Explicabo est culpa dolorem necessitatibus veritatis nulla et.\n\nQuo placeat et fugiat tempora. Et dolores magnam rerum vel. Recusandae omnis provident eligendi cumque minima ratione est voluptas.\n\nQuia eum eum voluptatem qui dignissimos. Explicabo iste sapiente. Hic et iure et labore aut id optio tenetur provident. Eligendi delectus magnam et consequuntur soluta officia. Cum quae est similique ut exercitationem vel sint quo. Id dolor dolor aut assumenda nisi laudantium dolorem enim non.\n\nQui velit dolore fuga et voluptatum. Blanditiis similique exercitationem eos incidunt commodi vitae similique. Et non aliquid sit. Animi dolor sint enim. Alias sunt aliquid velit eaque. Voluptatum nulla eveniet voluptas dignissimos repudiandae veniam rem illo quia.\n\nIpsa et repellendus ducimus commodi voluptatem cumque a dicta. Autem rerum blanditiis quis hic. Vero quia tenetur quo porro quisquam molestiae et. Omnis tempora minima voluptatem iusto dicta quod.\n\nCumque optio officia dignissimos sit aut id velit. Quibusdam incidunt architecto beatae sint. Et et illo doloribus. Delectus enim similique quos quo non sit fuga. Provident ea et voluptatum.",
                            Title = "Example Page 2 - Paragraph 3",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 10,
                            Content = "Nulla vero debitis veritatis omnis. Omnis harum quis et quis exercitationem accusamus esse incidunt et. Quasi quia magnam incidunt. Amet aspernatur maiores vel magni.\n\nSed suscipit quod at. Sit est enim in repellendus quo. Atque qui non a unde est sequi repellat non doloremque. Nesciunt accusantium et quis harum optio accusantium perferendis.",
                            Title = "Example Page 2 - Paragraph 4",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 11,
                            Content = "Perspiciatis quia molestiae placeat ducimus ea est minima. Eos quam libero dolor nisi saepe et ducimus nobis. Laborum magni quam itaque eveniet distinctio assumenda id ratione dolores. Magni rerum illo ad. Veniam tempora rem placeat sint eaque quia non vero. Accusantium laudantium ut est maiores voluptatem totam nisi.\n\nRerum libero perferendis. Qui minima dolorum delectus laborum qui. Sunt ab non qui. Molestiae iste consequatur qui esse perferendis qui. Iure hic adipisci consequatur illum sunt laboriosam. Aut numquam doloremque quidem nihil repellendus vero veritatis.\n\nCorporis dolorum in. Neque alias dolores qui distinctio ipsa. Dolore error consequatur dolore et eos sunt qui.\n\nLaudantium architecto dignissimos ut. Et dolorum soluta tempore magni quasi accusantium. Perspiciatis est nam tenetur et accusamus. Quisquam culpa ad consequuntur in id praesentium sed quo.\n\nSapiente omnis sapiente assumenda eos in laboriosam commodi ut maiores. Voluptas fugiat rerum dolore aliquid in officia. Repudiandae qui velit.\n\nEt eos sit qui molestiae et explicabo nobis quos. Id iusto nostrum harum harum doloribus. Ut consequatur sit et fugiat temporibus autem. Non non nam optio laudantium culpa harum mollitia esse. Qui aperiam quia non labore iure reprehenderit occaecati ut praesentium. Ratione et atque.",
                            Title = "Example Page 2 - Paragraph 5",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 12,
                            Content = "Iusto beatae nesciunt et aut quibusdam debitis vel dolores nihil. Ullam accusamus corrupti est quaerat. Possimus ut sit quis officia commodi sint et ut nesciunt.\n\nVoluptatem aut a. Beatae quo et quis. Blanditiis vel et. Rerum laboriosam est deleniti est eos distinctio ipsum vel. Amet qui laborum voluptas illum ullam. Ipsum ipsa et eaque pariatur omnis delectus inventore nihil enim.\n\nAut neque eos repellat alias est possimus et et. Adipisci animi itaque occaecati quos enim. Eligendi aut aperiam aut ea et quia rerum. Nihil eligendi nesciunt mollitia delectus deserunt aut. Placeat ipsum nihil blanditiis eius facilis.\n\nQuibusdam impedit impedit vitae eius perferendis. Accusantium quisquam sit unde iusto iste. Quis voluptatem pariatur quidem iure aperiam. Earum architecto quam. Et quia quia numquam rerum dignissimos consequuntur.\n\nIpsa cumque eligendi. Facere eius maxime dolores. Eos fugiat necessitatibus adipisci eos omnis sed officiis et. Perspiciatis minima vel dolor.\n\nImpedit accusamus architecto deserunt eveniet quod. Et occaecati voluptatem magni ut. Sed odit quae in incidunt corporis assumenda et rerum.\n\nQuaerat minus ut in aut autem quam itaque non quod. Magnam ut veritatis eum maiores fugit non est laboriosam omnis. Et occaecati et. Culpa ipsa minus laboriosam eius ipsam ipsum officiis. Velit voluptatem assumenda inventore perspiciatis eum. Incidunt et ut neque iure et debitis recusandae.\n\nIpsam et odio voluptate sunt. Aut voluptatem aut voluptatibus laborum ipsa assumenda reiciendis. Ex dolore cumque necessitatibus recusandae. Nobis quos architecto quis quisquam recusandae ipsum id omnis provident.\n\nQui cupiditate et et soluta. Quibusdam omnis et sunt labore corrupti ut. Blanditiis accusamus voluptatem pariatur vitae omnis asperiores ullam commodi rerum. Labore dolore autem quod. Nulla qui dolores cupiditate dolor molestiae illo consequuntur.\n\nA harum velit nihil soluta maiores reprehenderit. Suscipit sit corporis quis doloribus qui. Molestiae aut aut facilis commodi.",
                            Title = "Example Page 2 - Paragraph 6",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 13,
                            Content = "User Submitted Content 1",
                            ParagraphImage = "https://i.kym-cdn.com/entries/icons/original/000/029/079/hellothere.jpg",
                            ParagraphImageText = "Hello there",
                            Title = "User Submitted Paragraph 1",
                            WikiPageId = 3
                        },
                        new
                        {
                            Id = 14,
                            Content = "User Submitted Content 2",
                            ParagraphImage = "https://i.ytimg.com/vi/jAB3mMdS0xE/maxresdefault.jpg",
                            ParagraphImageText = "General Kenobi",
                            Title = "User Submitted Paragraph 2",
                            WikiPageId = 3
                        },
                        new
                        {
                            Id = 15,
                            Content = "Helldivers never die!",
                            ParagraphImage = "https://i.ytimg.com/vi/nhhICroqfpU/hq720_live.jpg",
                            ParagraphImageText = "Helldivers never die!",
                            Title = "New Paragraph 1",
                            WikiPageId = 4
                        },
                        new
                        {
                            Id = 16,
                            Content = "Liber-Tea is a funny line haha",
                            ParagraphImage = "https://i.kym-cdn.com/photos/images/original/002/760/001/66d",
                            ParagraphImageText = "Time for a nice cup of Liber-Tea",
                            Title = "Liber-Tea",
                            WikiPageId = 4
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.StyleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightInnerColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FontFamily")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListLinkTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WikiName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleColor = "#526cad",
                            ArticleRightColor = "#3c5fb8",
                            ArticleRightInnerColor = "#2b4ea6",
                            BodyColor = "#507ced",
                            FontFamily = "Arial, sans-serif",
                            FooterListLinkTextColor = "#1d305e",
                            FooterListTextColor = "#233a71",
                            Logo = "logo_pfp.png",
                            WikiName = "Your Wiki"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReply")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReplayToCommentId")
                        .HasColumnType("int");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.Property<int>("WikiPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReplayToCommentId");

                    b.HasIndex("UserProfileId");

                    b.HasIndex("WikiPageId");

                    b.ToTable("UserComments");
                });

            modelBuilder.Entity("wiki_backend.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteSub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WikiPages");

                    b.HasDiscriminator<string>("Discriminator").HasValue("WikiPage");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleNote = "Example RoleNote 1",
                            SiteSub = "Example SiteSub 1",
                            Title = "Example Page 1"
                        },
                        new
                        {
                            Id = 2,
                            RoleNote = "Example RoleNote 2",
                            SiteSub = "Example SiteSub 2",
                            Title = "Example Page 2"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasBaseType("wiki_backend.Models.WikiPage");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNewPage")
                        .HasColumnType("bit");

                    b.Property<string>("SubmittedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WikiPageId")
                        .HasColumnType("int");

                    b.HasIndex("WikiPageId");

                    b.HasDiscriminator().HasValue("UserSubmittedWikiPage");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            RoleNote = "User Submitted RoleNote",
                            SiteSub = "User Submitted SiteSub",
                            Title = "User Submitted Page",
                            Approved = false,
                            IsNewPage = true,
                            SubmittedBy = "tester"
                        },
                        new
                        {
                            Id = 4,
                            RoleNote = "Example RoleNote 1 Update",
                            SiteSub = "Example SiteSub 1 Update",
                            Title = "Example Page 1",
                            Approved = false,
                            IsNewPage = false,
                            SubmittedBy = "tester",
                            WikiPageId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("wiki_backend.Models.ApplicationUser", b =>
                {
                    b.HasOne("wiki_backend.Models.UserProfile", "Profile")
                        .WithOne("User")
                        .HasForeignKey("wiki_backend.Models.ApplicationUser", "ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany("Paragraphs")
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserComment", b =>
                {
                    b.HasOne("wiki_backend.Models.UserComment", "ReplyToComment")
                        .WithMany()
                        .HasForeignKey("ReplayToCommentId");

                    b.HasOne("wiki_backend.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany("Comments")
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReplyToComment");

                    b.Navigation("UserProfile");

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany()
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserProfile", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Paragraphs");
                });
#pragma warning restore 612, 618
        }
    }
}
