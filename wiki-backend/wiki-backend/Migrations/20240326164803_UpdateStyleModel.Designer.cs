// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wiki_backend.DatabaseServices;

#nullable disable

namespace wiki_backend.Migrations
{
    [DbContext(typeof(WikiDbContext))]
    [Migration("20240326164803_UpdateStyleModel")]
    partial class UpdateStyleModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImageText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WikiPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WikiPageId");

                    b.ToTable("Paragraphs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Velit a et nam est vel repellat. Eligendi nam quibusdam delectus adipisci. Quia temporibus ipsa eum quam occaecati eos consequatur. Labore molestiae voluptate omnis quod laboriosam rerum. Id amet sit earum et culpa animi modi cumque placeat.\n\nVeniam quibusdam praesentium totam qui. Fuga omnis qui enim vitae. Quas ducimus exercitationem sint. Eveniet voluptas officia ut tempore. Accusantium fugiat et laboriosam maxime voluptate dolor sint.\n\nQuae quis reiciendis adipisci id cum. Sunt qui nam exercitationem eveniet eos. Dolorum sapiente explicabo error totam recusandae odio eaque id. Exercitationem consequatur laborum dolorum perspiciatis voluptas dolores reiciendis. Praesentium nisi eius aut sunt distinctio commodi laudantium ducimus quaerat.\n\nVero asperiores assumenda commodi at quo accusantium animi quis. Velit perferendis ad reprehenderit sapiente iusto reiciendis. Enim corporis qui sunt magnam ipsam amet facere laborum.\n\nDolorem aliquid aut natus quibusdam ut. Esse eligendi omnis nobis molestiae voluptas ut dolor magni. Aut praesentium similique dolor. Est porro perferendis veniam distinctio. Perferendis voluptate unde ratione et cumque autem facilis quam impedit. Autem nemo earum numquam sit autem ullam.\n\nAtque doloremque sunt autem repudiandae. Eos eos asperiores. Minus dignissimos ipsam suscipit odit minus aperiam voluptatem. Ex molestiae ea ut vel eaque. Voluptas culpa in asperiores.\n\nNesciunt dolor neque est provident alias sed reprehenderit pariatur. Distinctio doloremque magni culpa. Sapiente perferendis et et. Quos nemo est cupiditate. Quo dolorem consectetur eligendi sed rerum minus praesentium provident ea. Earum placeat cum.\n\nPlaceat earum aspernatur voluptatem in qui. Dolorum sequi nulla distinctio error autem deserunt sed. Id cum ad amet pariatur ducimus et vel quis. Sed omnis ut natus est delectus cupiditate vitae dolor reiciendis. Minima consequatur tempora rem est quia in nemo qui earum. Aut voluptatem iure itaque quo sunt inventore qui accusamus cupiditate.\n\nDucimus magnam voluptatum aperiam sequi. Sint laborum voluptates exercitationem minus sed accusamus vitae suscipit distinctio. Minus inventore rerum nesciunt ut earum quia deleniti. Occaecati in et quod hic facere amet odit maiores.",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 1",
                            Title = "Example Page 1 - Paragraph 1",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Unde dolorum ipsa odit culpa voluptas quo ratione odio. Omnis ab temporibus. Hic mollitia deserunt perferendis non dolores. Eligendi nostrum culpa nemo aut fugit ut. Velit ea ea. Eius nesciunt sint est pariatur repellendus vero reiciendis itaque.\n\nAccusantium atque nam. Aut incidunt quas vero odio autem tempore labore quia. Quasi quidem nihil nam quia. Et est consequatur nemo aut asperiores officiis inventore. Aperiam officia reiciendis perferendis error ea suscipit dolorem. Minus excepturi tempore eligendi necessitatibus.\n\nQui et omnis facere ipsam. Officiis aut eum incidunt aut accusamus maiores modi quibusdam. Voluptatem minima est sapiente suscipit numquam totam quos. Tenetur cum non et voluptatem sit. Sint modi natus iste facilis unde culpa.\n\nRerum voluptates et ut. Molestias corrupti itaque et aperiam unde qui aut officia. Nobis vel enim in ut reprehenderit cum et tempora.\n\nSit dignissimos eveniet. Qui cumque eligendi accusamus hic quis. Molestiae delectus officia quas dolore esse est. Sunt omnis voluptas enim dolorem. Temporibus at perferendis facilis suscipit numquam qui quia possimus aut.\n\nVoluptatem et dicta est. Accusantium porro similique minima et numquam esse. Voluptas et perferendis distinctio maiores soluta omnis quis labore accusantium.\n\nTempora in eum quo vero. Officiis est consequatur. Aliquam ad ipsa atque aliquid et qui porro. Impedit dolor totam quibusdam dolorum perspiciatis.\n\nOmnis ut libero error. Tenetur est fugiat non ducimus sunt. Libero eius occaecati.\n\nMagnam iure ipsam. Animi autem aspernatur alias. Aliquid facere id nesciunt.",
                            Title = "Example Page 1 - Paragraph 2",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Dolorem repellat amet tenetur omnis dignissimos. Animi consequatur ipsam qui omnis quis numquam ea rerum. Voluptatum ut placeat illo. Facilis commodi quibusdam aliquam. Maiores praesentium quae quidem voluptas praesentium numquam libero.\n\nVero ea repellendus est ipsa. Nobis fuga id. Magni quos eos optio vero quia et dolor. Neque vero officiis repudiandae.\n\nMollitia doloribus tempora quos reprehenderit eligendi. Facere quis dicta illum quia numquam itaque. Ut et aut nesciunt tempore. Alias aliquid perspiciatis minima dolor consequuntur similique qui ratione quos. Et minus ad ullam omnis perferendis magnam incidunt aut non.\n\nExpedita sit voluptas ab natus voluptatem quidem. Dolorem enim enim repudiandae non sit ut explicabo mollitia. Ut voluptas repellendus quod fuga voluptatem corrupti.\n\nAb velit quia et magni impedit ut qui. Doloribus cumque aut perferendis qui. Dolores cum maxime non. Odio amet dolorem autem maiores quas nihil dolorum. Omnis reprehenderit iusto. Praesentium quia recusandae dolore nostrum commodi accusamus rerum.",
                            Title = "Example Page 1 - Paragraph 3",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "Fuga maiores tempora dolores adipisci aut. Libero ad est illum sit tempora harum maxime. Esse sunt molestias ex repellat delectus. Id rem provident atque. Eligendi sunt sit eum tempore voluptate non voluptate est officiis.\n\nUt veniam reprehenderit officia et sapiente atque. Quia expedita voluptatem enim repellat id. Voluptatum ullam fuga cupiditate omnis ratione sed quis. Tempora qui est voluptatem voluptas.\n\nNostrum repellendus quae optio corporis enim. Nostrum doloribus delectus adipisci assumenda nobis tenetur eligendi consequatur. Et consequuntur soluta.\n\nLabore maxime hic maxime quia voluptatem enim dolores eius assumenda. Tenetur et accusamus qui tempore vero molestiae aliquam at eaque. Quisquam odio aliquid vel nihil. Sit adipisci nesciunt quam sed. Architecto non et est et ut tempora et aspernatur. Fugiat nam rerum delectus rerum omnis earum impedit.\n\nEius maiores qui quo esse minima fugiat. Nihil voluptatem nihil sit soluta tenetur enim rerum. At quas tempore dicta tempora. Quia quia occaecati amet et cumque mollitia temporibus quam. Voluptatibus autem atque hic explicabo est aliquid recusandae ut commodi.",
                            Title = "Example Page 1 - Paragraph 4",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 5,
                            Content = "Doloremque id omnis. Dolorem sed neque aliquid quos quaerat amet minus nihil aut. Et soluta et.\n\nIpsum explicabo minima harum voluptatibus inventore sint voluptatum quidem magni. Molestiae a est. Voluptatem error optio. Cupiditate praesentium perspiciatis facilis voluptatibus.\n\nProvident nisi consequuntur earum nesciunt voluptatibus odio id consequatur. Ea quia enim rerum esse eveniet. Ipsa labore velit rerum aut consequatur. Molestiae eum dignissimos minus numquam sit aut cupiditate accusamus voluptates. Est necessitatibus dicta sint et reprehenderit qui nihil dolorem. Voluptates sit repellendus ea et delectus aut.\n\nQuia facere ut animi ut inventore similique corrupti quas. Consequatur sed harum a quibusdam et sit aperiam. Dolores aspernatur ipsam. Aut maxime et voluptatum aut officia alias eius qui illo. Mollitia molestias dolorum ducimus.\n\nSed culpa voluptatem corrupti possimus labore magni et. Quia est impedit pariatur vero reiciendis odit illum. Dignissimos quibusdam doloribus soluta. Cum nam voluptas in omnis temporibus culpa aut sunt dolorum.\n\nVero blanditiis sit dolore. Aliquid et est assumenda. Omnis iste inventore dolorem. Consequatur suscipit alias consectetur est. Aperiam laudantium libero voluptatem ea molestiae et voluptatum praesentium.\n\nA ut rerum eum enim. Sunt nostrum fugit aut. Corrupti consequatur perferendis quia animi at nobis non.\n\nQuis quo eum odit officia culpa quod. Sed a soluta voluptas maiores id aperiam. Veritatis nihil non. Quis autem voluptates iste sit laborum veritatis sunt.",
                            Title = "Example Page 1 - Paragraph 5",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 6,
                            Content = "Quos et possimus praesentium dignissimos. Nostrum necessitatibus voluptatem. Modi amet ab est cupiditate ut incidunt et odio.\n\nAspernatur expedita laboriosam aut laudantium fuga ut officia non et. Autem et quaerat ipsam debitis ea qui. Pariatur et esse ut. Nisi voluptas vel et enim voluptas. Laudantium ut saepe voluptatem.\n\nEst dolores blanditiis nemo earum laboriosam et. Debitis aut blanditiis quibusdam est omnis quo. Reiciendis nulla et. Laudantium earum sequi.\n\nTenetur aperiam sint possimus consequatur exercitationem voluptatem. Minima sed natus deleniti consequatur quasi sit alias pariatur aut. Id neque ut ad itaque qui debitis qui id nostrum. Dolorum ut ducimus quo ut nesciunt voluptatem optio.",
                            Title = "Example Page 1 - Paragraph 6",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 7,
                            Content = "Atque itaque odit itaque non minus sit totam. Beatae dolores eaque praesentium voluptas. Facere illum eaque rerum nisi laboriosam et reprehenderit at. Ducimus et est ad numquam ea placeat ipsum aut voluptatem. Quam ipsum voluptatibus nihil laboriosam voluptatem nesciunt optio repellendus odio.\n\nSit provident accusamus. Corrupti officia consequatur nisi doloribus ipsum vel. Voluptatem aperiam ullam et. Sed ducimus est labore aliquid maxime quia eos voluptas in. Reprehenderit consequatur necessitatibus id amet quia eos cumque aliquam perspiciatis.\n\nNemo non magni. Quis voluptas animi voluptatum voluptas nihil. Praesentium quam eum corporis. Ea est laborum non sunt animi reprehenderit neque id fugiat. Rerum est eos repellat deserunt qui voluptatem.\n\nQui ipsam aperiam. Aut aliquid distinctio non ad fugit. Voluptate rerum ut porro quidem quibusdam sequi cum est.\n\nUt similique eius consectetur animi rerum. Voluptatem molestias nobis quae ut. Quam et voluptates aut quasi sint. Ipsa ut est ullam voluptatem rem perferendis et et. Consequatur quibusdam ut aut voluptatum labore ullam est asperiores. Ipsa cupiditate necessitatibus tenetur quibusdam laborum.",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 2",
                            Title = "Example Page 2 - Paragraph 1",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 8,
                            Content = "Illum veritatis recusandae quia molestiae dolores exercitationem eos. Molestiae voluptatibus asperiores atque. Minus sed harum enim officiis vel. Necessitatibus assumenda molestiae est facilis sed eos deserunt recusandae ipsa.\n\nQuasi similique et necessitatibus enim expedita. Illum illo velit laborum aut. Est consequatur voluptates commodi eligendi adipisci aspernatur excepturi neque est.\n\nId aut sed aspernatur. Sed voluptates porro. Quam vitae in ea et illum. Blanditiis officia ullam aut. Consequatur id quo veniam consequatur odit maxime qui error. Sed quod quia odio.\n\nNon ut aut aut libero qui velit id numquam. Pariatur rem omnis eos molestiae fugit ut. Ut rerum et enim praesentium aperiam velit perspiciatis facilis.\n\nNon facere reiciendis temporibus temporibus quos suscipit sit rem. Quod quo animi qui suscipit eos. Adipisci repellendus aut similique consequatur debitis. Repellat fugit quia.\n\nNemo et magnam. Tenetur blanditiis et blanditiis dolorum adipisci eaque ratione aspernatur distinctio. Mollitia vitae debitis et nihil natus suscipit accusamus neque nisi. Magnam dolor sunt optio voluptas et commodi maxime sed eveniet.\n\nDoloribus porro blanditiis magni enim in dignissimos. Ad minima est ut accusamus ea laboriosam deleniti ipsam. Omnis sunt et nisi. Molestias sit unde omnis.\n\nNemo excepturi dolore cupiditate autem fugit. Architecto ab quo qui est ut odio officiis explicabo quisquam. Quidem ea sunt quia. Deleniti sit ut reprehenderit. Aut rerum eveniet. Consequatur eius beatae.\n\nMaiores enim voluptates dolor dolorum veniam veniam sunt ut. Aliquam quidem reprehenderit et. Cupiditate quos sint et rem aut et. Atque consequuntur consequatur itaque velit unde et nemo dolores. Assumenda qui recusandae qui reprehenderit alias quia.\n\nHic est consequuntur maxime maiores quas. Quam necessitatibus cupiditate consequuntur saepe est ipsum aut. Beatae officiis quia reprehenderit minus magni autem. Amet sequi quia voluptate aut et temporibus. Incidunt possimus eum consequatur.",
                            Title = "Example Page 2 - Paragraph 2",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 9,
                            Content = "Est cupiditate voluptatem non. Occaecati non sapiente voluptates enim accusamus. Voluptatem aut rerum minima ratione fuga accusantium aut corporis placeat. Eos delectus quis ipsam quod aut nam. Magnam ea illum soluta numquam reprehenderit omnis. Et suscipit incidunt sunt excepturi vitae dolorum doloribus.\n\nQui at quaerat fugit. Ea sit veritatis nobis enim ab quasi. Autem unde amet.\n\nAt non eaque in molestiae quos asperiores. Officiis voluptatibus quia. Placeat expedita vitae sequi beatae vero a. Harum ullam repellendus.\n\nAccusamus quos ipsum quis architecto alias facere ut iure recusandae. Natus quibusdam illum. Reiciendis ut beatae. Et voluptates dolor voluptatem accusantium fuga vitae adipisci at.",
                            Title = "Example Page 2 - Paragraph 3",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 10,
                            Content = "Placeat reprehenderit voluptatem asperiores. Eius culpa ex soluta consequuntur quam ullam quia id et. Voluptatum ratione similique sunt accusantium ut rerum magnam ut.\n\nDeleniti vel ea earum repudiandae recusandae suscipit non quisquam est. Vero veniam est recusandae nulla et cumque. Impedit ea ea ipsa quas quidem qui esse voluptas autem. Voluptas maiores dolorum quibusdam asperiores ut doloremque quod et. Quos aperiam quaerat esse doloremque omnis beatae atque sunt non.\n\nMagnam iusto ipsum iure voluptatem est fuga. Hic omnis et. Ipsum repudiandae qui natus qui est in et voluptas. Aperiam sapiente fuga esse in nisi. Quis possimus sunt rerum tempora. Sint nostrum id consequuntur ea libero nostrum ipsum porro.\n\nNam voluptate vero quia eaque eos modi et. Accusamus praesentium quia. Dolorem repellendus perferendis repudiandae quaerat facere. Ut placeat occaecati voluptatem magnam labore. Consequuntur rerum voluptate. Aut qui dolores repellendus consequatur omnis.\n\nCorrupti placeat id. Nisi consequuntur qui provident soluta consequuntur laborum commodi. Cum sit saepe repellendus dolores. Dignissimos voluptas dolorum placeat error corrupti qui.\n\nQuos eum quidem eius. Alias nemo dicta expedita molestiae sint aliquid nostrum ullam totam. Animi nihil quo rerum praesentium ducimus consequatur molestiae tenetur.",
                            Title = "Example Page 2 - Paragraph 4",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 11,
                            Content = "Aut deserunt voluptas aliquid accusantium consequatur. Vero eum cumque vel quis quia. Doloribus dolor quo enim. Inventore delectus rerum deserunt repellendus rerum molestiae rerum.\n\nConsectetur architecto reiciendis voluptates eum et dolores. Iure tenetur minus qui dolores et nulla. Eos harum corrupti nisi repudiandae officiis dolor voluptates. Beatae doloremque id. Quos illum et culpa debitis quis hic dolorem earum totam. Impedit explicabo nostrum quia amet nisi id ea fugiat harum.\n\nPraesentium aspernatur esse magni et ea excepturi esse. Et ipsa temporibus non harum. Aut possimus ad. Dolor sequi accusantium atque.\n\nError nihil omnis. Labore nisi eligendi aut aut alias sit enim aliquam. Praesentium qui explicabo. Laboriosam officia debitis dolorem esse eius eaque consequuntur quisquam. Ut ipsum id soluta maxime.\n\nSimilique velit adipisci temporibus sunt. Cupiditate soluta beatae et possimus sint placeat. Quo veritatis placeat sit facere sapiente sit. Provident itaque et dolor magni. Autem veritatis ea aliquid accusamus laborum enim dolorem quia quia.\n\nQuod non nihil cupiditate sequi corrupti architecto voluptas. Sint non nemo optio excepturi blanditiis nihil amet ipsa sed. Eum illum sit. Ullam quisquam maiores esse facere.\n\nQuas sit id quia minus. Inventore quas hic adipisci nam beatae rerum reiciendis. Quae et debitis ea reiciendis molestias omnis debitis voluptatem amet.",
                            Title = "Example Page 2 - Paragraph 5",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 12,
                            Content = "Sit non est accusamus. Nihil minima enim nam est reiciendis repellendus perspiciatis. Animi dolores nihil enim. Qui maiores distinctio aut iste et. Eveniet voluptas culpa dignissimos et animi laudantium non sunt facere.\n\nVero dolor sunt. Totam doloribus quos totam. Culpa corporis alias. Eaque aut saepe unde. Esse reprehenderit voluptatem ea. Voluptatem pariatur non beatae rerum aspernatur.\n\nRem qui earum amet quia officia eum reprehenderit et. Odio qui ullam qui officia magnam reprehenderit doloremque ea nemo. Cum quaerat ut voluptas dicta enim qui. Vitae nam vero ut ut.\n\nQuas natus sed nobis culpa quo repellat aut. Consequatur modi repellendus qui earum necessitatibus et corporis cumque. Consequatur et voluptatem odio dignissimos eligendi nostrum. Molestiae molestiae eos repellat quasi omnis et et voluptatem.\n\nEnim molestiae temporibus mollitia amet minus voluptatem cum porro ratione. Voluptates eum est aliquam iusto. Qui soluta consequatur necessitatibus aut vitae. Est exercitationem iure corporis voluptas quia ipsa eum est. In asperiores repellendus quia mollitia beatae atque temporibus omnis.\n\nEt non occaecati dolorem doloremque debitis voluptas et sunt. Exercitationem debitis maxime a incidunt omnis aliquam harum dolorum totam. Ipsa ex sunt quae sequi pariatur ipsa consectetur sed. Explicabo blanditiis nostrum aliquid laudantium aspernatur dolores minima. Recusandae eos suscipit accusamus omnis hic. Sit ad vel voluptatem voluptatem illo.\n\nMolestias architecto qui ut vel dignissimos suscipit nobis aliquid at. Itaque sint dignissimos repellat rerum. Quia ipsum eaque officia omnis consequatur iure voluptatem. Et vel quis corporis qui pariatur qui at. Odit ex vel ducimus repudiandae. Consequatur exercitationem illum voluptas adipisci natus et dolores officia minima.\n\nOdio modi recusandae tempore et voluptate omnis et iure dolorem. Ea minima odio id deleniti alias ipsa. At amet quis et aliquam perferendis asperiores eum ex iusto. Magni id sit aut voluptatem. Et ipsa quidem nam odio qui rerum. Libero molestias illo saepe minus.\n\nQuia eaque consequatur ut quis iusto. Nemo exercitationem blanditiis qui suscipit non soluta dolores. Ipsam cum quod animi sapiente. Eos quia qui. Velit quae quia qui ut voluptatem molestias.",
                            Title = "Example Page 2 - Paragraph 6",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 13,
                            Content = "User Submitted Content 1",
                            ParagraphImage = "https://i.kym-cdn.com/entries/icons/original/000/029/079/hellothere.jpg",
                            ParagraphImageText = "Hello there",
                            Title = "User Submitted Paragraph 1",
                            WikiPageId = 3
                        },
                        new
                        {
                            Id = 14,
                            Content = "User Submitted Content 2",
                            ParagraphImage = "https://i.ytimg.com/vi/jAB3mMdS0xE/maxresdefault.jpg",
                            ParagraphImageText = "General Kenobi",
                            Title = "User Submitted Paragraph 2",
                            WikiPageId = 3
                        },
                        new
                        {
                            Id = 15,
                            Content = "Helldivers never die!",
                            ParagraphImage = "https://i.ytimg.com/vi/nhhICroqfpU/hq720_live.jpg",
                            ParagraphImageText = "Helldivers never die!",
                            Title = "New Paragraph 1",
                            WikiPageId = 4
                        },
                        new
                        {
                            Id = 16,
                            Content = "Liber-Tea is a funny line haha",
                            ParagraphImage = "https://i.kym-cdn.com/photos/images/original/002/760/001/66d",
                            ParagraphImageText = "Time for a nice cup of Liber-Tea",
                            Title = "Liber-Tea",
                            WikiPageId = 4
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.StyleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightInnerColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FontFamily")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListLinkTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WikiName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleColor = "#526cad",
                            ArticleRightColor = "#3c5fb8",
                            ArticleRightInnerColor = "#2b4ea6",
                            BodyColor = "#507ced",
                            FontFamily = "Arial, sans-serif",
                            FooterListLinkTextColor = "#1d305e",
                            FooterListTextColor = "#233a71",
                            Logo = "/img/logo.png",
                            WikiName = "Your Wiki"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReply")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReplayToCommentId")
                        .HasColumnType("int");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.Property<int>("WikiPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReplayToCommentId");

                    b.HasIndex("UserProfileId");

                    b.HasIndex("WikiPageId");

                    b.ToTable("UserComments");
                });

            modelBuilder.Entity("wiki_backend.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteSub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WikiPages");

                    b.HasDiscriminator<string>("Discriminator").HasValue("WikiPage");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleNote = "Example RoleNote 1",
                            SiteSub = "Example SiteSub 1",
                            Title = "Example Page 1"
                        },
                        new
                        {
                            Id = 2,
                            RoleNote = "Example RoleNote 2",
                            SiteSub = "Example SiteSub 2",
                            Title = "Example Page 2"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasBaseType("wiki_backend.Models.WikiPage");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNewPage")
                        .HasColumnType("bit");

                    b.Property<string>("SubmittedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WikiPageId")
                        .HasColumnType("int");

                    b.HasIndex("WikiPageId");

                    b.HasDiscriminator().HasValue("UserSubmittedWikiPage");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            RoleNote = "User Submitted RoleNote",
                            SiteSub = "User Submitted SiteSub",
                            Title = "User Submitted Page",
                            Approved = false,
                            IsNewPage = true,
                            SubmittedBy = "tester"
                        },
                        new
                        {
                            Id = 4,
                            RoleNote = "Example RoleNote 1 Update",
                            SiteSub = "Example SiteSub 1 Update",
                            Title = "Example Page 1",
                            Approved = false,
                            IsNewPage = false,
                            SubmittedBy = "tester",
                            WikiPageId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("wiki_backend.Models.ApplicationUser", b =>
                {
                    b.HasOne("wiki_backend.Models.UserProfile", "Profile")
                        .WithOne("User")
                        .HasForeignKey("wiki_backend.Models.ApplicationUser", "ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany("Paragraphs")
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserComment", b =>
                {
                    b.HasOne("wiki_backend.Models.UserComment", "ReplyToComment")
                        .WithMany()
                        .HasForeignKey("ReplayToCommentId");

                    b.HasOne("wiki_backend.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany("Comments")
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReplyToComment");

                    b.Navigation("UserProfile");

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany()
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserProfile", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Paragraphs");
                });
#pragma warning restore 612, 618
        }
    }
}
