// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wiki_backend.DatabaseServices;

#nullable disable

namespace wiki_backend.Migrations
{
    [DbContext(typeof(WikiDbContext))]
    [Migration("20240229112511_InitialMigration4")]
    partial class InitialMigration4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImageText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WikiPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WikiPageId");

                    b.ToTable("Paragraphs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Accusantium ut aliquid quae nam deserunt. Hic iure minima aspernatur officiis recusandae. Voluptate quia cum.\n\nId molestiae modi. Expedita sit rerum tempora corrupti nisi et. Et et quam. Quis temporibus quas cum. Incidunt et ad vel dolorem error corporis eligendi. Incidunt iusto distinctio deserunt nulla consectetur omnis.\n\nIpsam corporis dolorem necessitatibus voluptas cum. Libero est iste dolorem quis aut eos modi. Quo ipsum aut iusto sit eveniet aliquam. Nam accusantium quo repudiandae commodi quisquam ut.\n\nEx porro ut fugiat. Vero vel recusandae recusandae minima sint. Aut est fuga. Illo quis sapiente voluptatibus quo sit quia. Quia neque tenetur debitis eligendi magni tenetur tempora.\n\nNon voluptas facere sunt earum est sed neque voluptas excepturi. Quis nihil quaerat et atque dolor et assumenda officiis. Veritatis adipisci ducimus nesciunt.\n\nItaque et sunt possimus inventore et consequatur delectus quidem. Aliquam illum sequi provident. Eius a esse quidem velit. Repellat debitis velit minima possimus nostrum illum distinctio. Autem repellendus officiis quidem.\n\nEligendi quia consequatur laboriosam possimus et impedit ut corrupti. Quo debitis omnis dolor. Ea et beatae sunt sequi eius eum minus voluptate. Delectus perferendis voluptas dolores est autem. Laboriosam consequuntur facilis consequuntur molestiae aut expedita voluptas qui. Maiores et mollitia est dolorem dolor vel dolorem.\n\nQuam placeat eius nisi. Et et nulla consequatur dolor dignissimos vel velit. Sit accusantium velit ratione repellat at quis tempora. Veritatis quibusdam provident ipsum.",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 1",
                            Title = "Example Page 1 - Paragraph 1",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Cum sit consequuntur fuga culpa blanditiis praesentium iusto. Et ut quia dolorem laborum. Autem vel quasi nesciunt nobis omnis harum in porro soluta.\n\nSed eius dicta tenetur natus porro vel rerum. Neque alias velit est sint eos excepturi quis sed. Neque a a. Pariatur cupiditate consequatur cumque harum ut ut.",
                            Title = "Example Page 1 - Paragraph 2",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Et laudantium est optio quia. Magnam autem dicta. Nemo autem explicabo quia.\n\nAd quos facere maiores sint cupiditate aperiam ipsum. Temporibus aut laudantium vero. Sunt ipsum corporis ipsum quia. In quia voluptate quas. Aut aut iste dolorem nihil quis libero. Officiis et et deleniti et enim officiis velit porro.\n\nUt et eos. Dolorem maiores non consectetur quasi nulla molestiae. Veniam ut qui aliquam nulla quia atque.\n\nNostrum provident et ea quis nihil. Aut est in veritatis quia in sit fuga laborum tempora. Ut exercitationem vel dolore excepturi suscipit. Vel dignissimos ducimus illum dolore ipsa dignissimos asperiores sunt voluptatibus. Ut excepturi in possimus quasi quasi quibusdam. Voluptatem qui laudantium autem sunt.\n\nAlias pariatur repellendus at. Dolor natus sit dolores ad soluta voluptas nostrum. Dolorem ex minus. Soluta molestias ratione quasi sed vel nostrum excepturi non deleniti. Iste aperiam ratione minus ducimus quaerat.",
                            Title = "Example Page 1 - Paragraph 3",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "Commodi tempora voluptas temporibus consequatur placeat voluptas voluptas dolores. Ea ut at accusantium velit sint facere. Culpa delectus sunt voluptatem distinctio.\n\nVeniam laboriosam recusandae molestiae rem. Provident veritatis veritatis consequatur nisi dolor. Voluptatum alias consequuntur. Excepturi quia consequuntur beatae numquam non suscipit quaerat molestiae.\n\nVoluptate beatae iste aut voluptas doloribus est quisquam recusandae id. Alias quo consequatur et impedit. Est tenetur corrupti minus ut sunt est.",
                            Title = "Example Page 1 - Paragraph 4",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 5,
                            Content = "Dolorem officiis eaque autem omnis doloremque autem excepturi unde voluptas. Nihil occaecati fuga tempora molestiae doloribus sit modi autem soluta. A omnis qui quas aut.\n\nEst voluptatem nesciunt omnis assumenda aliquam saepe libero accusantium. At libero velit tempore voluptatibus. Laboriosam dolorem nesciunt at velit dicta voluptas laudantium ut ipsum.\n\nTempore voluptas quos. Et enim doloremque cum placeat ab omnis. Voluptatibus fugit perferendis temporibus nihil rerum. Dolor voluptatem enim dolor ea dicta. Libero dicta accusantium commodi. Id est repellat aperiam quos odio excepturi soluta.\n\nQuibusdam quia dolorem dolorem quia sunt. Distinctio et ipsa. Quidem molestias illo mollitia culpa. Et qui ut incidunt aut atque sunt repellendus rerum accusamus.\n\nVoluptas beatae nobis eum consectetur. Dolor omnis explicabo ut et dolorum laborum enim labore. Sint provident vel tempore voluptas aperiam nemo aliquid est placeat. Eligendi a fugit dicta sit non dolores. Commodi eos officiis pariatur suscipit mollitia.\n\nCorporis veniam pariatur quae adipisci cupiditate qui qui. Magni voluptates aut aut impedit. Quia earum recusandae fugit tenetur sed ducimus omnis.",
                            Title = "Example Page 1 - Paragraph 5",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 6,
                            Content = "Suscipit natus rem aliquam necessitatibus modi saepe dolores id optio. Ex corporis magnam quis dolorum. Officiis tempora atque porro quis optio quia dolores nesciunt. Vel occaecati magnam vel consequuntur consequatur amet in. Facilis beatae quia ratione. Dolor sed aut dolor.\n\nMolestiae accusantium suscipit est aut molestias aut aut commodi enim. Temporibus aperiam labore illum sint. Fuga repellat est non et optio repudiandae aut quam ducimus. Nam numquam officia cumque. Corrupti tempore maxime aliquid id. Deserunt totam eius temporibus sit.\n\nQuas et voluptatem non ex dolor incidunt. Natus ut pariatur provident dolor quos sunt soluta consequatur consequatur. Nisi repellendus corporis possimus repellat repellendus.",
                            Title = "Example Page 1 - Paragraph 6",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 7,
                            Content = "Accusantium est accusantium placeat natus blanditiis nostrum aliquam voluptatem. Id nisi totam in praesentium nihil sit ducimus minus voluptatem. Exercitationem vel asperiores blanditiis quia eveniet. Eos id aut.\n\nDolores tempore minima ratione consequatur quia. Eum non excepturi in molestiae. Iure qui amet autem officiis reprehenderit ratione non quae exercitationem.\n\nQuia dolorem ab porro quo consequatur consequatur. Consequuntur sequi cupiditate repellendus harum. Sequi maxime quia. Quidem provident sed expedita sequi quis quia.\n\nEsse est excepturi earum nesciunt ea. Aperiam porro nulla est. Quam hic est dolorem eos quia et sed quia.\n\nHic incidunt voluptatum in et sit culpa. Excepturi officia facilis. Soluta doloremque quia modi voluptatem facere a ab porro. Eius voluptas voluptas culpa qui rerum. Maiores quas harum sequi odit labore. Consequatur sit qui deleniti harum quia ut sed et.\n\nAccusantium quis sint laborum et. Quis tempora quae deleniti eaque minus fugiat quo dolore. Quis maxime quisquam nihil illum cupiditate optio nisi ea. Laudantium harum sapiente voluptatem ipsa distinctio. Vel molestias ut.\n\nNon esse dolor molestiae veniam magni illo. Deleniti magni temporibus exercitationem recusandae ex et recusandae. Rerum unde ea eligendi odio dolores libero hic et. Natus delectus facere ut. Nemo repellendus quibusdam quae eius ad exercitationem. Eum ut dolorem expedita dolorum quos nesciunt voluptatem.\n\nSint asperiores vero omnis voluptas. Culpa officia molestiae aut vel numquam a est consequatur rerum. Ad id et sunt reiciendis exercitationem dignissimos voluptatem ut.\n\nEligendi atque aut. Inventore aliquam natus nemo dolorem est ut ab voluptates ipsa. Placeat cumque aperiam fuga dolorum id quasi sit enim. Earum est exercitationem libero reiciendis perferendis inventore facilis. Eos consequatur commodi unde.",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 2",
                            Title = "Example Page 2 - Paragraph 1",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 8,
                            Content = "Amet temporibus ipsa consequatur. Reiciendis blanditiis soluta est sint impedit voluptas optio autem provident. Amet qui alias rerum voluptates quo eos non aut molestiae. Cum similique quisquam iusto dolores totam ullam quis error consequatur. Et aut eum quia dicta est voluptatem. Deserunt laborum itaque doloribus aut voluptatum commodi aut suscipit assumenda.\n\nCorporis eligendi ratione earum maiores. Ea architecto tempora harum maxime et sint voluptates. Eos non reiciendis eaque.\n\nQuia aliquam fugit. Natus id nam asperiores excepturi consequatur aliquam velit neque. Eveniet eveniet ut maxime tempore nihil qui aut. Qui fuga non ad cum animi rerum neque sunt dolor. Ducimus libero dolore placeat quas nostrum facilis molestiae voluptatum.\n\nEt rerum eius in autem. Expedita cupiditate placeat dignissimos rem perferendis voluptatibus ut itaque. Facilis accusamus accusamus. Odio esse maxime.\n\nVel est ad deleniti ut voluptatibus magnam itaque aliquam. Porro sed aut. Ab officia unde ut. Ullam dolores non id repudiandae cupiditate sint perspiciatis impedit unde.\n\nOdit beatae ut. Maiores a enim eligendi adipisci fuga odit voluptas ratione vitae. Consequatur at aut reiciendis eos. Minus et dolorem velit magnam quia architecto rerum atque.\n\nNobis quas quas itaque soluta alias. Facilis et et tempore nihil ducimus. Quos voluptas officiis necessitatibus minus. Omnis ut vel. Ipsa ut quisquam inventore in et omnis et quia. Tenetur animi suscipit rerum accusantium sed voluptates beatae nostrum quasi.\n\nDolores assumenda enim voluptatem explicabo. Nobis sapiente consequatur molestias atque. Occaecati enim possimus provident illum et aut quod ut. Eum nesciunt quae voluptatem eveniet magnam ut minus voluptatibus. Quis autem neque magnam ut dolorem ut adipisci provident.\n\nRerum quia et dignissimos sunt minima. In fuga ipsum ipsum quod adipisci ipsam doloribus eos in. Numquam perspiciatis vel voluptate dolor mollitia ex nihil omnis. Debitis ea expedita. Dolores suscipit magni dolores cupiditate ex modi officiis minus.",
                            Title = "Example Page 2 - Paragraph 2",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 9,
                            Content = "Non ut dolorem quia omnis tenetur dolor veniam eos et. Eius qui assumenda. Doloribus molestiae eum qui maiores architecto. Cumque sed omnis totam qui repellat sed. Magnam veniam quis qui qui culpa quis. Aut incidunt sunt voluptatem omnis fugiat recusandae.\n\nEt vel sunt eum cum vel laboriosam. Et quia ipsa ea assumenda totam facilis. Et velit nihil consequatur ut.\n\nRepudiandae inventore sed rerum provident nihil optio dolorem. Rerum voluptatum reprehenderit dolorum omnis. Possimus molestias nisi porro ad sit. Quis dolore eaque pariatur sed ad quaerat. Est in quia. Et a beatae.\n\nConsequatur architecto voluptate sapiente similique quas omnis ut reprehenderit. Vel perspiciatis earum qui aliquid laborum rerum ullam accusamus. Et est recusandae ullam repellat. Animi laudantium iusto rerum.\n\nDoloremque voluptatem voluptatum natus dignissimos qui. Nostrum minus veritatis in asperiores aut aut quia earum ipsa. Quisquam non architecto repellendus debitis autem ipsa illum magnam sit.\n\nModi veritatis amet et et ad cumque ut vero et. Rerum optio molestiae porro maxime. Voluptatibus consequuntur quia velit omnis dolorem optio nesciunt. Alias quaerat eveniet perspiciatis dolor blanditiis a dolorem voluptatibus. Reprehenderit velit et est dolor. Ad ut quisquam qui fuga aut perferendis temporibus repellat eius.\n\nNon adipisci illo culpa laboriosam qui. Culpa commodi quae nemo vitae voluptas et. Quo quis eveniet cum consequatur eum non qui saepe delectus.\n\nExcepturi enim quis veritatis quis non. Ratione repudiandae et aliquam fuga qui. Nulla est repellendus consequatur voluptatibus voluptatem soluta beatae aliquid. Quis dolorum consequatur nobis.",
                            Title = "Example Page 2 - Paragraph 3",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 10,
                            Content = "Voluptatem dolor consequatur quod est ab qui veniam voluptatum. Quia et aut non sit odio vel consequatur officia. Eligendi atque neque rerum animi excepturi est aut optio ducimus. Delectus rem qui quis optio eos totam corrupti cumque repellat.\n\nFuga corrupti voluptas sit dolore magnam magnam neque magnam. Sit sed fugiat distinctio sapiente impedit. Quidem ut ratione rerum qui magni nihil magni illum autem. Excepturi et enim non. Consequatur dicta possimus.\n\nQui qui dicta praesentium expedita corrupti cupiditate itaque. Dolorem nulla molestias vel voluptas voluptas blanditiis. Aut et excepturi voluptates eum quos. Reprehenderit eaque magni.\n\nAssumenda est iste quae tempora rem sequi dolores. Magni iure dignissimos. Adipisci est sit itaque aliquam doloremque similique.",
                            Title = "Example Page 2 - Paragraph 4",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 11,
                            Content = "Nihil vero quod nobis et non accusamus delectus id. Architecto earum esse consequatur fugit velit omnis cumque adipisci. Velit sit odit provident blanditiis iure non saepe.\n\nSed nam quia. Commodi aspernatur dolorem cumque et aliquid sunt iusto ipsam. Labore atque veritatis sunt qui quia non iste nulla. Quidem aliquam rerum vitae veniam in porro quidem officiis. Sint ea qui dolores.\n\nArchitecto natus est quis sit reprehenderit exercitationem. Praesentium et placeat aut sint et dolores. Laudantium quis libero quod. Officia magnam voluptas.\n\nAut ea eveniet voluptas blanditiis sed. Delectus nam ex consequatur velit est vitae numquam consequatur. Est odio quam delectus mollitia et. Velit quo illum delectus minus id omnis. Impedit et similique et esse.\n\nQuibusdam est aliquid ea excepturi occaecati iusto vero qui. Voluptatem repellat recusandae voluptatem. Odit necessitatibus eligendi error similique officia pariatur qui recusandae. Vel unde et exercitationem dignissimos nemo. Ducimus tempore quis ab maxime.\n\nReprehenderit tenetur tenetur nihil neque consequatur. Eveniet soluta quia ex ut error placeat ut. Ut sit et ab.\n\nNemo et alias omnis delectus provident aut voluptatem. Ut et eius quia velit officia. Aut tempore ex autem qui qui. Ab et non et aut. Facere tempore esse tenetur deserunt dolores.\n\nEarum hic qui occaecati laborum quisquam veniam praesentium explicabo dolorem. Ea vel dolorem sunt eligendi. Ut ut nostrum suscipit voluptas. Ut illum voluptates.\n\nAutem rerum tempora molestiae molestias quae quo autem fugit. Non quia non quis. Dolore inventore blanditiis accusantium sit. Sequi aliquam qui qui ut debitis incidunt cupiditate animi.\n\nEligendi qui nesciunt repellat fugit. Doloremque sint aut qui optio. Alias enim voluptas doloribus nobis. Deserunt ut occaecati voluptas vel amet.",
                            Title = "Example Page 2 - Paragraph 5",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 12,
                            Content = "Dolorum recusandae nisi. Sed animi placeat voluptas enim et modi. Et ut consequuntur nam qui amet.\n\nQui hic voluptatum at itaque voluptatem fuga. Aliquam aliquid facere veritatis aut sint quia reprehenderit neque. Ut sed voluptatum consequatur itaque dicta quia.\n\nVitae voluptatum totam id accusantium numquam velit. Asperiores omnis omnis vel. Eum reiciendis consectetur ipsum sunt quibusdam.\n\nQuod omnis nisi. Sint eaque autem. Tempore natus ut. Eos eveniet eos deserunt sit. Accusantium commodi voluptatem delectus nihil explicabo assumenda voluptas modi qui.\n\nDicta quia laborum et. Odio voluptatem quia illo sit qui. Beatae et dolorem qui et accusamus dolore fugiat. Distinctio ea facere necessitatibus dolorum autem sed.\n\nArchitecto necessitatibus debitis omnis delectus ducimus. Vel et quis consequuntur impedit voluptates sequi. Ullam blanditiis modi vel. Occaecati illo aut totam.\n\nPariatur unde reprehenderit aut. Suscipit ipsam laborum debitis provident cupiditate. Nemo quia id reiciendis ipsum nemo corporis. Hic quisquam sint. Quos doloribus maxime expedita voluptatem sint reprehenderit facere illum.",
                            Title = "Example Page 2 - Paragraph 6",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 13,
                            Content = "User Submitted Content 1",
                            ParagraphImage = "https://i.kym-cdn.com/entries/icons/original/000/029/079/hellothere.jpg",
                            ParagraphImageText = "Hello there",
                            Title = "User Submitted Paragraph 1",
                            WikiPageId = 3
                        },
                        new
                        {
                            Id = 14,
                            Content = "User Submitted Content 2",
                            ParagraphImage = "https://i.ytimg.com/vi/jAB3mMdS0xE/maxresdefault.jpg",
                            ParagraphImageText = "General Kenobi",
                            Title = "User Submitted Paragraph 2",
                            WikiPageId = 3
                        },
                        new
                        {
                            Id = 15,
                            Content = "Helldivers never die!",
                            ParagraphImage = "https://i.ytimg.com/vi/nhhICroqfpU/hq720_live.jpg",
                            ParagraphImageText = "Helldivers never die!",
                            Title = "New Paragraph 1",
                            WikiPageId = 4
                        },
                        new
                        {
                            Id = 16,
                            Content = "Liber-Tea is a funny line haha",
                            ParagraphImage = "https://i.kym-cdn.com/photos/images/original/002/760/001/66d",
                            ParagraphImageText = "Time for a nice cup of Liber-Tea",
                            Title = "Liber-Tea",
                            WikiPageId = 4
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.StyleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightInnerColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListLinkTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WikiName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleColor = "#526cad",
                            ArticleRightColor = "#3c5fb8",
                            ArticleRightInnerColor = "#2b4ea6",
                            BodyColor = "#507ced",
                            FooterListLinkTextColor = "#1d305e",
                            FooterListTextColor = "#233a71",
                            Logo = "/img/logo.png",
                            WikiName = "Your Wiki"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReply")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReplyToCommentId")
                        .HasColumnType("int");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.Property<int>("WikiPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.HasIndex("WikiPageId");

                    b.ToTable("UserComments");
                });

            modelBuilder.Entity("wiki_backend.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteSub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WikiPages");

                    b.HasDiscriminator<string>("Discriminator").HasValue("WikiPage");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleNote = "Example RoleNote 1",
                            SiteSub = "Example SiteSub 1",
                            Title = "Example Page 1"
                        },
                        new
                        {
                            Id = 2,
                            RoleNote = "Example RoleNote 2",
                            SiteSub = "Example SiteSub 2",
                            Title = "Example Page 2"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasBaseType("wiki_backend.Models.WikiPage");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNewPage")
                        .HasColumnType("bit");

                    b.Property<string>("SubmittedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WikiPageId")
                        .HasColumnType("int");

                    b.HasIndex("WikiPageId");

                    b.HasDiscriminator().HasValue("UserSubmittedWikiPage");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            RoleNote = "User Submitted RoleNote",
                            SiteSub = "User Submitted SiteSub",
                            Title = "User Submitted Page",
                            Approved = false,
                            IsNewPage = true,
                            SubmittedBy = "tester"
                        },
                        new
                        {
                            Id = 4,
                            RoleNote = "Example RoleNote 1 Update",
                            SiteSub = "Example SiteSub 1 Update",
                            Title = "Example Page 1",
                            Approved = false,
                            IsNewPage = false,
                            SubmittedBy = "tester",
                            WikiPageId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("wiki_backend.Models.ApplicationUser", b =>
                {
                    b.HasOne("wiki_backend.Models.UserProfile", "Profile")
                        .WithOne("User")
                        .HasForeignKey("wiki_backend.Models.ApplicationUser", "ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany("Paragraphs")
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserComment", b =>
                {
                    b.HasOne("wiki_backend.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany("Comments")
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany()
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserProfile", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Paragraphs");
                });
#pragma warning restore 612, 618
        }
    }
}
