// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wiki_backend.DatabaseServices;

#nullable disable

namespace wiki_backend.Migrations
{
    [DbContext(typeof(WikiDbContext))]
    [Migration("20240228085822_AddIsEditedToUsercomment")]
    partial class AddIsEditedToUsercomment
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImageText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WikiPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WikiPageId");

                    b.ToTable("Paragraphs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Repellat ut vero cupiditate. Numquam qui mollitia quis velit facere. Numquam dolores nihil. Qui voluptas doloremque reiciendis saepe amet adipisci modi.\n\nNulla temporibus accusantium. Delectus earum voluptatem quaerat id necessitatibus cum nobis dolores dolor. Eos sint ab. Et esse ea.\n\nBeatae voluptatum saepe voluptatem eligendi omnis. Tempore perspiciatis nisi. Dolorem tenetur qui nihil alias veritatis ut quos non voluptatem. Quam odio nihil ut velit ad cupiditate aut id voluptatem. Excepturi voluptas et adipisci eius distinctio minus labore consequuntur eaque.\n\nSit nesciunt harum ratione ratione rerum eos voluptatum itaque. Fugiat aut optio officiis excepturi et est. Animi ipsa doloremque quibusdam molestias dolores. Dolorum et sint sed. Rem labore quibusdam quas ut ab voluptatem et et consequatur. Et minima magnam et dicta.\n\nHic fugit eum rerum quia omnis ipsa. In quas facere esse suscipit perferendis voluptas nihil. Voluptatum esse ad consequatur aut neque natus blanditiis voluptatem quae. Quae quis occaecati perferendis ex error at. Culpa aut dignissimos occaecati nemo.",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 1",
                            Title = "Example Page 1 - Paragraph 1",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Est est quis quisquam. Corrupti ullam voluptatem veniam quidem voluptate repellat molestias neque. Laborum non voluptatibus enim omnis ducimus esse error. Exercitationem hic sunt cum nihil dolorem similique ex nulla. Nam quaerat aperiam. Voluptatum aspernatur voluptas consequatur sit.\n\nSuscipit enim sit. At omnis ut itaque consequatur corporis vitae consequatur cumque rem. Qui dolor at et quaerat. Ut non molestiae non. Ullam ut consequatur rerum.\n\nTempore maiores doloremque suscipit est qui autem possimus rerum. Et vel quos et quisquam. Vel cum deserunt eos eos alias pariatur veniam. Hic et quibusdam quam perspiciatis quos eveniet voluptas in. Eum voluptatem aut non porro vitae aut qui veniam. Dolorum sit dolor quaerat accusamus ea.\n\nRepellendus totam sequi exercitationem quia iure error sint eos iure. Excepturi dolores voluptatibus. Est ad sint ducimus sed rerum quos harum eum aspernatur.\n\nEst esse optio reiciendis provident dolor. Aut quo sapiente accusantium quia necessitatibus minima. Consequatur aut est sit provident quibusdam qui debitis quibusdam. Dolores odit velit dolore velit necessitatibus ea. In quaerat dignissimos voluptatem cum nam optio inventore et vel.",
                            Title = "Example Page 1 - Paragraph 2",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Quia soluta ut velit id qui non sint perspiciatis. Tenetur quia doloribus ipsam quibusdam aliquam. Eveniet temporibus quo tempora sit molestias occaecati quae. Placeat quo deserunt iusto repudiandae quaerat. Omnis error voluptates ad aut debitis sed. Sit ut aut natus occaecati odit.",
                            Title = "Example Page 1 - Paragraph 3",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "Maiores nihil eligendi soluta incidunt quia. Nisi ullam aut. Officia voluptate aut dicta adipisci hic voluptas repellendus iste unde. Ut velit ullam rerum est quam incidunt ex. Quod provident officiis quas nam velit explicabo aut.\n\nLibero ipsa inventore impedit illum modi id. Iste doloremque earum tempora. Et eum deleniti. Sint rerum eum et.\n\nDoloremque qui ullam repellat adipisci est distinctio vel quibusdam. Labore non laboriosam eos quidem dolore natus quia ab. Assumenda provident corrupti aut molestias quibusdam illo soluta ut provident. Odit occaecati dignissimos et ducimus occaecati.\n\nNam at sapiente voluptatibus rem totam necessitatibus sequi asperiores nulla. Culpa harum quasi nesciunt nobis dolor autem. Voluptas nisi quaerat.\n\nRatione et quaerat temporibus et non consequatur amet. Officia ut vel quaerat veritatis omnis neque sit. Deserunt qui sed ullam dolores velit officiis qui sed deleniti. Ratione omnis omnis delectus officiis autem labore consequatur mollitia temporibus. Quia rerum non corporis corporis laborum corrupti fugiat rerum ipsum.\n\nAdipisci quisquam pariatur porro et quam. Autem totam distinctio magnam accusamus deserunt itaque id natus. Excepturi adipisci ex consequatur et molestiae asperiores accusamus deserunt. Aut qui enim et autem quia eligendi nisi.\n\nIn odit cupiditate voluptatum non autem et et. Consequatur perspiciatis rerum aspernatur assumenda. Tempore illum a et non.",
                            Title = "Example Page 1 - Paragraph 4",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 5,
                            Content = "Enim voluptatibus sunt consequatur eos rerum. Amet mollitia omnis. Qui voluptatibus doloremque cupiditate doloribus.\n\nTenetur amet vitae delectus commodi totam aliquid quasi rerum est. Sint nihil dolore voluptatem assumenda consequatur. Officiis aut culpa eum sed aliquid commodi. Ipsum provident nobis aut debitis dolore. Impedit velit impedit consectetur doloremque in dolorem rerum illum. Dolorem porro placeat quia deserunt.\n\nA et et dolorem recusandae laboriosam. Vel omnis ipsum esse reiciendis. Voluptatem rerum quia nemo nihil sapiente. Ut ipsam eligendi. Vel repudiandae eveniet expedita occaecati.",
                            Title = "Example Page 1 - Paragraph 5",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 6,
                            Content = "Quo voluptas illo iusto quia provident ab necessitatibus. Unde dolorum aut rerum et ratione tempore molestiae unde. Doloremque saepe beatae aut velit accusantium laboriosam nemo nesciunt eos. Repellendus et dolorum eos quos fugit tempora quos. Quos possimus est incidunt ipsam. Quas optio natus autem eos est possimus quia architecto.\n\nEt quia dolorem qui ad et. Blanditiis et debitis placeat unde dolores harum. Voluptatem esse hic. Iste unde est optio aut facilis esse sint sunt.\n\nTotam ipsam similique nostrum iure. Alias provident quas at corrupti. Facilis consectetur dolor et nulla. Veritatis quisquam rem fugit et libero fuga quis. Veniam iste sequi dolor tenetur blanditiis.",
                            Title = "Example Page 1 - Paragraph 6",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 7,
                            Content = "Non voluptatum incidunt non quibusdam ipsum repellat iusto. Architecto doloremque animi illum sapiente vitae incidunt veniam iure iure. Porro voluptates ratione velit id esse unde qui debitis dolore. Minima similique et qui. Laborum ex hic tenetur adipisci. Odit facere voluptas voluptatem qui.\n\nDelectus expedita dicta eum nihil autem et praesentium. Mollitia consequatur mollitia dolorem qui aut totam repudiandae qui. Aperiam doloremque voluptas incidunt suscipit adipisci dicta. Et ipsa autem quisquam iusto hic. Eum sequi in.\n\nDolorem velit animi molestiae pariatur est molestiae animi labore et. Et fuga unde. Qui reiciendis fugit sed iure sapiente. Ipsum harum pariatur quos. Facere vel et esse modi velit autem consectetur ut.\n\nDignissimos enim quas eum est et dignissimos pariatur. Aliquam eos quae. Eos minus et accusantium quod occaecati. Aperiam necessitatibus aut dicta repellat reiciendis et quia rerum. Dolores qui velit et quidem delectus odio excepturi sit.",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 2",
                            Title = "Example Page 2 - Paragraph 1",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 8,
                            Content = "Aut illo magni et ea ea sapiente cupiditate id. Id dicta in minima iusto autem tempora. Quis laboriosam maxime tempore qui ipsum reiciendis. Est tempore quaerat officiis soluta quasi beatae. Ipsum et numquam consectetur.\n\nQuis minus error porro aut quas nobis necessitatibus. Sint quia architecto. Nam doloribus quae. Eos cupiditate cum dolores quia excepturi repellat dolorem. Quam voluptates quos dolore. Tempore ratione expedita unde quidem unde dolorem maiores eum.\n\nQuam ipsum officia sed omnis libero quidem omnis sed molestiae. Sit sed odit eos delectus. Autem corrupti ut quisquam eveniet et et deserunt numquam et. Et architecto culpa aliquam rerum expedita vero at.\n\nCorrupti qui incidunt praesentium dolor quam earum soluta. Excepturi eos voluptate modi et dolorem repellendus et. Aut et nihil nulla. Aliquid porro maxime.\n\nAut omnis et ut. Quas magni accusantium sint consectetur dolor quasi. Ipsa rerum et molestias voluptates dicta. Incidunt in eius omnis placeat ut sed.\n\nPerspiciatis et cumque omnis esse voluptatem dignissimos. Culpa officia cupiditate repellat assumenda. Reprehenderit debitis laborum corporis deserunt voluptas sunt minima similique eos. Deserunt dolorem et vel velit quia. Non placeat autem fugiat distinctio in nulla possimus aperiam.\n\nNam quas et expedita quae autem in nihil nihil. Praesentium sed quisquam. Ex et at temporibus ducimus dolore. Aut perspiciatis ipsum ut magni veniam eum. Voluptates consequatur impedit.\n\nVelit aut officia. Eum molestiae id est doloremque repellat autem vel rem. Cum quia unde sit quis voluptatum. Reiciendis eligendi et officia et et pariatur accusamus assumenda. Reprehenderit nemo ea in autem officiis aspernatur eius.\n\nQuia fugiat est aut. Saepe rerum ex ipsam vel ut. Porro laborum consequatur blanditiis et hic quaerat id. Architecto magnam voluptas fugit exercitationem vel voluptas.\n\nQui deleniti nulla dolorum aut est non ratione. Qui fugiat ratione consectetur explicabo ut eius omnis numquam quae. Iusto aut placeat dolores consectetur vel fugiat sed est.",
                            Title = "Example Page 2 - Paragraph 2",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 9,
                            Content = "Dolore quibusdam non nobis eius vitae cumque aut. Sed est delectus ut dolorum temporibus consequatur. Dolorum officia dignissimos sint omnis veniam est quis.\n\nRerum alias nobis iusto quae praesentium id magnam sint. Molestias blanditiis sit voluptatum rerum hic laborum amet ut reprehenderit. Hic corporis provident et accusantium cum.\n\nAsperiores voluptatem aut natus quibusdam. Quisquam accusantium odit quia porro veniam pariatur sint eius. Voluptas id quas voluptatem veniam cupiditate nihil quo vel voluptatem.",
                            Title = "Example Page 2 - Paragraph 3",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 10,
                            Content = "Animi rerum est aut perspiciatis ullam ipsam quibusdam facere. Placeat nesciunt impedit dolor odio voluptas ut. Ut illum quam fugiat quaerat laudantium sunt sed unde consectetur. Rerum quae nihil nisi veritatis aut.\n\nEst reprehenderit omnis vitae ut eligendi sit quis. Voluptates in rem id dolores eum qui porro occaecati. Sunt aliquid quis ducimus eius. Autem commodi iure odit sunt debitis et temporibus. Voluptatem sed officiis facilis id consequatur. Voluptas laudantium quos laborum architecto eaque saepe.\n\nTempora asperiores qui quasi dignissimos sed enim ipsa et. Quasi voluptatibus incidunt voluptate. Eos corrupti ad ipsum repellat. Quis eligendi pariatur facilis in.",
                            Title = "Example Page 2 - Paragraph 4",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 11,
                            Content = "Unde et fuga tenetur eum harum delectus labore eum. Porro voluptatem hic rem. Suscipit omnis voluptatibus est ut nihil. Et qui fugiat tempore iusto laboriosam nihil perspiciatis eius. Magnam ex quibusdam sint ratione ut qui.\n\nTempore at aliquid ducimus non. Eum nisi saepe. Dolore praesentium dignissimos animi qui at excepturi sint. Autem modi excepturi. Eos sunt omnis fugit temporibus numquam qui.\n\nQuia iusto non est esse modi. Distinctio velit hic unde maxime ut. Totam magni eos. Est ab asperiores ut sunt repellendus eum.\n\nQui nesciunt tenetur deserunt atque aut. Error pariatur quas vitae. Quas accusantium rerum architecto placeat. Molestiae commodi aut et. Possimus voluptatibus odio deleniti doloremque quaerat. Sit aut quibusdam.",
                            Title = "Example Page 2 - Paragraph 5",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 12,
                            Content = "Hic blanditiis dolores dolores. Autem iste facilis veniam qui inventore qui quis delectus. Voluptas in adipisci fuga ratione et enim unde tenetur sed.\n\nVoluptatem non doloribus rerum blanditiis placeat voluptas. Itaque est recusandae est qui eos. Et aut et sint voluptates libero eveniet necessitatibus. Ea labore blanditiis eos excepturi adipisci quo. At deleniti quidem et est omnis assumenda earum. Est neque doloribus tempora doloremque.\n\nAssumenda non dolores. Neque nemo pariatur fuga consectetur vel dolor atque. In praesentium provident totam inventore aperiam fugit commodi non adipisci. Tempora omnis itaque. Perferendis est tenetur ut.\n\nEst vel consequatur sed. Qui aspernatur optio. Voluptates qui error vero sunt.\n\nAut ipsa sit nesciunt perferendis in nihil quo qui nesciunt. Delectus est laboriosam consequatur quam enim facere. Optio asperiores et dolorum.\n\nEaque atque atque voluptatem aliquam quae. Alias aut fuga quo. Et repellendus distinctio accusamus. Quam ducimus molestiae inventore quia tenetur deleniti qui dicta. Dicta iste aspernatur eligendi ut molestias eos blanditiis.",
                            Title = "Example Page 2 - Paragraph 6",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 13,
                            Content = "User Submitted Content 1",
                            ParagraphImage = "https://i.kym-cdn.com/entries/icons/original/000/029/079/hellothere.jpg",
                            ParagraphImageText = "Hello there",
                            Title = "User Submitted Paragraph 1",
                            WikiPageId = 3
                        },
                        new
                        {
                            Id = 14,
                            Content = "User Submitted Content 2",
                            ParagraphImage = "https://i.ytimg.com/vi/jAB3mMdS0xE/maxresdefault.jpg",
                            ParagraphImageText = "General Kenobi",
                            Title = "User Submitted Paragraph 2",
                            WikiPageId = 3
                        },
                        new
                        {
                            Id = 15,
                            Content = "Helldivers never die!",
                            ParagraphImage = "https://i.ytimg.com/vi/nhhICroqfpU/hq720_live.jpg",
                            ParagraphImageText = "Helldivers never die!",
                            Title = "New Paragraph 1",
                            WikiPageId = 4
                        },
                        new
                        {
                            Id = 16,
                            Content = "Liber-Tea is a funny line haha",
                            ParagraphImage = "https://i.kym-cdn.com/photos/images/original/002/760/001/66d",
                            ParagraphImageText = "Time for a nice cup of Liber-Tea",
                            Title = "Liber-Tea",
                            WikiPageId = 4
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.StyleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightInnerColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListLinkTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WikiName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleColor = "#526cad",
                            ArticleRightColor = "#3c5fb8",
                            ArticleRightInnerColor = "#2b4ea6",
                            BodyColor = "#507ced",
                            FooterListLinkTextColor = "#1d305e",
                            FooterListTextColor = "#233a71",
                            Logo = "/img/logo.png",
                            WikiName = "Your Wiki"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReply")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReplyToCommentId")
                        .HasColumnType("int");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.Property<int>("WikiPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReplyToCommentId");

                    b.HasIndex("UserProfileId");

                    b.HasIndex("WikiPageId");

                    b.ToTable("UserComments");
                });

            modelBuilder.Entity("wiki_backend.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteSub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WikiPages");

                    b.HasDiscriminator<string>("Discriminator").HasValue("WikiPage");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleNote = "Example RoleNote 1",
                            SiteSub = "Example SiteSub 1",
                            Title = "Example Page 1"
                        },
                        new
                        {
                            Id = 2,
                            RoleNote = "Example RoleNote 2",
                            SiteSub = "Example SiteSub 2",
                            Title = "Example Page 2"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasBaseType("wiki_backend.Models.WikiPage");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNewPage")
                        .HasColumnType("bit");

                    b.Property<string>("SubmittedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WikiPageId")
                        .HasColumnType("int");

                    b.HasIndex("WikiPageId");

                    b.HasDiscriminator().HasValue("UserSubmittedWikiPage");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            RoleNote = "User Submitted RoleNote",
                            SiteSub = "User Submitted SiteSub",
                            Title = "User Submitted Page",
                            Approved = false,
                            IsNewPage = true,
                            SubmittedBy = "tester"
                        },
                        new
                        {
                            Id = 4,
                            RoleNote = "Example RoleNote 1 Update",
                            SiteSub = "Example SiteSub 1 Update",
                            Title = "Example Page 1",
                            Approved = false,
                            IsNewPage = false,
                            SubmittedBy = "tester",
                            WikiPageId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("wiki_backend.Models.ApplicationUser", b =>
                {
                    b.HasOne("wiki_backend.Models.UserProfile", "Profile")
                        .WithOne("User")
                        .HasForeignKey("wiki_backend.Models.ApplicationUser", "ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany("Paragraphs")
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserComment", b =>
                {
                    b.HasOne("wiki_backend.Models.UserComment", "ReplyToComment")
                        .WithMany()
                        .HasForeignKey("ReplyToCommentId");

                    b.HasOne("wiki_backend.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany("Comments")
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReplyToComment");

                    b.Navigation("UserProfile");

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany()
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserProfile", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Paragraphs");
                });
#pragma warning restore 612, 618
        }
    }
}
