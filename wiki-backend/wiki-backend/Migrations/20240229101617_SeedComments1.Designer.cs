// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wiki_backend.DatabaseServices;

#nullable disable

namespace wiki_backend.Migrations
{
    [DbContext(typeof(WikiDbContext))]
    [Migration("20240229101617_SeedComments1")]
    partial class SeedComments1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImageText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WikiPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WikiPageId");

                    b.ToTable("Paragraphs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Dolorum sint quia ullam aut vero eveniet. Et at veniam accusantium non. Ut fugiat illo. Et sed unde blanditiis et ullam ipsum accusamus. Consequatur in voluptatem porro quae quod maiores maiores magni. Sequi ut ducimus deleniti voluptas.\n\nSimilique minus veniam aliquid et illo voluptatem cum. Deleniti rerum ipsa molestias ea dolorem dolor consectetur. Molestiae quo officia et. Placeat sed in possimus quo consequatur accusantium saepe laborum. Blanditiis fugit quasi id quae et nemo est molestias. Mollitia est vero reiciendis autem.\n\nIncidunt maiores quis et dignissimos quos. Quasi alias quo ut odit. Inventore tenetur quaerat libero architecto nulla quia ut aliquam est. Alias rerum dignissimos aut beatae temporibus ipsa aspernatur quisquam.\n\nMolestiae voluptas id vero quaerat sint. Facere et quis. Consequuntur et ut qui.\n\nIn sed fugit voluptates dolor tenetur. Asperiores sapiente consequatur. Adipisci eos labore praesentium iure sed libero.\n\nSapiente neque voluptate temporibus enim deleniti maxime quia. Alias omnis sunt unde dolorum. Totam rem quia.\n\nDolor ad dolorum debitis. Natus atque voluptates ea earum asperiores earum. Excepturi consectetur qui dolores et aperiam repellendus est.",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 1",
                            Title = "Example Page 1 - Paragraph 1",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Asperiores incidunt voluptas. Fuga voluptatem cum cupiditate sit nisi cum perferendis ut. Asperiores molestiae enim cum occaecati omnis non. Deserunt facilis distinctio aut voluptas magnam soluta consequatur odio dicta.\n\nEt vel autem et. Dignissimos non ducimus officiis aspernatur beatae. Tempore aut iusto saepe et suscipit magni aut.\n\nQuaerat velit dolor non possimus. Sit nihil soluta quia. Perspiciatis nisi qui voluptatem atque voluptate voluptatibus pariatur sit quisquam. Culpa quia at vero corporis labore animi est maiores omnis. Corrupti veniam reiciendis accusamus et. Eius nobis praesentium quia est magnam est iste culpa qui.",
                            Title = "Example Page 1 - Paragraph 2",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Qui nam alias voluptate. Qui dolorem eligendi quam accusantium. Ut fuga sed sunt fugit.",
                            Title = "Example Page 1 - Paragraph 3",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "Ducimus placeat suscipit beatae cumque laudantium laudantium praesentium. Officiis aut non sit vel voluptas rerum et est. Quae cupiditate quo cupiditate non iste velit perspiciatis voluptas autem.\n\nDignissimos qui veritatis quis quis nulla quaerat totam. Voluptatum aut at consequatur deleniti amet qui explicabo fugiat sit. Architecto explicabo fuga dolores ut ut nobis. Quo tempore reiciendis voluptas voluptas omnis eveniet.",
                            Title = "Example Page 1 - Paragraph 4",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 5,
                            Content = "Nulla saepe rerum nulla occaecati dignissimos vel autem. Quis molestiae nam sit non sit ipsa non doloribus. Assumenda eum nisi aut in quas.\n\nBlanditiis rerum sunt fuga rerum tenetur ipsum ut. Cumque est quod qui quae. Eum tempora nemo quaerat itaque facilis non in accusantium reiciendis.\n\nAut quo facere eius accusamus eveniet aspernatur et dolores. Et molestias quis fuga nulla quo. Pariatur ipsam non molestias itaque id iusto quia nam ut. Tempora molestiae sed.\n\nIpsam explicabo sunt nihil. Explicabo dolorem qui enim nihil possimus sed quas. Necessitatibus voluptatum fugit qui nobis similique magni rem velit. Facere ipsa veritatis id est.\n\nAut adipisci ad labore neque qui autem sint asperiores. Quia nam nihil excepturi. Et quia quis perspiciatis voluptas non.\n\nQuas eaque nam reprehenderit ad adipisci. Harum expedita aut sint officiis ratione assumenda inventore quod. Quo eum reiciendis et libero nostrum. Dignissimos autem suscipit itaque error similique qui assumenda omnis. Nobis quaerat officiis sit ut.\n\nTenetur consequatur aspernatur ad impedit distinctio aut. Sit pariatur eligendi et eligendi quia similique magnam nulla. Fugiat omnis eos. Vel reprehenderit ad quaerat explicabo rerum atque voluptatem eum. Fugit accusantium deserunt quae molestiae labore aut ut molestiae nihil.",
                            Title = "Example Page 1 - Paragraph 5",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 6,
                            Content = "Et quae odio et quia inventore. Ea vitae et impedit. Repudiandae quae odio earum labore non eius quibusdam minus numquam.\n\nAccusantium et laborum delectus quis et sunt dolorum. Aut ab illo et. Nisi dolor et perferendis.\n\nAut fuga nesciunt earum debitis impedit autem. Est soluta nulla vitae rerum sunt. Ipsa aut et vel.\n\nBlanditiis sapiente ut deleniti. Non delectus aut omnis voluptatem non facilis enim itaque optio. Dolores impedit aut aperiam sequi facere praesentium. Molestiae nulla deserunt explicabo ipsam reprehenderit quo. Rerum voluptas voluptatem adipisci deserunt.\n\nEt qui sit deleniti quo ipsa dolor saepe eaque itaque. Quos et odit iste officiis sunt debitis aut expedita. Doloremque qui recusandae unde est.\n\nPerferendis iste neque id ex nihil aut nulla et. Veniam neque quas qui ut iure. Et ea inventore totam sapiente.\n\nVelit a pariatur. Accusamus voluptas ut. Dolorem non rerum est eaque illum aut perferendis quam. Facere animi libero eum qui id voluptas ut vel.\n\nFacere laborum dignissimos beatae. Dolorem ut consequatur aliquid repellendus. Exercitationem ea magnam quo molestiae aut debitis consequuntur odio. Blanditiis quidem maiores ipsam minus repellat beatae amet nostrum. Sunt suscipit vitae distinctio et doloribus voluptas occaecati. Veniam facere quia et reprehenderit magnam magni iusto.\n\nFuga odit fugit. Harum id adipisci illo est molestiae. Et nisi quo ut architecto quibusdam nam excepturi. Magni tenetur provident vel laudantium molestiae aut a asperiores.",
                            Title = "Example Page 1 - Paragraph 6",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 7,
                            Content = "Et repellendus tenetur voluptas omnis velit. Placeat earum ea. Ut consequatur accusantium.\n\nAspernatur et sed quia quas reiciendis laboriosam dolor saepe quis. Placeat sunt laborum non. Unde et architecto ad impedit numquam.\n\nNatus nihil eligendi vitae ratione. Aut nulla rerum quo ut explicabo ea iure adipisci. Non laudantium maxime recusandae animi tempore perferendis.\n\nOfficia distinctio sed dicta praesentium eveniet eveniet ipsa delectus. Nostrum quia voluptate assumenda dolore magnam maxime voluptatem sit. In totam et non unde.\n\nDolores nisi est atque voluptatum perferendis corporis nam. Natus id et numquam. Corrupti et ratione dolorum occaecati ut vitae. Iusto fugit quas. Eos corrupti perspiciatis velit quis id.\n\nSed nihil ratione maiores quod rem quos quis dolor. Ut quae quos est dolore illum non odit pariatur. Odio consequatur hic veniam. Quasi occaecati sunt sint sit dolores earum. Alias reprehenderit maxime dolor qui. Aut et dolore.\n\nVoluptas dolor molestias rerum accusantium aut libero vero odio excepturi. Reiciendis rerum delectus aut tenetur quae ut. Ratione excepturi doloremque amet esse.\n\nEa cumque itaque molestiae. Temporibus quia laudantium ut et totam omnis. Quod eius tenetur veniam quidem consequatur neque qui perferendis quod. Laborum consequatur quo qui recusandae enim.\n\nMolestiae ex non magnam. Aut dolorum sit suscipit sit nemo quisquam harum culpa corrupti. Dolorem officia aliquam velit aut quis et natus corporis magni. Similique est et quo neque deleniti eligendi consequuntur. Laborum ipsam dolorem eveniet nam distinctio et quas. Corporis expedita est sapiente minima voluptas fuga dolor sed aspernatur.",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 2",
                            Title = "Example Page 2 - Paragraph 1",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 8,
                            Content = "Voluptatum porro hic adipisci. Unde dignissimos laborum quam excepturi in velit aut ex. Odit et voluptatem reprehenderit et voluptates placeat eaque aut provident.\n\nQuo est recusandae repellendus dignissimos quis at esse minima. Harum doloremque distinctio consequatur tempora. Deserunt placeat accusamus ut. Sit fugit harum quia et. Error labore vel eligendi praesentium vero. Cum consequatur recusandae maiores perferendis voluptatem.\n\nDeserunt nihil voluptatum impedit ut aliquam quos qui. Voluptatibus nihil repellendus dolorum consequatur iusto. Odio consequatur nihil est ratione natus excepturi consequatur deserunt iusto. Adipisci quisquam natus. Ab at odit dignissimos asperiores. Qui ipsam sequi quis et id.\n\nMaxime tempore amet exercitationem qui sunt quia quisquam voluptas consequatur. Aut ut est mollitia ducimus. Minus perferendis quaerat quasi.\n\nMolestias quod veritatis sint. Repellat et in alias fugit facilis veritatis accusamus modi odio. Excepturi porro alias veritatis consequuntur voluptatibus molestiae praesentium ipsum. Doloremque quaerat eveniet qui non reiciendis velit.\n\nPerspiciatis maxime nesciunt assumenda sed a. Similique odit ut non velit enim quia dolor dignissimos voluptatem. Illo debitis aut quas et repellendus exercitationem consectetur pariatur sint. In laudantium rem pariatur quis tenetur. Architecto est harum.\n\nVoluptas nemo rerum et ducimus magni ut velit id. Ex adipisci et. Eos quo incidunt facere cum beatae odit tempore qui error. Aut voluptatum explicabo. Velit suscipit adipisci.\n\nSit ut praesentium unde similique sunt rem illum expedita. Saepe corrupti architecto similique modi et. Beatae nihil assumenda non doloribus dolorum omnis consequatur. Doloribus beatae sit ipsa molestiae vel. Alias ut autem adipisci.",
                            Title = "Example Page 2 - Paragraph 2",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 9,
                            Content = "Sed minus eius earum qui sed omnis. Eligendi et vel delectus dolor repellendus non qui. Hic velit aut nisi eaque consequatur repudiandae qui quas.\n\nModi maxime delectus quae veniam. Ipsa necessitatibus voluptatum non quas inventore et iste dolorem perferendis. Accusamus quia aspernatur sit aliquid voluptates non eum. Dolor nemo qui perferendis. Quia blanditiis consequuntur qui sed. Voluptatem rerum maiores vero doloribus odio et est deleniti.\n\nEius minus hic ad et. Veniam alias ut. Et corporis aut odit. Temporibus quidem ipsam tempora atque repellendus totam. Cupiditate iusto aut repellendus. Blanditiis quibusdam quia vel nam voluptatum ipsam.",
                            Title = "Example Page 2 - Paragraph 3",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 10,
                            Content = "Qui est nesciunt qui quo animi tempora. Nemo asperiores molestias nobis non qui repellendus vel debitis. Fuga ullam doloribus sed vel.",
                            Title = "Example Page 2 - Paragraph 4",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 11,
                            Content = "Modi et iusto et rem rerum et voluptatem. Totam vel reiciendis quaerat ut quas. Consectetur eius dignissimos natus voluptatem quia sit. Rerum magni sed tenetur voluptas recusandae nihil occaecati et.\n\nQui dolor quam enim. Dolor perferendis in a modi velit quia. Cumque est recusandae dolores saepe officia sequi.\n\nEa voluptates molestiae consequuntur consequuntur ipsum earum ipsa numquam corporis. Sed nisi aut nihil. Repellendus quod distinctio rem aperiam similique.\n\nQuo animi minima. Quaerat excepturi omnis adipisci qui dolor dolor repellendus. Quo et adipisci doloribus excepturi aut. Ullam nulla adipisci assumenda et maiores. Veritatis esse fugit non possimus pariatur.\n\nEius et reprehenderit deleniti fuga eos illum rerum sed omnis. Hic est nisi amet autem. Et omnis quo. Est nihil aliquid non et et.\n\nSoluta unde repellendus laboriosam perferendis et. Laborum animi ipsa id fugiat quidem animi aut rerum. Et dolores placeat repellat qui dolorum.\n\nId consequatur explicabo ipsa quis. Quo maxime ipsum pariatur et qui. Et odit sed est voluptas velit et aut ut inventore.\n\nUt nihil rem. Incidunt aut quo ipsam sunt omnis qui occaecati beatae. Placeat et repudiandae blanditiis. Sunt labore laborum aspernatur.\n\nDeleniti animi consequatur eos expedita. Reprehenderit aliquid voluptates labore exercitationem accusamus aut sed rem facilis. Nostrum optio omnis omnis assumenda. Unde officiis nobis odit corporis molestiae dolor ut a quidem.",
                            Title = "Example Page 2 - Paragraph 5",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 12,
                            Content = "Quod ab nesciunt ipsum enim nisi placeat debitis voluptate magnam. Accusamus ut veniam repellat voluptas rerum et corrupti voluptatem eos. Omnis et rem.\n\nQuas dolore neque distinctio deserunt. Doloremque recusandae debitis et. Est vel incidunt. Rem et est nam minus. Maxime natus id sapiente architecto et nihil nesciunt.\n\nDolore voluptas sunt. Quod omnis libero est itaque excepturi est enim. Alias fuga accusamus cumque culpa.\n\nNam aut rerum corrupti. Enim officiis excepturi accusantium voluptates sed. Inventore maxime sed autem cum et omnis rerum autem. Labore vitae fuga cum.\n\nReprehenderit numquam aliquid nesciunt aut. Nulla sit dicta illum atque rem at. Et assumenda praesentium nihil quo voluptatem nulla sed eveniet sed. Et et qui qui fugit animi.\n\nQuia id molestiae et eos a officia. Omnis et temporibus et. Quos vero blanditiis incidunt iusto officiis quis perspiciatis. Quasi assumenda pariatur nostrum aperiam. Doloremque ratione nihil dolore molestiae sequi aut sed tempore voluptatum. Veritatis ipsam aut rerum expedita.\n\nIpsa ut minima ut magnam laborum occaecati qui omnis. Et harum rerum alias et ut. Laboriosam et corporis fugiat laudantium neque accusamus tempora ut. Qui molestias dignissimos beatae. Exercitationem et ex laborum eveniet eligendi.\n\nDolorem rem dolores qui. Rerum eos reprehenderit quod. Odio accusantium autem. Ex consectetur cupiditate voluptatum non placeat sequi fugiat deserunt.\n\nBeatae dolores corrupti tempore quo qui. Id adipisci accusamus quis quibusdam esse nihil nemo et. Dolorem facere fugit exercitationem et necessitatibus sit esse provident. Repellendus quo dolor dolorem velit pariatur id adipisci et. Labore minus enim recusandae maiores sequi.",
                            Title = "Example Page 2 - Paragraph 6",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 13,
                            Content = "User Submitted Content 1",
                            ParagraphImage = "https://i.kym-cdn.com/entries/icons/original/000/029/079/hellothere.jpg",
                            ParagraphImageText = "Hello there",
                            Title = "User Submitted Paragraph 1",
                            WikiPageId = 3
                        },
                        new
                        {
                            Id = 14,
                            Content = "User Submitted Content 2",
                            ParagraphImage = "https://i.ytimg.com/vi/jAB3mMdS0xE/maxresdefault.jpg",
                            ParagraphImageText = "General Kenobi",
                            Title = "User Submitted Paragraph 2",
                            WikiPageId = 3
                        },
                        new
                        {
                            Id = 15,
                            Content = "Helldivers never die!",
                            ParagraphImage = "https://i.ytimg.com/vi/nhhICroqfpU/hq720_live.jpg",
                            ParagraphImageText = "Helldivers never die!",
                            Title = "New Paragraph 1",
                            WikiPageId = 4
                        },
                        new
                        {
                            Id = 16,
                            Content = "Liber-Tea is a funny line haha",
                            ParagraphImage = "https://i.kym-cdn.com/photos/images/original/002/760/001/66d",
                            ParagraphImageText = "Time for a nice cup of Liber-Tea",
                            Title = "Liber-Tea",
                            WikiPageId = 4
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.StyleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightInnerColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListLinkTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WikiName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleColor = "#526cad",
                            ArticleRightColor = "#3c5fb8",
                            ArticleRightInnerColor = "#2b4ea6",
                            BodyColor = "#507ced",
                            FooterListLinkTextColor = "#1d305e",
                            FooterListTextColor = "#233a71",
                            Logo = "/img/logo.png",
                            WikiName = "Your Wiki"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReply")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReplyToCommentId")
                        .HasColumnType("int");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.Property<int>("WikiPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReplyToCommentId");

                    b.HasIndex("UserProfileId");

                    b.HasIndex("WikiPageId");

                    b.ToTable("UserComments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Test comment from Admin",
                            IsEdited = false,
                            IsReply = false,
                            PostDate = new DateTime(2024, 2, 29, 11, 16, 16, 955, DateTimeKind.Local).AddTicks(6977),
                            UserProfileId = 1,
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Test comment from Tester",
                            IsEdited = false,
                            IsReply = false,
                            PostDate = new DateTime(2024, 2, 29, 11, 16, 16, 955, DateTimeKind.Local).AddTicks(7015),
                            UserProfileId = 2,
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Test comment 2 from Tester",
                            IsEdited = true,
                            IsReply = false,
                            PostDate = new DateTime(2024, 2, 29, 11, 16, 16, 955, DateTimeKind.Local).AddTicks(7018),
                            UserProfileId = 2,
                            WikiPageId = 1
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteSub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WikiPages");

                    b.HasDiscriminator<string>("Discriminator").HasValue("WikiPage");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleNote = "Example RoleNote 1",
                            SiteSub = "Example SiteSub 1",
                            Title = "Example Page 1"
                        },
                        new
                        {
                            Id = 2,
                            RoleNote = "Example RoleNote 2",
                            SiteSub = "Example SiteSub 2",
                            Title = "Example Page 2"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasBaseType("wiki_backend.Models.WikiPage");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNewPage")
                        .HasColumnType("bit");

                    b.Property<string>("SubmittedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WikiPageId")
                        .HasColumnType("int");

                    b.HasIndex("WikiPageId");

                    b.HasDiscriminator().HasValue("UserSubmittedWikiPage");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            RoleNote = "User Submitted RoleNote",
                            SiteSub = "User Submitted SiteSub",
                            Title = "User Submitted Page",
                            Approved = false,
                            IsNewPage = true,
                            SubmittedBy = "tester"
                        },
                        new
                        {
                            Id = 4,
                            RoleNote = "Example RoleNote 1 Update",
                            SiteSub = "Example SiteSub 1 Update",
                            Title = "Example Page 1",
                            Approved = false,
                            IsNewPage = false,
                            SubmittedBy = "tester",
                            WikiPageId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("wiki_backend.Models.ApplicationUser", b =>
                {
                    b.HasOne("wiki_backend.Models.UserProfile", "Profile")
                        .WithOne("User")
                        .HasForeignKey("wiki_backend.Models.ApplicationUser", "ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany("Paragraphs")
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserComment", b =>
                {
                    b.HasOne("wiki_backend.Models.UserComment", "ReplyToComment")
                        .WithMany()
                        .HasForeignKey("ReplyToCommentId");

                    b.HasOne("wiki_backend.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany("Comments")
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReplyToComment");

                    b.Navigation("UserProfile");

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany()
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserProfile", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Paragraphs");
                });
#pragma warning restore 612, 618
        }
    }
}
