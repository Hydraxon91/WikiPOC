// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wiki_backend.DatabaseServices;

#nullable disable

namespace wiki_backend.Migrations
{
    [DbContext(typeof(WikiDbContext))]
    [Migration("20240229112316_InitialMigration3")]
    partial class InitialMigration3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImageText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WikiPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WikiPageId");

                    b.ToTable("Paragraphs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Libero temporibus dicta. Nemo architecto in consequatur minima corporis hic eum officia rerum. Et quis dolor sapiente quos. Et ipsum qui placeat eius maiores repellendus. Pariatur occaecati unde iste beatae distinctio nisi recusandae natus.\n\nOmnis sed accusamus natus. Non ullam est magni culpa pariatur et aut. Eveniet dolore accusantium et. Aut inventore tempore mollitia architecto. Quia qui sit sint numquam. Ea nemo non.",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 1",
                            Title = "Example Page 1 - Paragraph 1",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Et corporis dolorem sint. Eveniet vel officia tempora aut odit. Esse ut quaerat beatae molestiae voluptatem quo dolorem minima. Vitae sed impedit doloremque accusamus qui ex explicabo excepturi. Consequatur praesentium delectus ut accusamus.\n\nDeleniti magnam commodi ut eius sit ut. Dolore assumenda voluptas quae modi excepturi. Officiis et nobis quibusdam quas accusamus voluptatem quaerat accusamus.\n\nVoluptas enim enim quia necessitatibus sunt. Aperiam explicabo ut ullam beatae consequatur autem fugit. Magni iste aut debitis. Voluptatem impedit a vel a eaque impedit eos voluptatum.\n\nVel autem non. Dignissimos illo explicabo magnam et et fugiat amet. Veritatis voluptate voluptatibus consequatur. Reprehenderit minima iure. Voluptas dolores nulla voluptate perferendis quia. Facere consequatur mollitia eum.\n\nId autem architecto aperiam ut atque neque. Quia natus aut quia doloribus cum. Voluptas sequi omnis odio aut qui et molestiae dicta.\n\nOptio officiis quia aut molestiae. Quam ut repellendus dignissimos neque nulla aspernatur molestiae. Laudantium vel ad in. Excepturi quis quae magni vero culpa impedit.\n\nQuos quisquam quis praesentium dolores ut. Enim voluptates magni. Eos porro distinctio rerum quaerat.\n\nQuas voluptatem doloribus totam consequatur laborum. Et est commodi ratione. Deleniti dolorum ut ullam dolores voluptas aspernatur ex voluptatem.\n\nDolore non iusto error veniam consequatur deserunt harum. Culpa quidem quo minus corporis reprehenderit dolorem sed. Beatae quaerat ea voluptas ipsum repellat. Voluptatum eos inventore et aliquam. Ducimus fugiat in et et repellendus vel labore nobis.",
                            Title = "Example Page 1 - Paragraph 2",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Eius aut explicabo est aut et aliquid ipsa quis. Aut maxime voluptatem fugiat est voluptatem nesciunt quia. Iste vitae reprehenderit doloribus sed consequatur totam. Ut aut sit non fuga laboriosam ullam eos nulla. Laudantium omnis fugit sed facilis praesentium ut veniam. Omnis doloribus nobis corporis quos voluptate ex omnis sed.",
                            Title = "Example Page 1 - Paragraph 3",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "Omnis est quos architecto maiores in sunt accusamus. Blanditiis consequuntur ut beatae aut est fugiat odit et maxime. Iste doloribus iure possimus illo et dolores repellendus. Ut quia aperiam vel magnam aliquam beatae perspiciatis possimus cumque. Consequuntur omnis assumenda et et qui perspiciatis sed. Minima unde harum consequatur facere nostrum.\n\nSed consequatur ut impedit accusamus quia id at nesciunt velit. Vitae sed eligendi pariatur quidem esse molestiae. Ipsam dolores molestias quae quia mollitia voluptatem iste optio iusto. Eius quibusdam ut dicta qui cum tempora. Veritatis rem necessitatibus dolores quas sit. Enim molestiae nihil quisquam dolores est.\n\nUt voluptatum consequuntur. Reiciendis necessitatibus ut laborum harum modi quia dignissimos. Numquam veritatis autem eum soluta odio accusamus natus suscipit. Modi ratione velit dicta.",
                            Title = "Example Page 1 - Paragraph 4",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 5,
                            Content = "Et eum ut error ea facere ea. At unde possimus praesentium dolore. Ex vero rerum doloribus ratione aut et debitis. Totam reprehenderit velit voluptatem qui repellat voluptates enim vero dolore.\n\nEnim iste vel earum tenetur dolorem qui laudantium. Maiores natus dolorum omnis sint numquam voluptatibus. Qui at sed.\n\nModi libero ad quos ipsam ducimus ut placeat iste quas. Et nam accusamus ducimus ut tenetur saepe perferendis. Eum ut iste omnis est consequatur. Aliquid et modi dolor. Qui animi minima occaecati nihil deleniti quo.",
                            Title = "Example Page 1 - Paragraph 5",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 6,
                            Content = "Dolores sit illum natus aut ut aut fuga temporibus quos. Ipsum qui esse est nulla aut voluptates cumque. Dolore ut cum. Et nihil temporibus mollitia quaerat modi voluptatum amet totam. Quia deserunt ex harum suscipit. Ut occaecati in esse vitae similique hic consequatur.\n\nQuia vel atque est aut odio dolores esse praesentium aut. Temporibus eos eum ea cumque autem. Eum hic est possimus ipsum debitis facilis fugiat.\n\nNihil placeat numquam enim quia iusto ipsa. Consequatur veritatis corporis. Rem voluptatem ducimus nostrum quae. Odit ipsa eos. Deserunt tempora vitae.\n\nMinus saepe beatae dignissimos. Esse in et quia quis omnis. Omnis dicta distinctio est omnis beatae qui sit. Pariatur voluptas temporibus commodi.\n\nQui provident quidem error aut consequatur quidem temporibus. Ut ullam consequatur enim nisi et quasi. Officia ea perferendis quod vero magni quis ad. Est in ut quia est voluptas beatae ipsam reiciendis.\n\nLaboriosam cupiditate suscipit voluptas hic et blanditiis. Quia consequatur aut dolorum. Facere labore ad id est ut porro perspiciatis occaecati. Rerum fugit recusandae occaecati deleniti explicabo consequatur mollitia repellendus. Ipsum hic minus. Voluptatem corrupti id dolorem.\n\nIpsam et similique omnis dolor nobis quibusdam. Cumque et ea deleniti vitae dolorum et. Ipsum quod cum itaque et. Necessitatibus sint accusantium debitis beatae voluptates occaecati voluptas ut. Voluptates hic sunt consequatur quis optio delectus quae. Quod et laboriosam qui fugit iusto molestiae.\n\nVoluptates eius vel. Delectus exercitationem deserunt aliquam veniam corporis quo itaque aut doloribus. Tenetur dolore et quia dolore quia aspernatur. Voluptate minus quis deserunt inventore modi aperiam voluptatum. Maiores molestiae et nemo enim ratione consectetur odio id. Aspernatur quia mollitia fugit ut incidunt et.\n\nEst voluptate cum. Voluptatem omnis laboriosam laboriosam aut ad est. Ipsa est repudiandae delectus quia. Vero praesentium officia. Sit quo aut excepturi neque quia sint veritatis pariatur cum.",
                            Title = "Example Page 1 - Paragraph 6",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 7,
                            Content = "Quia voluptas aut. Aut in quam ab. Nihil omnis reiciendis quasi facere sunt repudiandae. Dolores laudantium dolorem molestias et ad officia eos alias. Ad natus laboriosam earum. Aut modi quia voluptatem eaque et.\n\nEt dolore commodi. Aut quo doloremque itaque. Deserunt culpa qui sed ex dolorem. Vitae est consequatur molestiae est est. Voluptatibus aut dicta expedita voluptatem ut.\n\nAut cumque officiis labore. Eos et id rerum repellendus alias suscipit ut. Molestiae libero qui consequatur modi voluptate voluptates porro. Alias incidunt a magnam mollitia quia quas cumque doloremque eius. Iusto occaecati doloremque. Corrupti quia ex ducimus iste.\n\nQuia ut iusto quaerat quidem aspernatur ex necessitatibus occaecati. Et repellendus maiores facilis ut tempora quidem fugit perferendis. Delectus quos dignissimos quo earum repudiandae recusandae qui nulla. Velit quia atque autem quis quod qui et. Id est quaerat. Repellat sed accusamus id.\n\nDolores eligendi cum. Hic quis voluptatibus fugiat totam corporis. Quidem aut ratione delectus accusantium consectetur deleniti qui. Voluptas architecto fuga quas tempore pariatur omnis deserunt blanditiis. Corporis qui debitis et sint quia fugiat officia maiores voluptatibus.\n\nRatione modi in. Velit dolorum cupiditate enim possimus et eos rerum aliquid consequuntur. Sint quia sit sunt voluptatem fugiat delectus.\n\nEt accusantium quia vel eos sed sed rerum. Cumque ad est. Eius animi possimus molestiae quos illo nihil expedita. Sunt in hic amet dignissimos vero facilis similique.\n\nAtque neque et ducimus voluptate dolorem voluptas. Est consequatur ipsa incidunt autem rem nam esse architecto sunt. Est animi dolore ut. Quas distinctio labore minus suscipit praesentium enim illo. Ut assumenda cum.",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 2",
                            Title = "Example Page 2 - Paragraph 1",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 8,
                            Content = "Optio sed quia nisi qui aspernatur consequatur at voluptates vel. Tenetur qui itaque. Qui sed quo laborum et. Temporibus non dignissimos excepturi nostrum earum. Reprehenderit sint et error laborum rerum minus odio minima quo.\n\nEum et magnam. Et quo repudiandae excepturi vel architecto non id. Minima delectus consequatur voluptate ut aperiam. Deleniti ullam quidem voluptatum distinctio non ratione nihil.\n\nSapiente ut tenetur. Culpa sequi adipisci nostrum in corporis consequatur quia laboriosam repellat. Quos sapiente quasi dolore aut.\n\nUt perferendis error architecto nesciunt qui laborum deserunt sint. Dolores fuga ut quasi. Nihil accusantium quidem quod in ut deserunt aspernatur laboriosam earum. Provident sunt ratione sed laboriosam.\n\nAut perferendis facilis. Aut temporibus ex est. Dignissimos dolorum sint alias sed beatae et perferendis. Natus occaecati modi sint natus molestiae et est consectetur. Est quae impedit accusantium.",
                            Title = "Example Page 2 - Paragraph 2",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 9,
                            Content = "Ipsa ex dolores. Aperiam delectus cum. Veniam deleniti minus. Deserunt et consectetur. Voluptatem nesciunt quibusdam debitis ab error sequi sequi et. Quae pariatur aut praesentium officiis.\n\nAccusantium id magni. Unde sunt veniam itaque temporibus molestiae omnis mollitia voluptas consequatur. Dolorem voluptatem eius itaque. Fugiat porro ab quae minima et pariatur reprehenderit aut.",
                            Title = "Example Page 2 - Paragraph 3",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 10,
                            Content = "Temporibus commodi tempore maxime aspernatur labore sed vel. Sit quia voluptas et asperiores quod ex suscipit sunt. Ad iure quis.\n\nUt rerum aut. Consequatur dolorem vel ut magnam consequatur ducimus. Qui dolore officiis ut odio. Sapiente distinctio quo soluta consequatur. Mollitia et eveniet repudiandae corporis. Qui eius recusandae.\n\nNon nostrum alias eos. Vero aut modi dignissimos ex id iste neque. Quod omnis numquam dolor rerum minus natus sed esse perspiciatis.\n\nOfficiis assumenda officiis. Perferendis quos provident quibusdam quos voluptatem eum eum. Aperiam molestiae culpa.\n\nAlias non modi quia quo voluptatem architecto consectetur repudiandae. Ipsum non qui aut qui dicta tempora sequi. Accusamus ab consequatur beatae.\n\nNon est voluptatem. Quia magnam distinctio provident. Sit iusto doloremque ipsam quia nulla corporis autem rerum.\n\nQuibusdam molestiae blanditiis debitis debitis impedit quibusdam voluptas. Libero ut delectus deleniti pariatur. Aspernatur nulla sequi voluptas omnis illo qui nihil architecto saepe. Consequatur consequatur est et occaecati itaque aut eligendi eligendi sunt. Officiis voluptas omnis.",
                            Title = "Example Page 2 - Paragraph 4",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 11,
                            Content = "Alias voluptas nam corporis id dolor quam nemo maiores a. Dolore consequuntur amet aperiam ullam laboriosam velit voluptas. Ratione modi consequatur minus iste cupiditate totam. Sit incidunt quos autem dolor deserunt deserunt. Commodi natus est labore minima maiores. Nihil qui consequatur fuga praesentium et eius laboriosam.\n\nSuscipit numquam qui natus quam ea. Fugiat sapiente ipsa suscipit temporibus blanditiis culpa nesciunt deserunt. Dolor enim ad cumque. Nostrum dolor nam rerum.\n\nConsequatur fuga velit aut unde enim eaque consectetur. Quaerat reprehenderit architecto dicta ratione ipsa ut laboriosam harum. Et officia sit ipsum officiis ratione nobis tempora optio. Provident iste consequatur aut hic qui quo similique. Et iste aspernatur ad tempora a.\n\nVoluptas impedit quasi unde maiores. Ut sit quibusdam debitis consequatur est consequatur. Enim voluptatum quod dicta quia et quis.\n\nUt quisquam consequatur ea. Repudiandae harum culpa voluptas qui numquam enim dolores. Repellat mollitia eos expedita est modi repellat. Commodi fuga nihil ea. Voluptatibus suscipit qui ut et totam quidem tempora. Voluptas fugit ullam.\n\nVel eum voluptas impedit quia quod modi ea sint. Quam totam est. Sed eaque qui assumenda suscipit quo cum odio sint. Quis dolore ipsum. Quis explicabo qui eos saepe quae corporis enim. Ducimus delectus molestiae consequatur consectetur quidem.\n\nEt quod soluta voluptas ullam beatae. Autem dolore et et provident. Voluptatum eaque veritatis.",
                            Title = "Example Page 2 - Paragraph 5",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 12,
                            Content = "Accusantium ea libero debitis adipisci ea consequatur. Fugiat et modi et dolores. Aut quas laboriosam vero neque voluptatem. Error sit repudiandae molestias sunt. Repellendus officia et sunt et et. Eum iusto nulla neque non dolorem dolor ipsum praesentium soluta.\n\nSunt debitis eos perspiciatis est ex corrupti quae magni. Quis est accusantium. Enim repudiandae eos adipisci voluptas et cupiditate. Est consectetur dignissimos ut odit ut atque. Error aut maiores ipsum deleniti impedit quia fugiat amet.\n\nUt dolores ipsam tempore eos sed. Eos aut totam odit voluptatibus maxime voluptas at ut. Esse eveniet delectus commodi eveniet totam dolore magni magnam molestiae.\n\nCommodi quod inventore commodi vitae dolorem. In doloremque illum ut sunt et expedita. Et dolorem dignissimos qui id non aperiam temporibus natus rerum. Aut hic in consequatur reprehenderit voluptatem amet eaque odio. Nulla perspiciatis natus vero mollitia ut quae quia. Id porro quod ex aut illo doloremque incidunt enim autem.\n\nQui aut et impedit repellendus nobis distinctio est iste. Eos modi omnis facere sit. Eum suscipit aut expedita sed sed.\n\nPossimus provident eaque. Ratione ipsa ut et repudiandae ut earum consectetur quae. Deleniti similique ea saepe dolorem esse reiciendis numquam omnis. Quia ab animi repudiandae qui et dolore qui nostrum aut. Soluta sapiente dolorem pariatur et. At nihil veniam.\n\nQui sed nesciunt saepe. Quos itaque asperiores rerum dolorum ab. Modi illum quis distinctio architecto nihil rerum. Sit veritatis repudiandae tenetur esse tempora.\n\nAccusamus architecto quos voluptas voluptates voluptatem quas quod. Sapiente error veritatis. A esse enim nesciunt sint repudiandae quam. Beatae voluptatibus itaque minus voluptatem. Iusto quo sed et aut dolorem ut. Cupiditate rerum sequi qui repellendus.\n\nEt magnam nesciunt perferendis in itaque animi rerum. Iure ipsam quaerat totam dolor magnam. Ut ea inventore fugiat minus optio sunt. Dolores illo aperiam a. Minima consectetur eos vel dignissimos.",
                            Title = "Example Page 2 - Paragraph 6",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 13,
                            Content = "User Submitted Content 1",
                            ParagraphImage = "https://i.kym-cdn.com/entries/icons/original/000/029/079/hellothere.jpg",
                            ParagraphImageText = "Hello there",
                            Title = "User Submitted Paragraph 1",
                            WikiPageId = 3
                        },
                        new
                        {
                            Id = 14,
                            Content = "User Submitted Content 2",
                            ParagraphImage = "https://i.ytimg.com/vi/jAB3mMdS0xE/maxresdefault.jpg",
                            ParagraphImageText = "General Kenobi",
                            Title = "User Submitted Paragraph 2",
                            WikiPageId = 3
                        },
                        new
                        {
                            Id = 15,
                            Content = "Helldivers never die!",
                            ParagraphImage = "https://i.ytimg.com/vi/nhhICroqfpU/hq720_live.jpg",
                            ParagraphImageText = "Helldivers never die!",
                            Title = "New Paragraph 1",
                            WikiPageId = 4
                        },
                        new
                        {
                            Id = 16,
                            Content = "Liber-Tea is a funny line haha",
                            ParagraphImage = "https://i.kym-cdn.com/photos/images/original/002/760/001/66d",
                            ParagraphImageText = "Time for a nice cup of Liber-Tea",
                            Title = "Liber-Tea",
                            WikiPageId = 4
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.StyleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightInnerColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListLinkTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WikiName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleColor = "#526cad",
                            ArticleRightColor = "#3c5fb8",
                            ArticleRightInnerColor = "#2b4ea6",
                            BodyColor = "#507ced",
                            FooterListLinkTextColor = "#1d305e",
                            FooterListTextColor = "#233a71",
                            Logo = "/img/logo.png",
                            WikiName = "Your Wiki"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReply")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReplyToCommentId")
                        .HasColumnType("int");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.Property<int>("WikiPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.HasIndex("WikiPageId");

                    b.ToTable("UserComments");
                });

            modelBuilder.Entity("wiki_backend.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteSub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WikiPages");

                    b.HasDiscriminator<string>("Discriminator").HasValue("WikiPage");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleNote = "Example RoleNote 1",
                            SiteSub = "Example SiteSub 1",
                            Title = "Example Page 1"
                        },
                        new
                        {
                            Id = 2,
                            RoleNote = "Example RoleNote 2",
                            SiteSub = "Example SiteSub 2",
                            Title = "Example Page 2"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasBaseType("wiki_backend.Models.WikiPage");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNewPage")
                        .HasColumnType("bit");

                    b.Property<string>("SubmittedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WikiPageId")
                        .HasColumnType("int");

                    b.HasIndex("WikiPageId");

                    b.HasDiscriminator().HasValue("UserSubmittedWikiPage");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            RoleNote = "User Submitted RoleNote",
                            SiteSub = "User Submitted SiteSub",
                            Title = "User Submitted Page",
                            Approved = false,
                            IsNewPage = true,
                            SubmittedBy = "tester"
                        },
                        new
                        {
                            Id = 4,
                            RoleNote = "Example RoleNote 1 Update",
                            SiteSub = "Example SiteSub 1 Update",
                            Title = "Example Page 1",
                            Approved = false,
                            IsNewPage = false,
                            SubmittedBy = "tester",
                            WikiPageId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("wiki_backend.Models.ApplicationUser", b =>
                {
                    b.HasOne("wiki_backend.Models.UserProfile", "Profile")
                        .WithOne("User")
                        .HasForeignKey("wiki_backend.Models.ApplicationUser", "ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany("Paragraphs")
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserComment", b =>
                {
                    b.HasOne("wiki_backend.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany("Comments")
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany()
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserProfile", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Paragraphs");
                });
#pragma warning restore 612, 618
        }
    }
}
