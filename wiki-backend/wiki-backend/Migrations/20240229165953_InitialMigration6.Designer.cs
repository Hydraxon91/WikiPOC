// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wiki_backend.DatabaseServices;

#nullable disable

namespace wiki_backend.Migrations
{
    [DbContext(typeof(WikiDbContext))]
    [Migration("20240229165953_InitialMigration6")]
    partial class InitialMigration6
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImageText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WikiPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WikiPageId");

                    b.ToTable("Paragraphs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Atque quibusdam repellat perspiciatis aut natus dolor consequatur fugit corrupti. In eum ipsam natus laudantium. Quidem qui quia quidem nostrum delectus nostrum repellat suscipit porro. Animi et harum tempora non ut aut. Rem nisi sed est quia. Explicabo ut qui illo.\n\nAutem sunt a reiciendis saepe impedit est. Voluptatibus veniam qui facere nobis voluptas voluptatem animi nobis enim. Quia voluptatem et sunt magnam aspernatur dolore. Laborum sit voluptas laborum. Rerum nulla alias officiis facere modi aut quo eos.\n\nEius beatae ratione et optio sint. Fugiat et deserunt placeat repudiandae modi dignissimos. Enim nesciunt facere labore voluptates. Magni laboriosam eum. Pariatur hic reiciendis dolor voluptatem sunt et.",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 1",
                            Title = "Example Page 1 - Paragraph 1",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Sed ut dignissimos possimus odit tempore molestiae deleniti. Dolor repudiandae iusto ea neque. Vitae eum esse cum ratione atque atque. Quis voluptatem ex enim et est at modi quia ad.\n\nVelit qui aut facere officiis eligendi. Et a quos modi placeat eaque animi. Enim dolore iste voluptas. Quia quasi omnis rem ut odit quaerat. Nam placeat minima quia pariatur natus. Quod numquam ad libero sed vero accusantium quas.\n\nDolorem architecto eaque. Mollitia dolores eius. Culpa saepe numquam asperiores dolorum aut ea. Quia totam aspernatur. Harum iste consequatur doloremque numquam voluptatem provident non quo. Repellendus eum veniam.\n\nPariatur qui quibusdam cum explicabo maiores. Vel ipsa ad sunt. Et ut eum eius recusandae sed. Necessitatibus expedita repellat quibusdam non non ducimus id et excepturi. Molestias error maiores porro.\n\nQuia veritatis consequatur earum nesciunt hic ullam et voluptates. Velit ipsa esse minus sed. Nam omnis eaque inventore possimus numquam est ducimus nemo. Accusamus repellat aut.\n\nOdio rem et. Et excepturi rerum maiores sunt nemo consectetur praesentium enim nesciunt. Aut qui quia harum laboriosam nobis facere libero occaecati. Minus et ipsum incidunt.\n\nNisi aut quis vel voluptate sit. Ipsa quae quo ipsam. Eos nihil natus voluptatem. Temporibus et quisquam quas dolorem et nihil repellendus inventore dignissimos. Repellat laboriosam commodi et accusantium aliquid rerum ab dignissimos. Dolore sunt mollitia.\n\nDolores autem voluptatem officia et qui. Omnis architecto quod corporis et omnis voluptas. Voluptatem ipsum ab molestiae saepe.",
                            Title = "Example Page 1 - Paragraph 2",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Id sunt repudiandae sit. Sunt recusandae dolores a ut modi. Dolor debitis ut odio magnam consectetur et. Velit sunt natus ducimus. Quibusdam in nobis recusandae. Earum ipsam et dolorem asperiores atque.\n\nExplicabo iure et. Nisi perferendis molestiae est qui. Consequatur alias assumenda et qui. Nostrum minima perspiciatis impedit aut repudiandae ut fugit ex. Rerum ullam ut.",
                            Title = "Example Page 1 - Paragraph 3",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "Fugiat sit excepturi minima alias. A corrupti libero. Veritatis molestiae consequuntur et. Vel ut eaque. Eveniet quidem voluptatem quidem optio et qui quo omnis. Alias velit temporibus.\n\nIn magnam omnis. Animi necessitatibus possimus tenetur deleniti hic laudantium ratione quos. Qui est amet voluptates voluptates repudiandae. Occaecati molestiae explicabo reiciendis eum molestias velit voluptas. Consequatur delectus beatae pariatur.\n\nQuia et cupiditate eum soluta maxime minima. Ipsa alias cupiditate qui sint. Autem distinctio optio numquam natus incidunt dolorem suscipit voluptatem omnis. Accusantium ut nostrum voluptas quas provident amet sequi aperiam. Animi consequatur dolorem ut et ut accusamus placeat. Libero qui est facilis optio voluptas et assumenda.\n\nEos reiciendis quia eos eum dolor. Quos molestiae et nemo ratione rerum omnis ipsam itaque eligendi. Porro dolorum laudantium consequatur vel ut. Maiores atque quaerat dolorum placeat non sint amet velit. Dolor cupiditate accusantium facilis dolorem nam cupiditate et. Rerum illum praesentium voluptatem aut omnis sequi.\n\nError ut culpa aliquam. Qui laboriosam aliquam aut. Omnis vitae aut ut porro nihil. Expedita rerum sapiente sequi modi. Saepe omnis repellat ea dolor et doloremque dolore et sit.\n\nDoloremque officia voluptatum atque numquam. Architecto ducimus dolores magnam libero sapiente officia voluptas. Cum ratione veniam ullam odio at modi. Porro perferendis totam eaque minus.",
                            Title = "Example Page 1 - Paragraph 4",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 5,
                            Content = "Maxime eligendi deserunt corrupti occaecati corrupti incidunt est modi. Facere minima culpa illum sit repellendus. Consequatur soluta veritatis recusandae quas a. Eius iste dolorum quam atque dolorem corporis. Ipsa eum perferendis quam voluptatem nihil et. Minus saepe aut incidunt.",
                            Title = "Example Page 1 - Paragraph 5",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 6,
                            Content = "Maxime delectus delectus eum tenetur neque sunt nemo. Eum ab quod. Enim tempore facilis nam quam temporibus. Veniam qui expedita.\n\nVoluptas nam porro laudantium. Est molestias sed sit quia quod dolorum dolor. Quae omnis perspiciatis omnis.\n\nLabore soluta animi dolores aut tenetur laudantium. Dignissimos debitis dignissimos expedita est harum sequi eveniet. Nihil cumque ipsa et minima. Excepturi repudiandae asperiores voluptas cupiditate sunt et.\n\nTenetur tempore labore consequatur officiis assumenda repellat. Iusto odit voluptas iure et. Quae rem dignissimos asperiores esse et aut iusto. Voluptatem fugiat odit voluptatem. Placeat et culpa voluptas. Ratione est sapiente qui voluptas ut.",
                            Title = "Example Page 1 - Paragraph 6",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 7,
                            Content = "Distinctio eos veritatis iure. Rerum suscipit commodi est sit ut unde quidem. Perferendis omnis atque deleniti distinctio unde autem exercitationem blanditiis omnis. Ratione omnis illum atque maxime reprehenderit et eos et sunt. Excepturi rem amet molestiae autem quas autem consequuntur eligendi.\n\nSuscipit consequatur dolores qui ipsa eos. Voluptatem id laboriosam ex repellat odit. Eum autem molestias. Rerum libero fuga vel odio distinctio culpa voluptatem rerum ab. Tenetur a magni ad. Ut cum dignissimos numquam.",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 2",
                            Title = "Example Page 2 - Paragraph 1",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 8,
                            Content = "Voluptatem enim dolor deserunt animi explicabo repudiandae. Commodi officia maiores. Earum voluptate animi laboriosam magnam libero delectus rerum. Doloribus aliquid quasi voluptatem. Cupiditate tempore asperiores consectetur omnis. Ipsum iure eaque nihil.\n\nUllam quo ut. Nihil aspernatur molestiae provident sit omnis odio. Inventore est totam odit. Repellat voluptates veniam quo architecto totam consectetur mollitia et.\n\nImpedit odit non excepturi. Vitae iure sunt architecto consequatur minus sed esse minima vel. Et vel aut non quia consequatur placeat et ut. Possimus reiciendis est doloremque autem quis neque veniam.\n\nAperiam consequatur quia quaerat illum quia. Quos quo qui repellat. Ab commodi velit labore in ut est dolorem consequuntur consequatur. Eius ut at earum quas similique.\n\nSed eius in nihil. Eum tenetur delectus facere alias ab voluptate dolorem nesciunt quia. Natus recusandae praesentium aut autem. Velit officiis sit aut illum repellendus sint modi unde laudantium. Dolores earum sint accusamus rem. Iure magnam sint totam impedit ut inventore et.\n\nNatus aliquid sed voluptatibus est fuga totam facilis adipisci. Recusandae dolores minus excepturi. Porro deserunt nihil repudiandae amet soluta.\n\nVoluptatem quisquam sint autem ipsam temporibus. Exercitationem et consequatur. Neque est iusto perferendis voluptatibus adipisci. Deserunt in at nemo dolor iure voluptates. Fuga beatae aut. Libero reprehenderit laborum velit aut iste provident nesciunt.\n\nVoluptas ut magnam a enim nihil iusto. Et magni autem eius ad sequi iure a dolor. Unde minus error. Et voluptatem voluptates consectetur fuga. Labore quae ut ex odit magnam fuga accusamus dolorem.\n\nLabore dolore voluptatem ex id quae sint. Aut ipsum magni dolores esse accusamus debitis commodi deserunt. Ab hic iste dolorem ratione. Accusamus non non aspernatur excepturi suscipit. Fugiat iste blanditiis inventore. Et in culpa aperiam.",
                            Title = "Example Page 2 - Paragraph 2",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 9,
                            Content = "Quidem sed odio ut voluptas minus. Voluptatem vel labore dolores et. Nam at ut non officiis eius. Voluptas rem odio illo laboriosam numquam aut. Facilis molestias corporis.\n\nSit tenetur voluptas nesciunt rerum consequuntur velit in ipsam. Iure qui minima minus culpa ut repellendus sint fugiat expedita. Voluptatibus corrupti unde consequatur quia nam in est. Dolores voluptatem enim magnam. Exercitationem minima ut repellendus corrupti ea. Quia hic quis error dolorem voluptates eveniet dicta.\n\nSint non maxime sequi sapiente. Qui corporis eius doloribus omnis aliquid. Aut sint dolorum autem commodi iusto debitis asperiores at illo. Repudiandae dolores eligendi ducimus nulla quod consectetur. Soluta eligendi accusamus.\n\nSit non porro exercitationem repellendus aliquam voluptas. Iste porro quas. Repellat ipsam rerum soluta voluptatum sed pariatur qui.\n\nOdio eius et consequuntur corporis. Ea consequatur debitis voluptate. Minus omnis occaecati eos numquam earum facilis magni. Saepe cumque pariatur dolorem dolorem rerum doloremque. Nostrum facilis dolor suscipit explicabo sed.\n\nVelit praesentium id et voluptatem laboriosam. Occaecati provident alias expedita nesciunt distinctio. Maiores non exercitationem quam recusandae. Non aliquam error aliquam vel accusantium expedita aut iste et.\n\nOccaecati et sunt vel ut voluptatem autem aliquid. Sint perspiciatis similique ea beatae voluptatem qui necessitatibus saepe est. Est et recusandae voluptatem sed.\n\nHarum cumque animi accusantium. Et perferendis ad. Impedit voluptatem sunt libero consequatur corrupti et. Molestiae exercitationem totam est perferendis doloribus provident officiis sapiente. Voluptatem ea assumenda maxime. Voluptatibus qui illo.\n\nVelit sit culpa veniam earum cumque non eos eius adipisci. Corporis ipsum maxime omnis dolore minima. Ea sit delectus recusandae saepe mollitia. Tempora dignissimos temporibus qui molestiae officiis ab quia deserunt. Est id similique quae debitis et eligendi in. Qui fuga deserunt.\n\nOfficiis quisquam et repudiandae ipsam voluptatem odio. Optio quo fugit sint animi ducimus. Autem vitae officia. Sint sed fuga dignissimos odit exercitationem et ad ea enim. Ipsa labore et dolore quae voluptatem debitis at.",
                            Title = "Example Page 2 - Paragraph 3",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 10,
                            Content = "Quaerat molestias autem tempora perspiciatis delectus optio accusantium velit. Animi et aut quam sapiente. Voluptatum dolore alias ut esse eum. Omnis debitis et quo iusto. Perspiciatis culpa porro itaque nostrum voluptas corrupti vitae. Eius accusamus sint consequuntur quia odit earum.\n\nInventore explicabo optio incidunt ipsum. Culpa itaque ut maxime. Cupiditate eos atque. Consequuntur quasi ea sunt temporibus in veritatis hic praesentium. Sapiente dolor sunt. Optio id laboriosam qui fugiat nobis eveniet.\n\nLibero quia magnam minus quae asperiores aut. Aut officiis eum consequatur minus earum eveniet porro expedita minima. Qui molestiae perferendis. Nam eligendi perferendis cupiditate fugit corporis deleniti sed. Et sed id ex est facilis enim quos facere quo. Non nesciunt qui enim sit magnam quia.\n\nRerum quisquam assumenda qui. Tempore praesentium et eos et in necessitatibus. Ullam modi ea autem repudiandae quas eum consequuntur. Debitis dolorem reiciendis.\n\nOfficiis laboriosam officiis quisquam. Ipsam laudantium voluptatem et aut quas ratione rerum error. Quia doloremque ea eum vero voluptas animi. Et similique est qui ullam aliquid. Est tempora cupiditate voluptatem facilis est. Aut autem cumque ullam.\n\nNemo doloribus explicabo. Accusamus similique quae architecto cupiditate aut ut. Mollitia ad placeat. Eos ex sed nemo occaecati ipsum ut neque vitae laborum. Ea pariatur autem ea et. Qui placeat iste quia aliquid itaque.\n\nUt nostrum veritatis. Eum quam beatae nulla quas qui sequi blanditiis reiciendis. Quae ducimus odit esse atque natus laudantium eos optio illo.\n\nAut est quam sit et. Ea eos quibusdam tempora. Molestiae illo id porro quia doloremque.",
                            Title = "Example Page 2 - Paragraph 4",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 11,
                            Content = "Ut iusto inventore est provident repellat et ratione iusto. Et soluta sit veniam voluptas molestiae ducimus ratione repellat. Cum et eligendi aspernatur.\n\nQuibusdam accusamus temporibus saepe aliquid temporibus molestiae beatae. Ut hic molestiae. Tenetur deserunt debitis.\n\nTemporibus eos aut ut tenetur numquam. Ratione iure architecto qui aut quas. Iure reiciendis dolorem voluptatem est quo. Atque et magni incidunt.\n\nVoluptatem voluptatibus ea ut id quod recusandae et. Et exercitationem voluptatem et et. Fugiat quas minus a occaecati laboriosam modi repudiandae. Eius nostrum hic consequatur quo. Qui et molestiae.\n\nSit est odit voluptatem rerum ea. Id deserunt totam totam tempora. Quibusdam veniam sed possimus et sint inventore commodi. Aperiam quasi rem dolorem iusto facere sit distinctio a.\n\nConsequatur quod deleniti odio id voluptas aspernatur. Animi quia et corrupti occaecati. Ipsa dicta id. Rerum non iusto necessitatibus voluptatibus veritatis nobis quae ipsa enim.",
                            Title = "Example Page 2 - Paragraph 5",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 12,
                            Content = "Optio in pariatur non architecto ex veniam distinctio. Illo qui pariatur ut accusamus sit quia. Voluptatem eum sed ex dolore. Natus beatae modi itaque et quasi.",
                            Title = "Example Page 2 - Paragraph 6",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 13,
                            Content = "User Submitted Content 1",
                            ParagraphImage = "https://i.kym-cdn.com/entries/icons/original/000/029/079/hellothere.jpg",
                            ParagraphImageText = "Hello there",
                            Title = "User Submitted Paragraph 1",
                            WikiPageId = 3
                        },
                        new
                        {
                            Id = 14,
                            Content = "User Submitted Content 2",
                            ParagraphImage = "https://i.ytimg.com/vi/jAB3mMdS0xE/maxresdefault.jpg",
                            ParagraphImageText = "General Kenobi",
                            Title = "User Submitted Paragraph 2",
                            WikiPageId = 3
                        },
                        new
                        {
                            Id = 15,
                            Content = "Helldivers never die!",
                            ParagraphImage = "https://i.ytimg.com/vi/nhhICroqfpU/hq720_live.jpg",
                            ParagraphImageText = "Helldivers never die!",
                            Title = "New Paragraph 1",
                            WikiPageId = 4
                        },
                        new
                        {
                            Id = 16,
                            Content = "Liber-Tea is a funny line haha",
                            ParagraphImage = "https://i.kym-cdn.com/photos/images/original/002/760/001/66d",
                            ParagraphImageText = "Time for a nice cup of Liber-Tea",
                            Title = "Liber-Tea",
                            WikiPageId = 4
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.StyleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightInnerColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListLinkTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WikiName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleColor = "#526cad",
                            ArticleRightColor = "#3c5fb8",
                            ArticleRightInnerColor = "#2b4ea6",
                            BodyColor = "#507ced",
                            FooterListLinkTextColor = "#1d305e",
                            FooterListTextColor = "#233a71",
                            Logo = "/img/logo.png",
                            WikiName = "Your Wiki"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReply")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReplayToCommentId")
                        .HasColumnType("int");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.Property<int>("WikiPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReplayToCommentId");

                    b.HasIndex("UserProfileId");

                    b.HasIndex("WikiPageId");

                    b.ToTable("UserComments");
                });

            modelBuilder.Entity("wiki_backend.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteSub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WikiPages");

                    b.HasDiscriminator<string>("Discriminator").HasValue("WikiPage");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleNote = "Example RoleNote 1",
                            SiteSub = "Example SiteSub 1",
                            Title = "Example Page 1"
                        },
                        new
                        {
                            Id = 2,
                            RoleNote = "Example RoleNote 2",
                            SiteSub = "Example SiteSub 2",
                            Title = "Example Page 2"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasBaseType("wiki_backend.Models.WikiPage");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNewPage")
                        .HasColumnType("bit");

                    b.Property<string>("SubmittedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WikiPageId")
                        .HasColumnType("int");

                    b.HasIndex("WikiPageId");

                    b.HasDiscriminator().HasValue("UserSubmittedWikiPage");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            RoleNote = "User Submitted RoleNote",
                            SiteSub = "User Submitted SiteSub",
                            Title = "User Submitted Page",
                            Approved = false,
                            IsNewPage = true,
                            SubmittedBy = "tester"
                        },
                        new
                        {
                            Id = 4,
                            RoleNote = "Example RoleNote 1 Update",
                            SiteSub = "Example SiteSub 1 Update",
                            Title = "Example Page 1",
                            Approved = false,
                            IsNewPage = false,
                            SubmittedBy = "tester",
                            WikiPageId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("wiki_backend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("wiki_backend.Models.ApplicationUser", b =>
                {
                    b.HasOne("wiki_backend.Models.UserProfile", "Profile")
                        .WithOne("User")
                        .HasForeignKey("wiki_backend.Models.ApplicationUser", "ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany("Paragraphs")
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserComment", b =>
                {
                    b.HasOne("wiki_backend.Models.UserComment", "ReplyToComment")
                        .WithMany()
                        .HasForeignKey("ReplayToCommentId");

                    b.HasOne("wiki_backend.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany("Comments")
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReplyToComment");

                    b.Navigation("UserProfile");

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany()
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserProfile", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Paragraphs");
                });
#pragma warning restore 612, 618
        }
    }
}
