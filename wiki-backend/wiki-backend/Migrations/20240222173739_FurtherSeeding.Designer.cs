// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wiki_backend.DatabaseServices;

#nullable disable

namespace wiki_backend.Migrations
{
    [DbContext(typeof(WikiDbContext))]
    [Migration("20240222173739_FurtherSeeding")]
    partial class FurtherSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphImageText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WikiPageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WikiPageId");

                    b.ToTable("Paragraphs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Aut laudantium quisquam ut. Perspiciatis id rerum reprehenderit qui adipisci totam molestiae. Voluptatem ullam et eligendi consequatur magni id commodi eligendi et. Quia fugiat corrupti sint dolor.\n\nMolestias laudantium molestias asperiores aut exercitationem. Ea laudantium eos. Quia et ut temporibus. Dolor culpa maiores quas similique minus. Veritatis culpa qui voluptatem sint quia veniam delectus. Nihil minus et fuga aut mollitia officia natus sed.\n\nIllo eius voluptas magnam saepe rem cupiditate. Odit officiis quis ipsa et nostrum placeat doloribus. Tenetur consequatur hic sint ratione laboriosam nobis et. Non nesciunt aut ullam quaerat. Reiciendis aliquam quod autem dignissimos. Laudantium sit non quidem nulla ut non nemo ut.\n\nDeleniti minima incidunt id non necessitatibus ipsam. Laboriosam ea molestiae aut eos dolorum. Saepe in fugit deleniti quas.",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 1",
                            Title = "Example Page 1 - Paragraph 1",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Ratione veritatis odio commodi officiis magni autem voluptates sit. Nulla ut blanditiis alias quis tempora consequatur eaque iste. Ad itaque enim voluptas sit. Voluptatem quia consectetur dolorum eaque enim voluptatum sint esse. Excepturi aut aliquam hic officia qui nostrum nisi consequuntur. Dolore et sunt est facilis dicta vitae harum.\n\nEst neque ullam aut modi alias doloribus facere odit. Repudiandae esse sed rerum. Commodi fugiat voluptatum fugit consequatur. Sed molestiae inventore occaecati veniam voluptatum doloremque et. Reiciendis repellendus ab fugit a voluptatem est. Itaque libero et saepe aut.\n\nIpsam totam cum dicta officia enim sed est. Qui et a officiis necessitatibus et. Ut est ut recusandae. Rerum debitis minus quis.",
                            Title = "Example Page 1 - Paragraph 2",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Ab libero repellat quos. Quo harum natus unde reiciendis nostrum aut dicta porro. Autem explicabo doloribus maiores corrupti itaque modi.\n\nLaboriosam quis in pariatur facere recusandae est perferendis. Pariatur ratione iste dolor eum ab nobis. Qui consectetur vitae aliquid dolorum occaecati est.\n\nRepudiandae qui et nisi. Sequi molestiae minima ut odio nobis qui dolorem laudantium quibusdam. Praesentium ipsum quia necessitatibus est architecto ex qui.\n\nAut quibusdam est sed quidem ducimus et velit. Voluptatem voluptatum repellat quod ea pariatur doloribus totam. Possimus voluptatibus ut sunt. Voluptas alias dicta esse.\n\nQui itaque dolor quidem neque iure labore. Quia magni quia. Aut ab recusandae quidem error impedit earum sunt molestiae. Nihil tenetur ex est numquam facilis animi. Sint consequatur earum cupiditate sint molestiae cum vel. Laboriosam aut quibusdam voluptatem ducimus amet.\n\nIllo eos id minus iusto id aut animi. Quaerat labore dolor autem vel quas veniam assumenda ratione magni. Esse consequatur quia iusto aut inventore autem atque. Deleniti nam in et. Autem esse optio cumque. Veniam eveniet quasi.\n\nVoluptas corrupti repudiandae saepe debitis reprehenderit ipsam. Facere aut id aut aut a accusantium at provident. Rerum sit deleniti.\n\nVoluptatem officia et amet. Iure consequatur veniam. Nam reiciendis deleniti et saepe delectus et iusto voluptatem.\n\nDeserunt eum officia atque quae autem saepe. Labore dolores vel itaque veritatis. Minus blanditiis et iure quia. Molestiae aut sunt nostrum. Et dolores sed dolorem blanditiis vel optio odio tempora.",
                            Title = "Example Page 1 - Paragraph 3",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "Et veniam atque et possimus. Id aut tempore omnis eum soluta. Qui ducimus voluptatibus non non maxime. Sunt non veritatis nihil veniam quos.\n\nEnim fugiat hic quis quis sed accusantium sunt odit aut. Aliquam adipisci molestias maxime nihil ea voluptatibus omnis qui. Recusandae inventore iste beatae atque velit eum praesentium possimus quis. Possimus nesciunt in. Recusandae consequatur aut consequuntur et nemo quibusdam consequatur aut ullam. In eligendi alias.",
                            Title = "Example Page 1 - Paragraph 4",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 5,
                            Content = "Eligendi id reiciendis natus ratione itaque quam. Suscipit qui molestias nihil ea ipsa vel et. Nihil qui natus. Dolorem sunt nemo nisi eveniet necessitatibus est consequatur.\n\nQuidem deleniti dolores assumenda harum qui repellat perferendis eum exercitationem. Corporis non ut. Dicta quae dolorem aut voluptate quis labore id. Ex possimus non fugiat cupiditate. Quia iusto sunt impedit ex similique.\n\nQuia doloribus animi corporis distinctio. Eveniet dolorum nostrum nemo nemo iusto. Vel labore dolorem sint porro hic provident ipsa expedita enim. Aut aspernatur tenetur omnis sed nobis et necessitatibus.\n\nEt porro non aut quam voluptatem esse. Ut est culpa ipsam quaerat. Officia eos explicabo. Nobis aspernatur molestiae.",
                            Title = "Example Page 1 - Paragraph 5",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 6,
                            Content = "Ut quo excepturi sit earum quas consequatur placeat illum maiores. Laboriosam voluptate placeat dolorem id natus voluptas laboriosam ducimus dicta. Voluptas minima amet et eum aut autem. Error odit consequatur. Fuga eligendi et cumque. Voluptatum amet excepturi sit voluptatem eum.\n\nQuas doloremque molestias aut dicta nulla dolores inventore quis impedit. Molestiae molestias veritatis. Rerum odio quasi sint. Dignissimos et eos explicabo neque mollitia. Aut eos est quia rerum iste placeat nihil. Veniam qui eligendi deserunt error et ut et.\n\nEaque dolorem molestias. Quam deserunt quia veritatis repellendus. Omnis corrupti ratione esse nam ut saepe sed in. Sed sed quasi totam.\n\nEx dolore voluptates et ratione consequuntur. Placeat amet nihil dolor voluptatem. Aut corrupti et. Et a ab. Voluptas quae repellendus explicabo debitis excepturi expedita ut non. Iure saepe est magnam labore magni voluptas qui.",
                            Title = "Example Page 1 - Paragraph 6",
                            WikiPageId = 1
                        },
                        new
                        {
                            Id = 7,
                            Content = "Illo consequuntur fugiat facere. Ut occaecati facilis nisi vero. Sunt nihil non. Dolor consequatur veritatis illo magni voluptas quia totam qui. Et assumenda voluptatem impedit sunt itaque doloremque. Ipsum reprehenderit eligendi omnis numquam cupiditate.\n\nCulpa ut dolorem quo ut aut quia. Enim fugiat autem voluptate sint incidunt. Qui perferendis delectus iste deserunt quia vel. Et deleniti et quia neque consequuntur. Impedit provident odio nulla minima ut temporibus. Placeat at eum est nostrum non neque quis est voluptate.\n\nLabore distinctio omnis labore. Repudiandae nihil velit aliquid itaque corporis nisi nam quidem similique. Id sed similique unde neque nobis sunt ut inventore non. Reiciendis voluptatem harum ut necessitatibus nam quis ex consequatur repellat. Autem veritatis ut architecto enim facilis quisquam rerum aperiam dolorem.\n\nRepellat repudiandae modi ducimus est voluptatem eius in aperiam illum. Vero aut cupiditate. Perspiciatis et vel quia ut natus excepturi. Eligendi et qui minima rerum fuga voluptas laboriosam. Maiores earum repellat autem nemo porro cumque vel.",
                            ParagraphImage = "https://html5-templates.com/demo/wikipedia-template/img/pencil.jpg",
                            ParagraphImageText = "Example ParagraphImageText 2",
                            Title = "Example Page 2 - Paragraph 1",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 8,
                            Content = "Ea dolores omnis dolores possimus. Vel totam ut dignissimos. Tempore quidem velit ipsam quis aut. Porro at omnis. Rerum aspernatur illum commodi sed iure. Nesciunt doloremque id.\n\nQuia non inventore voluptas. Veniam sed dicta ut. Cum exercitationem a.\n\nEt ut et repudiandae asperiores et possimus consequatur. Quidem sed voluptas quis occaecati molestiae autem dolore. Ullam maxime perferendis eos nihil soluta non aut. Quisquam ratione et et. Itaque dignissimos reprehenderit sequi nihil qui quasi repellat illo ut.",
                            Title = "Example Page 2 - Paragraph 2",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 9,
                            Content = "Non id dignissimos et consequatur vel dolorem exercitationem. Quaerat qui inventore rerum dignissimos id animi aut veniam. Quia harum fuga. Sapiente aliquid quaerat fugit. Et recusandae et esse deleniti praesentium non soluta in.\n\nHic accusamus non dicta. Aut consequatur tenetur animi repudiandae nihil. Nam reiciendis fuga officia quas numquam commodi enim ab repudiandae. Deserunt aut voluptas quod expedita aut consequatur sunt. Fuga facilis eius placeat. Aut molestias pariatur qui ut similique voluptatum fuga quae aspernatur.\n\nPraesentium voluptas enim possimus voluptatibus est. Vel magnam sunt magni. Sit mollitia sit nihil illo neque. Est ad consectetur repellat rerum dolor. Minima itaque repellat corporis.\n\nSequi vitae aliquam porro aliquam fuga natus dignissimos consequatur ut. Qui nulla accusantium recusandae ducimus. Ad animi aut. Necessitatibus quam sit asperiores dolorum aut qui. Odit ipsum repellendus earum inventore ut optio facere quasi. Sit ipsa ea magnam.\n\nBlanditiis quisquam earum voluptate magni corrupti sunt consequatur numquam. Voluptate id veritatis ut. Possimus facilis qui occaecati adipisci cum autem laudantium ut vel. Recusandae adipisci laborum ullam. Magnam sint repudiandae ea aut nihil ipsa est corrupti sint.\n\nEum animi velit vel itaque id voluptatem. Ut sed amet illum. Rerum molestias necessitatibus rem.\n\nFugit aut et veritatis occaecati. Qui consequatur a est exercitationem modi. Eos repudiandae saepe nihil. Quam dolores vitae. Repudiandae quia expedita possimus occaecati.\n\nPariatur dicta rem quis aut voluptas aspernatur enim quasi. Qui consequuntur aperiam ab eaque. Ab numquam sapiente sunt consequatur in. Mollitia aspernatur ut.",
                            Title = "Example Page 2 - Paragraph 3",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 10,
                            Content = "Odio molestias voluptates vero nemo maxime molestias sed voluptatibus. Non vel laudantium dignissimos quia aperiam quod aut et reiciendis. Error reprehenderit repudiandae repudiandae ut autem accusantium. Nesciunt sint est sed.\n\nFuga nisi velit unde maxime ipsum est. Et eaque sapiente quod aut nihil nihil. Accusamus maiores vitae deleniti magni quam.\n\nIste velit sunt eos nobis voluptatum laborum mollitia et. Dolorem non aperiam. Eum occaecati molestiae praesentium doloribus ut. Ducimus repellendus qui et. Exercitationem eum hic. Id consequatur maiores iste itaque et repellendus.\n\nPorro quas est libero vel ipsam. A amet qui ea enim enim placeat sed. In et est velit molestiae.\n\nIpsam debitis odio magni voluptates reiciendis odio. Et quaerat saepe qui vitae voluptas culpa ut. Deleniti omnis praesentium ipsa ut. Tenetur sed et accusamus unde fugit sequi. Dolores reprehenderit magnam est repudiandae.\n\nOmnis eos reprehenderit reiciendis quidem fugiat voluptas vitae. Corporis recusandae autem a dolores non voluptatem. Id pariatur nesciunt pariatur et dolores.\n\nTotam est qui ullam veniam ipsa. Sit et libero enim. Natus perferendis error. Iste non sit ut beatae velit. At ut ut unde occaecati.\n\nEnim expedita provident voluptatem quaerat quod odit maxime provident. Et itaque est alias quia qui. Quibusdam quia ut dolorem esse. At alias autem molestiae in non.",
                            Title = "Example Page 2 - Paragraph 4",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 11,
                            Content = "Sed enim occaecati labore. Molestiae dolore voluptate iusto impedit nobis. Et est adipisci consequatur aut dicta ducimus eligendi iste qui. Et enim hic veniam sunt excepturi a.\n\nOmnis sit et numquam et atque at facere numquam. Quam et quis voluptatem atque nisi. Quibusdam aut nihil odit rerum velit et consequatur impedit voluptas. Porro et a sed. Beatae impedit commodi deserunt autem eos praesentium eius. Dolorem est porro maiores minima quo qui.\n\nIllo quasi soluta impedit veniam dicta animi. Ut et voluptatibus et aliquid nihil expedita omnis. Quis accusantium nulla enim sint molestiae. Velit voluptas dolores modi praesentium. In qui reprehenderit repudiandae nam eaque harum sequi ipsam. Qui voluptatibus a occaecati.",
                            Title = "Example Page 2 - Paragraph 5",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 12,
                            Content = "Quia quam dignissimos similique voluptatem placeat ea. Labore ut eligendi. Saepe molestias omnis autem itaque quia eos.\n\nAutem debitis est libero natus aut esse vitae. Asperiores necessitatibus rerum dolor dolore velit aut distinctio. Molestias nostrum autem consequuntur expedita. Non qui voluptatem sequi debitis corrupti.\n\nQui quo similique. Occaecati placeat ab consequuntur labore velit vel tenetur nobis. Et tenetur non saepe sed a molestias inventore voluptatem. Molestias aut hic deserunt. Natus adipisci eum non.\n\nLaudantium ea neque dolorum et labore omnis fugiat. Itaque et aut vero sed consequuntur. Qui ab laudantium consequuntur libero cum rem. Est autem voluptas. Aut natus mollitia deleniti mollitia debitis eaque.\n\nEt nihil ullam et nulla quas tenetur cum. Exercitationem quia ullam porro et neque ad tenetur distinctio. Reprehenderit tempore hic. Quod dolore ipsa molestias omnis at illo atque id. Est ullam eum non beatae fugiat animi consequatur aut aut.\n\nSed atque animi assumenda. Dicta cum ut. Veritatis odit atque quaerat aut nemo. Blanditiis facilis delectus corrupti officia debitis minima autem cumque veniam. Ad repellendus et itaque. Sed culpa facilis quibusdam at voluptate qui.\n\nQuos a voluptatem distinctio et. Sed voluptas non eum debitis quis et rerum. Omnis sed voluptatibus sunt delectus qui. Cum temporibus qui. Totam magnam id quo animi voluptas ea. Praesentium laudantium et sed modi perferendis delectus.\n\nEt rerum provident qui ut a. Dolorem magni ipsum minus molestiae reiciendis dolores. Exercitationem ut beatae nemo.",
                            Title = "Example Page 2 - Paragraph 6",
                            WikiPageId = 2
                        },
                        new
                        {
                            Id = 13,
                            Content = "User Submitted Content 1",
                            ParagraphImage = "https://i.kym-cdn.com/entries/icons/original/000/029/079/hellothere.jpg",
                            ParagraphImageText = "Hello there",
                            Title = "User Submitted Paragraph 1",
                            WikiPageId = 3
                        },
                        new
                        {
                            Id = 14,
                            Content = "User Submitted Content 2",
                            ParagraphImage = "https://i.ytimg.com/vi/jAB3mMdS0xE/maxresdefault.jpg",
                            ParagraphImageText = "General Kenobi",
                            Title = "User Submitted Paragraph 2",
                            WikiPageId = 3
                        },
                        new
                        {
                            Id = 15,
                            Content = "Helldivers never die!",
                            ParagraphImage = "https://i.ytimg.com/vi/nhhICroqfpU/hq720_live.jpg",
                            ParagraphImageText = "Helldivers never die!",
                            Title = "New Paragraph 1",
                            WikiPageId = 4
                        },
                        new
                        {
                            Id = 16,
                            Content = "Liber-Tea is a funny line haha",
                            ParagraphImage = "https://i.kym-cdn.com/photos/images/original/002/760/001/66d",
                            ParagraphImageText = "Time for a nice cup of Liber-Tea",
                            Title = "Liber-Tea",
                            WikiPageId = 4
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.StyleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleRightInnerColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListLinkTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterListTextColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WikiName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleColor = "#526cad",
                            ArticleRightColor = "#3c5fb8",
                            ArticleRightInnerColor = "#2b4ea6",
                            BodyColor = "#507ced",
                            FooterListLinkTextColor = "#1d305e",
                            FooterListTextColor = "#233a71",
                            Logo = "/img/logo.png",
                            WikiName = "Your Wiki"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteSub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WikiPages");

                    b.HasDiscriminator<string>("Discriminator").HasValue("WikiPage");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleNote = "Example RoleNote 1",
                            SiteSub = "Example SiteSub 1",
                            Title = "Example Page 1"
                        },
                        new
                        {
                            Id = 2,
                            RoleNote = "Example RoleNote 2",
                            SiteSub = "Example SiteSub 2",
                            Title = "Example Page 2"
                        });
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasBaseType("wiki_backend.Models.WikiPage");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNewPage")
                        .HasColumnType("bit");

                    b.Property<string>("SubmittedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WikiPageId")
                        .HasColumnType("int");

                    b.HasIndex("WikiPageId");

                    b.HasDiscriminator().HasValue("UserSubmittedWikiPage");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            RoleNote = "User Submitted RoleNote",
                            SiteSub = "User Submitted SiteSub",
                            Title = "User Submitted Page",
                            Approved = false,
                            IsNewPage = true,
                            SubmittedBy = "tester"
                        },
                        new
                        {
                            Id = 4,
                            RoleNote = "Example RoleNote 1 Update",
                            SiteSub = "Example SiteSub 1 Update",
                            Title = "Example Page 1",
                            Approved = false,
                            IsNewPage = false,
                            SubmittedBy = "tester",
                            WikiPageId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("wiki_backend.Models.Paragraph", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany("Paragraphs")
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.UserSubmittedWikiPage", b =>
                {
                    b.HasOne("wiki_backend.Models.WikiPage", "WikiPage")
                        .WithMany()
                        .HasForeignKey("WikiPageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("WikiPage");
                });

            modelBuilder.Entity("wiki_backend.Models.WikiPage", b =>
                {
                    b.Navigation("Paragraphs");
                });
#pragma warning restore 612, 618
        }
    }
}
